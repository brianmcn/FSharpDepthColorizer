// Implementation file for parser generated by fsyacc
module internal Microsoft.FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 1 "pars.fsy"

//----------------------------------------------------------------------------
//
// Copyright (c) 2002-2010 Microsoft Corporation. 
//
// This source code is subject to terms and conditions of the Apache License, Version 2.0. A 
// copy of the license can be found in the License.html file at the root of this distribution. 
// By using this source code in any fashion, you are agreeing to be bound 
// by the terms of the Apache License, Version 2.0.
//
// You must not remove this notice, or any other, from this software.
//----------------------------------------------------------------------------

#nowarn "1182"  // generated code has lots of unused "parseState"

open Internal.Utilities

open Microsoft.FSharp.Compiler.AbstractIL
open Microsoft.FSharp.Compiler.AbstractIL.Internal
open Microsoft.FSharp.Compiler.AbstractIL.Internal.Library
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Parsing

open System
open Microsoft.FSharp.Compiler.Range
open Microsoft.FSharp.Compiler.Ast
open Microsoft.FSharp.Compiler.Lib
open Microsoft.FSharp.Compiler.PrettyNaming



let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m Ast.FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, mkSynLidGet m Ast.FSharpLib.CorePath "Some",x,m)

let mkSynDoBinding (vis,strict,expr,m) = 
    if isSome vis then errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations(),m));
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false,false,[],PreXmlDoc.Empty,SynInfo.emptyValSynData,
             (if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             None,expr,m,NoSequencePointAtDoBinding)

let mkSynDoDecl (e: SynExpr, m) = 
    let spExpr = if IsControlFlowExpression e then NoSequencePointAtDoBinding else SequencePointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, m)

let addAttribs attrs p =  SynPat.Attrib(p,attrs,p.Range)

// error recovery
let arbExpr(parseState) = SynExpr.ArbitraryAfterError(lhs(parseState))

// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box(ctxt), getLexerRange ctxt.ParseState.LexBuffer)))

let reportParseErrorAt m s = errorR(Error(s,m))


let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m) -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m) ->  reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.VerbatimString (_,m) ->  reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m) ->  reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.TokenizedComment (_,_,m) ->  reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.CommentString (_,_,m) -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.CommentVerbatimString (_,_,m) -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.MLOnly (_,m) -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list)

let mkClassMemberLocalBindings(isStatic,wholem,attrs,vis,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs)) = 
   let ignoredFreeAttrs,decls = declsPreAttrs attrs vis
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),wholem));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(),wholem));
   SynMemberDefn.LetBindings (decls,isStatic,isRec,wholem)

let mkLocalBindings (wholem,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs),body) = 
   let ignoredFreeAttrs,decls = declsPreAttrs [] None 
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),wholem));
   SynExpr.LetOrUse (isRec,isUse,decls,body,wholem) 

let mkDefnBindings (wholem,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs),attrs,vis,attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(),wholem));
    let freeAttrs,decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec,decls,wholem) ] 
    let attrDecls = if nonNil freeAttrs then [ SynModuleDecl.Attributes (freeAttrs,attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat m p = 
    match p with 
    | SynPat.Named (SynPat.Wild _,id,false,_,_) -> id 
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let grabXmlDoc(parseState:IParseState,elemIdx) = 
    LexbufLocalXmlDocStore.GrabXML(parseState.LexBuffer,rhs parseState elemIdx)



# 125 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * Ast.LexerWhitespaceContinuation)
  | COMMENT of (Ast.LexerWhitespaceContinuation)
  | WHITESPACE of (Ast.LexerWhitespaceContinuation)
  | HASH_LINE of (Ast.LexerWhitespaceContinuation)
  | HASH_LIGHT of (Ast.LexerWhitespaceContinuation)
  | INACTIVECODE of (Ast.LexerWhitespaceContinuation)
  | LINE_COMMENT of (Ast.LexerWhitespaceContinuation)
  | STRING_TEXT of (Ast.LexerWhitespaceContinuation)
  | EOF of (Ast.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM_interaction
    | NONTERM_hashDirective
    | NONTERM_stringOrKeywordString
    | NONTERM_hashDirectiveArg
    | NONTERM_hashDirectiveArgs
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveModuleDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_signatureFile
    | NONTERM_implementationFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleSpec
    | NONTERM_fileModuleImpl
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_opt_signature
    | NONTERM_tyconDefnAugmentation
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_opt_literalValue
    | NONTERM_moduleSpecBlock
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_memberFlags
    | NONTERM_memberSpecFlags
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_classMemberSpfn
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_opt_classSpfn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_prefixTyparDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_unionRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exconSpfn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_constrPattern
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_monadicSingleLineQualifiersThenArrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_opt_inlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_recdExprBindings
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_forLoopDirection
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrexifArguments
    | NONTERM_typeListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_barName
    | NONTERM_barNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_interactiveSeparators
    | NONTERM_opt_interactiveSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_opt_HASH
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | ORIGHT_BLOCK_END  -> 15 
  | ODECLEND  -> 16 
  | OEND  -> 17 
  | OBLOCKSEP  -> 18 
  | OBLOCKBEGIN  -> 19 
  | ORESET  -> 20 
  | OFUN  -> 21 
  | OFUNCTION  -> 22 
  | OWITH  -> 23 
  | OELSE  -> 24 
  | OTHEN  -> 25 
  | ODO_BANG  -> 26 
  | ODO  -> 27 
  | OBINDER _ -> 28 
  | OLET _ -> 29 
  | HIGH_PRECEDENCE_TYAPP  -> 30 
  | HIGH_PRECEDENCE_PAREN_APP  -> 31 
  | HIGH_PRECEDENCE_BRACK_APP  -> 32 
  | EXTERN  -> 33 
  | VOID  -> 34 
  | PUBLIC  -> 35 
  | PRIVATE  -> 36 
  | INTERNAL  -> 37 
  | GLOBAL  -> 38 
  | STATIC  -> 39 
  | MEMBER  -> 40 
  | CLASS  -> 41 
  | ABSTRACT  -> 42 
  | OVERRIDE  -> 43 
  | DEFAULT  -> 44 
  | CONSTRUCTOR  -> 45 
  | INHERIT  -> 46 
  | GREATER_RBRACK  -> 47 
  | STRUCT  -> 48 
  | SIG  -> 49 
  | BAR  -> 50 
  | RBRACK  -> 51 
  | RBRACE  -> 52 
  | MINUS  -> 53 
  | DOLLAR  -> 54 
  | LBRACE_LESS  -> 55 
  | BAR_RBRACK  -> 56 
  | GREATER_RBRACE  -> 57 
  | UNDERSCORE  -> 58 
  | SEMICOLON_SEMICOLON  -> 59 
  | LARROW  -> 60 
  | EQUALS  -> 61 
  | LBRACK  -> 62 
  | LBRACK_BAR  -> 63 
  | LBRACK_LESS  -> 64 
  | LBRACE  -> 65 
  | QMARK  -> 66 
  | QMARK_QMARK  -> 67 
  | DOT  -> 68 
  | COLON  -> 69 
  | COLON_COLON  -> 70 
  | COLON_GREATER  -> 71 
  | COLON_QMARK_GREATER  -> 72 
  | COLON_QMARK  -> 73 
  | COLON_EQUALS  -> 74 
  | SEMICOLON  -> 75 
  | WHEN  -> 76 
  | WHILE  -> 77 
  | WITH  -> 78 
  | HASH  -> 79 
  | AMP  -> 80 
  | AMP_AMP  -> 81 
  | QUOTE  -> 82 
  | LPAREN  -> 83 
  | RPAREN  -> 84 
  | STAR  -> 85 
  | COMMA  -> 86 
  | RARROW  -> 87 
  | GREATER_BAR_RBRACK  -> 88 
  | LPAREN_STAR_RPAREN  -> 89 
  | OPEN  -> 90 
  | OR  -> 91 
  | REC  -> 92 
  | THEN  -> 93 
  | TO  -> 94 
  | TRUE  -> 95 
  | TRY  -> 96 
  | TYPE  -> 97 
  | VAL  -> 98 
  | INLINE  -> 99 
  | INTERFACE  -> 100 
  | INSTANCE  -> 101 
  | LAZY  -> 102 
  | OLAZY  -> 103 
  | MATCH  -> 104 
  | MUTABLE  -> 105 
  | NEW  -> 106 
  | OF  -> 107 
  | EXCEPTION  -> 108 
  | FALSE  -> 109 
  | FOR  -> 110 
  | FUN  -> 111 
  | FUNCTION  -> 112 
  | IF  -> 113 
  | IN  -> 114 
  | FINALLY  -> 115 
  | DO_BANG  -> 116 
  | AND  -> 117 
  | AS  -> 118 
  | ASSERT  -> 119 
  | OASSERT  -> 120 
  | ASR  -> 121 
  | BEGIN  -> 122 
  | DO  -> 123 
  | DONE  -> 124 
  | DOWNTO  -> 125 
  | ELSE  -> 126 
  | ELIF  -> 127 
  | END  -> 128 
  | DOT_DOT  -> 129 
  | BAR_BAR  -> 130 
  | UPCAST  -> 131 
  | DOWNCAST  -> 132 
  | NULL  -> 133 
  | RESERVED  -> 134 
  | MODULE  -> 135 
  | NAMESPACE  -> 136 
  | DELEGATE  -> 137 
  | CONSTRAINT  -> 138 
  | BASE  -> 139 
  | LQUOTE _ -> 140 
  | RQUOTE _ -> 141 
  | RQUOTE_DOT _ -> 142 
  | PERCENT_OP _ -> 143 
  | BINDER _ -> 144 
  | LESS _ -> 145 
  | GREATER _ -> 146 
  | LET _ -> 147 
  | YIELD _ -> 148 
  | YIELD_BANG _ -> 149 
  | BIGNUM _ -> 150 
  | DECIMAL _ -> 151 
  | CHAR _ -> 152 
  | IEEE64 _ -> 153 
  | IEEE32 _ -> 154 
  | NATIVEINT _ -> 155 
  | UNATIVEINT _ -> 156 
  | UINT64 _ -> 157 
  | UINT32 _ -> 158 
  | UINT16 _ -> 159 
  | UINT8 _ -> 160 
  | INT64 _ -> 161 
  | INT32 _ -> 162 
  | INT32_DOT_DOT _ -> 163 
  | INT16 _ -> 164 
  | INT8 _ -> 165 
  | FUNKY_OPERATOR_NAME _ -> 166 
  | ADJACENT_PREFIX_OP _ -> 167 
  | PLUS_MINUS_OP _ -> 168 
  | INFIX_AMP_OP _ -> 169 
  | INFIX_STAR_DIV_MOD_OP _ -> 170 
  | PREFIX_OP _ -> 171 
  | INFIX_BAR_OP _ -> 172 
  | INFIX_AT_HAT_OP _ -> 173 
  | INFIX_COMPARE_OP _ -> 174 
  | INFIX_STAR_STAR_OP _ -> 175 
  | IDENT _ -> 176 
  | KEYWORD_STRING _ -> 177 
  | STRING _ -> 178 
  | BYTEARRAY _ -> 179 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_ORIGHT_BLOCK_END 
  | 16 -> TOKEN_ODECLEND 
  | 17 -> TOKEN_OEND 
  | 18 -> TOKEN_OBLOCKSEP 
  | 19 -> TOKEN_OBLOCKBEGIN 
  | 20 -> TOKEN_ORESET 
  | 21 -> TOKEN_OFUN 
  | 22 -> TOKEN_OFUNCTION 
  | 23 -> TOKEN_OWITH 
  | 24 -> TOKEN_OELSE 
  | 25 -> TOKEN_OTHEN 
  | 26 -> TOKEN_ODO_BANG 
  | 27 -> TOKEN_ODO 
  | 28 -> TOKEN_OBINDER 
  | 29 -> TOKEN_OLET 
  | 30 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 31 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 32 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 33 -> TOKEN_EXTERN 
  | 34 -> TOKEN_VOID 
  | 35 -> TOKEN_PUBLIC 
  | 36 -> TOKEN_PRIVATE 
  | 37 -> TOKEN_INTERNAL 
  | 38 -> TOKEN_GLOBAL 
  | 39 -> TOKEN_STATIC 
  | 40 -> TOKEN_MEMBER 
  | 41 -> TOKEN_CLASS 
  | 42 -> TOKEN_ABSTRACT 
  | 43 -> TOKEN_OVERRIDE 
  | 44 -> TOKEN_DEFAULT 
  | 45 -> TOKEN_CONSTRUCTOR 
  | 46 -> TOKEN_INHERIT 
  | 47 -> TOKEN_GREATER_RBRACK 
  | 48 -> TOKEN_STRUCT 
  | 49 -> TOKEN_SIG 
  | 50 -> TOKEN_BAR 
  | 51 -> TOKEN_RBRACK 
  | 52 -> TOKEN_RBRACE 
  | 53 -> TOKEN_MINUS 
  | 54 -> TOKEN_DOLLAR 
  | 55 -> TOKEN_LBRACE_LESS 
  | 56 -> TOKEN_BAR_RBRACK 
  | 57 -> TOKEN_GREATER_RBRACE 
  | 58 -> TOKEN_UNDERSCORE 
  | 59 -> TOKEN_SEMICOLON_SEMICOLON 
  | 60 -> TOKEN_LARROW 
  | 61 -> TOKEN_EQUALS 
  | 62 -> TOKEN_LBRACK 
  | 63 -> TOKEN_LBRACK_BAR 
  | 64 -> TOKEN_LBRACK_LESS 
  | 65 -> TOKEN_LBRACE 
  | 66 -> TOKEN_QMARK 
  | 67 -> TOKEN_QMARK_QMARK 
  | 68 -> TOKEN_DOT 
  | 69 -> TOKEN_COLON 
  | 70 -> TOKEN_COLON_COLON 
  | 71 -> TOKEN_COLON_GREATER 
  | 72 -> TOKEN_COLON_QMARK_GREATER 
  | 73 -> TOKEN_COLON_QMARK 
  | 74 -> TOKEN_COLON_EQUALS 
  | 75 -> TOKEN_SEMICOLON 
  | 76 -> TOKEN_WHEN 
  | 77 -> TOKEN_WHILE 
  | 78 -> TOKEN_WITH 
  | 79 -> TOKEN_HASH 
  | 80 -> TOKEN_AMP 
  | 81 -> TOKEN_AMP_AMP 
  | 82 -> TOKEN_QUOTE 
  | 83 -> TOKEN_LPAREN 
  | 84 -> TOKEN_RPAREN 
  | 85 -> TOKEN_STAR 
  | 86 -> TOKEN_COMMA 
  | 87 -> TOKEN_RARROW 
  | 88 -> TOKEN_GREATER_BAR_RBRACK 
  | 89 -> TOKEN_LPAREN_STAR_RPAREN 
  | 90 -> TOKEN_OPEN 
  | 91 -> TOKEN_OR 
  | 92 -> TOKEN_REC 
  | 93 -> TOKEN_THEN 
  | 94 -> TOKEN_TO 
  | 95 -> TOKEN_TRUE 
  | 96 -> TOKEN_TRY 
  | 97 -> TOKEN_TYPE 
  | 98 -> TOKEN_VAL 
  | 99 -> TOKEN_INLINE 
  | 100 -> TOKEN_INTERFACE 
  | 101 -> TOKEN_INSTANCE 
  | 102 -> TOKEN_LAZY 
  | 103 -> TOKEN_OLAZY 
  | 104 -> TOKEN_MATCH 
  | 105 -> TOKEN_MUTABLE 
  | 106 -> TOKEN_NEW 
  | 107 -> TOKEN_OF 
  | 108 -> TOKEN_EXCEPTION 
  | 109 -> TOKEN_FALSE 
  | 110 -> TOKEN_FOR 
  | 111 -> TOKEN_FUN 
  | 112 -> TOKEN_FUNCTION 
  | 113 -> TOKEN_IF 
  | 114 -> TOKEN_IN 
  | 115 -> TOKEN_FINALLY 
  | 116 -> TOKEN_DO_BANG 
  | 117 -> TOKEN_AND 
  | 118 -> TOKEN_AS 
  | 119 -> TOKEN_ASSERT 
  | 120 -> TOKEN_OASSERT 
  | 121 -> TOKEN_ASR 
  | 122 -> TOKEN_BEGIN 
  | 123 -> TOKEN_DO 
  | 124 -> TOKEN_DONE 
  | 125 -> TOKEN_DOWNTO 
  | 126 -> TOKEN_ELSE 
  | 127 -> TOKEN_ELIF 
  | 128 -> TOKEN_END 
  | 129 -> TOKEN_DOT_DOT 
  | 130 -> TOKEN_BAR_BAR 
  | 131 -> TOKEN_UPCAST 
  | 132 -> TOKEN_DOWNCAST 
  | 133 -> TOKEN_NULL 
  | 134 -> TOKEN_RESERVED 
  | 135 -> TOKEN_MODULE 
  | 136 -> TOKEN_NAMESPACE 
  | 137 -> TOKEN_DELEGATE 
  | 138 -> TOKEN_CONSTRAINT 
  | 139 -> TOKEN_BASE 
  | 140 -> TOKEN_LQUOTE 
  | 141 -> TOKEN_RQUOTE 
  | 142 -> TOKEN_RQUOTE_DOT 
  | 143 -> TOKEN_PERCENT_OP 
  | 144 -> TOKEN_BINDER 
  | 145 -> TOKEN_LESS 
  | 146 -> TOKEN_GREATER 
  | 147 -> TOKEN_LET 
  | 148 -> TOKEN_YIELD 
  | 149 -> TOKEN_YIELD_BANG 
  | 150 -> TOKEN_BIGNUM 
  | 151 -> TOKEN_DECIMAL 
  | 152 -> TOKEN_CHAR 
  | 153 -> TOKEN_IEEE64 
  | 154 -> TOKEN_IEEE32 
  | 155 -> TOKEN_NATIVEINT 
  | 156 -> TOKEN_UNATIVEINT 
  | 157 -> TOKEN_UINT64 
  | 158 -> TOKEN_UINT32 
  | 159 -> TOKEN_UINT16 
  | 160 -> TOKEN_UINT8 
  | 161 -> TOKEN_INT64 
  | 162 -> TOKEN_INT32 
  | 163 -> TOKEN_INT32_DOT_DOT 
  | 164 -> TOKEN_INT16 
  | 165 -> TOKEN_INT8 
  | 166 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 167 -> TOKEN_ADJACENT_PREFIX_OP 
  | 168 -> TOKEN_PLUS_MINUS_OP 
  | 169 -> TOKEN_INFIX_AMP_OP 
  | 170 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 171 -> TOKEN_PREFIX_OP 
  | 172 -> TOKEN_INFIX_BAR_OP 
  | 173 -> TOKEN_INFIX_AT_HAT_OP 
  | 174 -> TOKEN_INFIX_COMPARE_OP 
  | 175 -> TOKEN_INFIX_STAR_STAR_OP 
  | 176 -> TOKEN_IDENT 
  | 177 -> TOKEN_KEYWORD_STRING 
  | 178 -> TOKEN_STRING 
  | 179 -> TOKEN_BYTEARRAY 
  | 182 -> TOKEN_end_of_input
  | 180 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM_interaction 
    | 4 -> NONTERM_interaction 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_hashDirective 
    | 7 -> NONTERM_stringOrKeywordString 
    | 8 -> NONTERM_stringOrKeywordString 
    | 9 -> NONTERM_hashDirectiveArg 
    | 10 -> NONTERM_hashDirectiveArgs 
    | 11 -> NONTERM_hashDirectiveArgs 
    | 12 -> NONTERM_interactiveTerminator 
    | 13 -> NONTERM_interactiveTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveItemsTerminator 
    | 18 -> NONTERM_interactiveItemsTerminator 
    | 19 -> NONTERM_interactiveItemsTerminator 
    | 20 -> NONTERM_interactiveItemsTerminator 
    | 21 -> NONTERM_interactiveModuleDefns 
    | 22 -> NONTERM_interactiveModuleDefns 
    | 23 -> NONTERM_interactiveExpr 
    | 24 -> NONTERM_interactiveHash 
    | 25 -> NONTERM_signatureFile 
    | 26 -> NONTERM_signatureFile 
    | 27 -> NONTERM_signatureFile 
    | 28 -> NONTERM_implementationFile 
    | 29 -> NONTERM_implementationFile 
    | 30 -> NONTERM_implementationFile 
    | 31 -> NONTERM_moduleIntro 
    | 32 -> NONTERM_namespaceIntro 
    | 33 -> NONTERM_fileNamespaceSpecs 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecList 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpec 
    | 38 -> NONTERM_fileNamespaceImpls 
    | 39 -> NONTERM_fileNamespaceImpls 
    | 40 -> NONTERM_fileNamespaceImplList 
    | 41 -> NONTERM_fileNamespaceImplList 
    | 42 -> NONTERM_fileNamespaceImpl 
    | 43 -> NONTERM_fileModuleSpec 
    | 44 -> NONTERM_fileModuleSpec 
    | 45 -> NONTERM_fileModuleImpl 
    | 46 -> NONTERM_fileModuleImpl 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 48 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 49 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 50 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 51 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 52 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 53 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 54 -> NONTERM_moduleSpfns 
    | 55 -> NONTERM_moduleSpfns 
    | 56 -> NONTERM_moduleSpfns 
    | 57 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 58 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 59 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 60 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 61 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 62 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 63 -> NONTERM_moduleDefnsOrExpr 
    | 64 -> NONTERM_moduleDefnsOrExpr 
    | 65 -> NONTERM_moduleDefnsOrExpr 
    | 66 -> NONTERM_moduleDefnsOrExpr 
    | 67 -> NONTERM_moduleDefnsOrExpr 
    | 68 -> NONTERM_moduleDefns 
    | 69 -> NONTERM_moduleDefns 
    | 70 -> NONTERM_moduleDefns 
    | 71 -> NONTERM_moduleDefns 
    | 72 -> NONTERM_moduleDefns 
    | 73 -> NONTERM_moduleDefnOrDirective 
    | 74 -> NONTERM_moduleDefnOrDirective 
    | 75 -> NONTERM_moduleDefn 
    | 76 -> NONTERM_moduleDefn 
    | 77 -> NONTERM_moduleDefn 
    | 78 -> NONTERM_moduleDefn 
    | 79 -> NONTERM_moduleDefn 
    | 80 -> NONTERM_moduleDefn 
    | 81 -> NONTERM_moduleDefn 
    | 82 -> NONTERM_namedModuleAbbrevBlock 
    | 83 -> NONTERM_namedModuleAbbrevBlock 
    | 84 -> NONTERM_namedModuleDefnBlock 
    | 85 -> NONTERM_namedModuleDefnBlock 
    | 86 -> NONTERM_namedModuleDefnBlock 
    | 87 -> NONTERM_namedModuleDefnBlock 
    | 88 -> NONTERM_namedModuleDefnBlock 
    | 89 -> NONTERM_namedModuleDefnBlock 
    | 90 -> NONTERM_wrappedNamedModuleDefn 
    | 91 -> NONTERM_wrappedNamedModuleDefn 
    | 92 -> NONTERM_wrappedNamedModuleDefn 
    | 93 -> NONTERM_opt_signature 
    | 94 -> NONTERM_tyconDefnAugmentation 
    | 95 -> NONTERM_moduleSpfn 
    | 96 -> NONTERM_moduleSpfn 
    | 97 -> NONTERM_moduleSpfn 
    | 98 -> NONTERM_moduleSpfn 
    | 99 -> NONTERM_moduleSpfn 
    | 100 -> NONTERM_moduleSpfn 
    | 101 -> NONTERM_moduleSpfn 
    | 102 -> NONTERM_valSpfn 
    | 103 -> NONTERM_opt_literalValue 
    | 104 -> NONTERM_opt_literalValue 
    | 105 -> NONTERM_moduleSpecBlock 
    | 106 -> NONTERM_moduleSpecBlock 
    | 107 -> NONTERM_moduleSpecBlock 
    | 108 -> NONTERM_opt_attributes 
    | 109 -> NONTERM_opt_attributes 
    | 110 -> NONTERM_attributes 
    | 111 -> NONTERM_attributes 
    | 112 -> NONTERM_attributeList 
    | 113 -> NONTERM_attributeListElements 
    | 114 -> NONTERM_attributeListElements 
    | 115 -> NONTERM_attribute 
    | 116 -> NONTERM_attribute 
    | 117 -> NONTERM_attributeTarget 
    | 118 -> NONTERM_attributeTarget 
    | 119 -> NONTERM_attributeTarget 
    | 120 -> NONTERM_attributeTarget 
    | 121 -> NONTERM_tyconSpfns 
    | 122 -> NONTERM_tyconSpfnList 
    | 123 -> NONTERM_tyconSpfnList 
    | 124 -> NONTERM_tyconSpfn 
    | 125 -> NONTERM_tyconSpfn 
    | 126 -> NONTERM_tyconSpfnRhsBlock 
    | 127 -> NONTERM_tyconSpfnRhsBlock 
    | 128 -> NONTERM_tyconSpfnRhs 
    | 129 -> NONTERM_tyconSpfnRhs 
    | 130 -> NONTERM_tyconSpfnRhs 
    | 131 -> NONTERM_tyconClassSpfn 
    | 132 -> NONTERM_tyconClassSpfn 
    | 133 -> NONTERM_tyconClassSpfn 
    | 134 -> NONTERM_tyconClassSpfn 
    | 135 -> NONTERM_classSpfnBlockKindUnspecified 
    | 136 -> NONTERM_classSpfnBlockKindUnspecified 
    | 137 -> NONTERM_classSpfnBlockKindUnspecified 
    | 138 -> NONTERM_classSpfnBlockKindUnspecified 
    | 139 -> NONTERM_classSpfnBlock 
    | 140 -> NONTERM_classSpfnBlock 
    | 141 -> NONTERM_classSpfnBlock 
    | 142 -> NONTERM_classSpfnMembers 
    | 143 -> NONTERM_classSpfnMembers 
    | 144 -> NONTERM_memberFlags 
    | 145 -> NONTERM_memberFlags 
    | 146 -> NONTERM_memberFlags 
    | 147 -> NONTERM_memberFlags 
    | 148 -> NONTERM_memberSpecFlags 
    | 149 -> NONTERM_memberSpecFlags 
    | 150 -> NONTERM_memberSpecFlags 
    | 151 -> NONTERM_classMemberSpfnGetSet 
    | 152 -> NONTERM_classMemberSpfnGetSet 
    | 153 -> NONTERM_classMemberSpfnGetSet 
    | 154 -> NONTERM_classMemberSpfnGetSet 
    | 155 -> NONTERM_classMemberSpfnGetSetElements 
    | 156 -> NONTERM_classMemberSpfnGetSetElements 
    | 157 -> NONTERM_classMemberSpfn 
    | 158 -> NONTERM_classMemberSpfn 
    | 159 -> NONTERM_classMemberSpfn 
    | 160 -> NONTERM_classMemberSpfn 
    | 161 -> NONTERM_classMemberSpfn 
    | 162 -> NONTERM_classMemberSpfn 
    | 163 -> NONTERM_classMemberSpfn 
    | 164 -> NONTERM_typeNameInfo 
    | 165 -> NONTERM_tyconDefnList 
    | 166 -> NONTERM_tyconDefnList 
    | 167 -> NONTERM_tyconDefn 
    | 168 -> NONTERM_tyconDefn 
    | 169 -> NONTERM_tyconDefn 
    | 170 -> NONTERM_tyconDefn 
    | 171 -> NONTERM_tyconDefnRhsBlock 
    | 172 -> NONTERM_tyconDefnRhsBlock 
    | 173 -> NONTERM_tyconDefnRhs 
    | 174 -> NONTERM_tyconDefnRhs 
    | 175 -> NONTERM_tyconDefnRhs 
    | 176 -> NONTERM_tyconClassDefn 
    | 177 -> NONTERM_tyconClassDefn 
    | 178 -> NONTERM_tyconClassDefn 
    | 179 -> NONTERM_tyconClassDefn 
    | 180 -> NONTERM_classDefnBlockKindUnspecified 
    | 181 -> NONTERM_classDefnBlockKindUnspecified 
    | 182 -> NONTERM_classDefnBlock 
    | 183 -> NONTERM_classDefnBlock 
    | 184 -> NONTERM_classDefnBlock 
    | 185 -> NONTERM_classDefnMembers 
    | 186 -> NONTERM_classDefnMembers 
    | 187 -> NONTERM_classDefnMembers 
    | 188 -> NONTERM_classDefnMemberGetSet 
    | 189 -> NONTERM_classDefnMemberGetSet 
    | 190 -> NONTERM_classDefnMemberGetSet 
    | 191 -> NONTERM_classDefnMemberGetSetElements 
    | 192 -> NONTERM_classDefnMemberGetSetElements 
    | 193 -> NONTERM_classDefnMemberGetSetElement 
    | 194 -> NONTERM_memberCore 
    | 195 -> NONTERM_memberCore 
    | 196 -> NONTERM_abstractMemberFlags 
    | 197 -> NONTERM_abstractMemberFlags 
    | 198 -> NONTERM_classDefnMember 
    | 199 -> NONTERM_classDefnMember 
    | 200 -> NONTERM_classDefnMember 
    | 201 -> NONTERM_classDefnMember 
    | 202 -> NONTERM_classDefnMember 
    | 203 -> NONTERM_classDefnMember 
    | 204 -> NONTERM_classDefnMember 
    | 205 -> NONTERM_classDefnMember 
    | 206 -> NONTERM_classDefnMember 
    | 207 -> NONTERM_classDefnMember 
    | 208 -> NONTERM_atomicPatternLongIdent 
    | 209 -> NONTERM_atomicPatternLongIdent 
    | 210 -> NONTERM_atomicPatternLongIdent 
    | 211 -> NONTERM_opt_access 
    | 212 -> NONTERM_opt_access 
    | 213 -> NONTERM_access 
    | 214 -> NONTERM_access 
    | 215 -> NONTERM_access 
    | 216 -> NONTERM_opt_declVisibility 
    | 217 -> NONTERM_opt_declVisibility 
    | 218 -> NONTERM_opt_interfaceImplDefn 
    | 219 -> NONTERM_opt_interfaceImplDefn 
    | 220 -> NONTERM_opt_classDefn 
    | 221 -> NONTERM_opt_classDefn 
    | 222 -> NONTERM_opt_classSpfn 
    | 223 -> NONTERM_opt_classSpfn 
    | 224 -> NONTERM_inheritsDefn 
    | 225 -> NONTERM_inheritsDefn 
    | 226 -> NONTERM_optAsSpec 
    | 227 -> NONTERM_optAsSpec 
    | 228 -> NONTERM_asSpec 
    | 229 -> NONTERM_optBaseSpec 
    | 230 -> NONTERM_optBaseSpec 
    | 231 -> NONTERM_baseSpec 
    | 232 -> NONTERM_baseSpec 
    | 233 -> NONTERM_objectImplementationBlock 
    | 234 -> NONTERM_objectImplementationBlock 
    | 235 -> NONTERM_objectImplementationBlock 
    | 236 -> NONTERM_objectImplementationMembers 
    | 237 -> NONTERM_objectImplementationMembers 
    | 238 -> NONTERM_objectImplementationMember 
    | 239 -> NONTERM_objectImplementationMember 
    | 240 -> NONTERM_memberOrOverride 
    | 241 -> NONTERM_memberOrOverride 
    | 242 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 243 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 244 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 245 -> NONTERM_braceFieldDeclList 
    | 246 -> NONTERM_braceFieldDeclList 
    | 247 -> NONTERM_braceFieldDeclList 
    | 248 -> NONTERM_classOrInterfaceOrStruct 
    | 249 -> NONTERM_classOrInterfaceOrStruct 
    | 250 -> NONTERM_classOrInterfaceOrStruct 
    | 251 -> NONTERM_interfaceMember 
    | 252 -> NONTERM_interfaceMember 
    | 253 -> NONTERM_tyconNameAndTyparDecls 
    | 254 -> NONTERM_tyconNameAndTyparDecls 
    | 255 -> NONTERM_tyconNameAndTyparDecls 
    | 256 -> NONTERM_prefixTyparDecls 
    | 257 -> NONTERM_prefixTyparDecls 
    | 258 -> NONTERM_prefixTyparDeclList 
    | 259 -> NONTERM_prefixTyparDeclList 
    | 260 -> NONTERM_typarDecl 
    | 261 -> NONTERM_postfixTyparDecls 
    | 262 -> NONTERM_explicitValTyparDeclsCore 
    | 263 -> NONTERM_explicitValTyparDeclsCore 
    | 264 -> NONTERM_explicitValTyparDeclsCore 
    | 265 -> NONTERM_explicitValTyparDecls 
    | 266 -> NONTERM_opt_explicitValTyparDecls 
    | 267 -> NONTERM_opt_explicitValTyparDecls 
    | 268 -> NONTERM_opt_explicitValTyparDecls2 
    | 269 -> NONTERM_opt_explicitValTyparDecls2 
    | 270 -> NONTERM_opt_typeConstraints 
    | 271 -> NONTERM_opt_typeConstraints 
    | 272 -> NONTERM_typeConstraints 
    | 273 -> NONTERM_typeConstraints 
    | 274 -> NONTERM_typeConstraint 
    | 275 -> NONTERM_typeConstraint 
    | 276 -> NONTERM_typeConstraint 
    | 277 -> NONTERM_typeConstraint 
    | 278 -> NONTERM_typeConstraint 
    | 279 -> NONTERM_typeConstraint 
    | 280 -> NONTERM_typeConstraint 
    | 281 -> NONTERM_typeConstraint 
    | 282 -> NONTERM_typeConstraint 
    | 283 -> NONTERM_typeConstraint 
    | 284 -> NONTERM_unionRepr 
    | 285 -> NONTERM_unionRepr 
    | 286 -> NONTERM_unionRepr 
    | 287 -> NONTERM_barAndgrabXmlDoc 
    | 288 -> NONTERM_attrUnionCaseDecls 
    | 289 -> NONTERM_attrUnionCaseDecls 
    | 290 -> NONTERM_attrUnionCaseDecl 
    | 291 -> NONTERM_attrUnionCaseDecl 
    | 292 -> NONTERM_attrUnionCaseDecl 
    | 293 -> NONTERM_attrUnionCaseDecl 
    | 294 -> NONTERM_unionCaseName 
    | 295 -> NONTERM_unionCaseName 
    | 296 -> NONTERM_unionCaseName 
    | 297 -> NONTERM_firstUnionCaseDeclOfMany 
    | 298 -> NONTERM_firstUnionCaseDeclOfMany 
    | 299 -> NONTERM_firstUnionCaseDeclOfMany 
    | 300 -> NONTERM_firstUnionCaseDecl 
    | 301 -> NONTERM_firstUnionCaseDecl 
    | 302 -> NONTERM_unionCaseRepr 
    | 303 -> NONTERM_unionCaseRepr 
    | 304 -> NONTERM_unionCaseRepr 
    | 305 -> NONTERM_recdFieldDeclList 
    | 306 -> NONTERM_recdFieldDeclList 
    | 307 -> NONTERM_recdFieldDecl 
    | 308 -> NONTERM_fieldDecl 
    | 309 -> NONTERM_exconDefn 
    | 310 -> NONTERM_exconSpfn 
    | 311 -> NONTERM_exceptionAndGrabDoc 
    | 312 -> NONTERM_exconCore 
    | 313 -> NONTERM_exconIntro 
    | 314 -> NONTERM_exconIntro 
    | 315 -> NONTERM_exconRepr 
    | 316 -> NONTERM_exconRepr 
    | 317 -> NONTERM_openDecl 
    | 318 -> NONTERM_defnBindings 
    | 319 -> NONTERM_defnBindings 
    | 320 -> NONTERM_doBinding 
    | 321 -> NONTERM_hardwhiteLetBindings 
    | 322 -> NONTERM_hardwhiteDoBinding 
    | 323 -> NONTERM_classDefnBindings 
    | 324 -> NONTERM_classDefnBindings 
    | 325 -> NONTERM_classDefnBindings 
    | 326 -> NONTERM_classDefnBindings 
    | 327 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 328 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 329 -> NONTERM_cPrototype 
    | 330 -> NONTERM_cArgs 
    | 331 -> NONTERM_cArgs 
    | 332 -> NONTERM_cArgs 
    | 333 -> NONTERM_cMoreArgs 
    | 334 -> NONTERM_cMoreArgs 
    | 335 -> NONTERM_cArg 
    | 336 -> NONTERM_cArg 
    | 337 -> NONTERM_cType 
    | 338 -> NONTERM_cType 
    | 339 -> NONTERM_cType 
    | 340 -> NONTERM_cType 
    | 341 -> NONTERM_cType 
    | 342 -> NONTERM_cRetType 
    | 343 -> NONTERM_cRetType 
    | 344 -> NONTERM_localBindings 
    | 345 -> NONTERM_moreLocalBindings 
    | 346 -> NONTERM_moreLocalBindings 
    | 347 -> NONTERM_attr_localBinding 
    | 348 -> NONTERM_attr_localBinding 
    | 349 -> NONTERM_localBinding 
    | 350 -> NONTERM_localBinding 
    | 351 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 352 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 353 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 354 -> NONTERM_typedExprWithStaticOptimizations 
    | 355 -> NONTERM_opt_staticOptimizations 
    | 356 -> NONTERM_opt_staticOptimizations 
    | 357 -> NONTERM_staticOptimization 
    | 358 -> NONTERM_staticOptimizationConditions 
    | 359 -> NONTERM_staticOptimizationConditions 
    | 360 -> NONTERM_staticOptimizationCondition 
    | 361 -> NONTERM_staticOptimizationCondition 
    | 362 -> NONTERM_staticOptimizationCondition 
    | 363 -> NONTERM_rawConstant 
    | 364 -> NONTERM_rawConstant 
    | 365 -> NONTERM_rawConstant 
    | 366 -> NONTERM_rawConstant 
    | 367 -> NONTERM_rawConstant 
    | 368 -> NONTERM_rawConstant 
    | 369 -> NONTERM_rawConstant 
    | 370 -> NONTERM_rawConstant 
    | 371 -> NONTERM_rawConstant 
    | 372 -> NONTERM_rawConstant 
    | 373 -> NONTERM_rawConstant 
    | 374 -> NONTERM_rawConstant 
    | 375 -> NONTERM_rawConstant 
    | 376 -> NONTERM_rawConstant 
    | 377 -> NONTERM_rawConstant 
    | 378 -> NONTERM_rawConstant 
    | 379 -> NONTERM_rawConstant 
    | 380 -> NONTERM_constant 
    | 381 -> NONTERM_constant 
    | 382 -> NONTERM_bindingPattern 
    | 383 -> NONTERM_simplePattern 
    | 384 -> NONTERM_simplePattern 
    | 385 -> NONTERM_simplePattern 
    | 386 -> NONTERM_simplePattern 
    | 387 -> NONTERM_simplePatternCommaList 
    | 388 -> NONTERM_simplePatternCommaList 
    | 389 -> NONTERM_simplePatterns 
    | 390 -> NONTERM_simplePatterns 
    | 391 -> NONTERM_simplePatterns 
    | 392 -> NONTERM_simplePatterns 
    | 393 -> NONTERM_simplePatterns 
    | 394 -> NONTERM_headBindingPattern 
    | 395 -> NONTERM_headBindingPattern 
    | 396 -> NONTERM_headBindingPattern 
    | 397 -> NONTERM_headBindingPattern 
    | 398 -> NONTERM_headBindingPattern 
    | 399 -> NONTERM_headBindingPattern 
    | 400 -> NONTERM_tuplePatternElements 
    | 401 -> NONTERM_tuplePatternElements 
    | 402 -> NONTERM_conjPatternElements 
    | 403 -> NONTERM_conjPatternElements 
    | 404 -> NONTERM_constrPattern 
    | 405 -> NONTERM_constrPattern 
    | 406 -> NONTERM_constrPattern 
    | 407 -> NONTERM_constrPattern 
    | 408 -> NONTERM_constrPattern 
    | 409 -> NONTERM_constrPattern 
    | 410 -> NONTERM_atomicPatterns 
    | 411 -> NONTERM_atomicPatterns 
    | 412 -> NONTERM_atomicPatterns 
    | 413 -> NONTERM_atomicPatterns 
    | 414 -> NONTERM_atomicPattern 
    | 415 -> NONTERM_atomicPattern 
    | 416 -> NONTERM_atomicPattern 
    | 417 -> NONTERM_atomicPattern 
    | 418 -> NONTERM_atomicPattern 
    | 419 -> NONTERM_atomicPattern 
    | 420 -> NONTERM_atomicPattern 
    | 421 -> NONTERM_atomicPattern 
    | 422 -> NONTERM_atomicPattern 
    | 423 -> NONTERM_atomicPattern 
    | 424 -> NONTERM_atomicPattern 
    | 425 -> NONTERM_atomicPattern 
    | 426 -> NONTERM_atomicPattern 
    | 427 -> NONTERM_atomicPattern 
    | 428 -> NONTERM_atomicPattern 
    | 429 -> NONTERM_atomicPattern 
    | 430 -> NONTERM_parenPatternBody 
    | 431 -> NONTERM_parenPatternBody 
    | 432 -> NONTERM_parenPattern 
    | 433 -> NONTERM_parenPattern 
    | 434 -> NONTERM_parenPattern 
    | 435 -> NONTERM_parenPattern 
    | 436 -> NONTERM_parenPattern 
    | 437 -> NONTERM_parenPattern 
    | 438 -> NONTERM_parenPattern 
    | 439 -> NONTERM_parenPattern 
    | 440 -> NONTERM_tupleParenPatternElements 
    | 441 -> NONTERM_tupleParenPatternElements 
    | 442 -> NONTERM_conjParenPatternElements 
    | 443 -> NONTERM_conjParenPatternElements 
    | 444 -> NONTERM_recordPatternElements 
    | 445 -> NONTERM_recordPatternElementsAux 
    | 446 -> NONTERM_recordPatternElementsAux 
    | 447 -> NONTERM_recordPatternElement 
    | 448 -> NONTERM_listPatternElements 
    | 449 -> NONTERM_listPatternElements 
    | 450 -> NONTERM_listPatternElements 
    | 451 -> NONTERM_typedSeqExprBlock 
    | 452 -> NONTERM_typedSeqExprBlock 
    | 453 -> NONTERM_typedSeqExprBlock 
    | 454 -> NONTERM_declExprBlock 
    | 455 -> NONTERM_declExprBlock 
    | 456 -> NONTERM_typedSeqExprBlockR 
    | 457 -> NONTERM_typedSeqExprBlockR 
    | 458 -> NONTERM_typedSeqExpr 
    | 459 -> NONTERM_typedSeqExpr 
    | 460 -> NONTERM_seqExpr 
    | 461 -> NONTERM_seqExpr 
    | 462 -> NONTERM_seqExpr 
    | 463 -> NONTERM_seqExpr 
    | 464 -> NONTERM_seqExpr 
    | 465 -> NONTERM_seqExpr 
    | 466 -> NONTERM_recover 
    | 467 -> NONTERM_recover 
    | 468 -> NONTERM_declExpr 
    | 469 -> NONTERM_declExpr 
    | 470 -> NONTERM_declExpr 
    | 471 -> NONTERM_declExpr 
    | 472 -> NONTERM_declExpr 
    | 473 -> NONTERM_declExpr 
    | 474 -> NONTERM_declExpr 
    | 475 -> NONTERM_declExpr 
    | 476 -> NONTERM_declExpr 
    | 477 -> NONTERM_declExpr 
    | 478 -> NONTERM_declExpr 
    | 479 -> NONTERM_declExpr 
    | 480 -> NONTERM_declExpr 
    | 481 -> NONTERM_declExpr 
    | 482 -> NONTERM_declExpr 
    | 483 -> NONTERM_declExpr 
    | 484 -> NONTERM_declExpr 
    | 485 -> NONTERM_declExpr 
    | 486 -> NONTERM_declExpr 
    | 487 -> NONTERM_declExpr 
    | 488 -> NONTERM_declExpr 
    | 489 -> NONTERM_declExpr 
    | 490 -> NONTERM_declExpr 
    | 491 -> NONTERM_declExpr 
    | 492 -> NONTERM_declExpr 
    | 493 -> NONTERM_declExpr 
    | 494 -> NONTERM_declExpr 
    | 495 -> NONTERM_declExpr 
    | 496 -> NONTERM_declExpr 
    | 497 -> NONTERM_declExpr 
    | 498 -> NONTERM_declExpr 
    | 499 -> NONTERM_declExpr 
    | 500 -> NONTERM_declExpr 
    | 501 -> NONTERM_declExpr 
    | 502 -> NONTERM_declExpr 
    | 503 -> NONTERM_declExpr 
    | 504 -> NONTERM_declExpr 
    | 505 -> NONTERM_declExpr 
    | 506 -> NONTERM_declExpr 
    | 507 -> NONTERM_declExpr 
    | 508 -> NONTERM_declExpr 
    | 509 -> NONTERM_declExpr 
    | 510 -> NONTERM_declExpr 
    | 511 -> NONTERM_declExpr 
    | 512 -> NONTERM_declExpr 
    | 513 -> NONTERM_declExpr 
    | 514 -> NONTERM_declExpr 
    | 515 -> NONTERM_declExpr 
    | 516 -> NONTERM_declExpr 
    | 517 -> NONTERM_declExpr 
    | 518 -> NONTERM_declExpr 
    | 519 -> NONTERM_declExpr 
    | 520 -> NONTERM_declExpr 
    | 521 -> NONTERM_declExpr 
    | 522 -> NONTERM_declExpr 
    | 523 -> NONTERM_declExpr 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_dynamicArg 
    | 540 -> NONTERM_dynamicArg 
    | 541 -> NONTERM_withClauses 
    | 542 -> NONTERM_withClauses 
    | 543 -> NONTERM_withClauses 
    | 544 -> NONTERM_withPatternClauses 
    | 545 -> NONTERM_withPatternClauses 
    | 546 -> NONTERM_withPatternClauses 
    | 547 -> NONTERM_withPatternClauses 
    | 548 -> NONTERM_patternAndGuard 
    | 549 -> NONTERM_patternClauses 
    | 550 -> NONTERM_patternClauses 
    | 551 -> NONTERM_patternClauses 
    | 552 -> NONTERM_patternClauses 
    | 553 -> NONTERM_patternGuard 
    | 554 -> NONTERM_patternGuard 
    | 555 -> NONTERM_patternResult 
    | 556 -> NONTERM_ifExprCases 
    | 557 -> NONTERM_ifExprThen 
    | 558 -> NONTERM_ifExprThen 
    | 559 -> NONTERM_ifExprThen 
    | 560 -> NONTERM_ifExprElifs 
    | 561 -> NONTERM_ifExprElifs 
    | 562 -> NONTERM_ifExprElifs 
    | 563 -> NONTERM_ifExprElifs 
    | 564 -> NONTERM_ifExprElifs 
    | 565 -> NONTERM_ifExprElifs 
    | 566 -> NONTERM_tupleExpr 
    | 567 -> NONTERM_tupleExpr 
    | 568 -> NONTERM_minusExpr 
    | 569 -> NONTERM_minusExpr 
    | 570 -> NONTERM_minusExpr 
    | 571 -> NONTERM_minusExpr 
    | 572 -> NONTERM_minusExpr 
    | 573 -> NONTERM_minusExpr 
    | 574 -> NONTERM_minusExpr 
    | 575 -> NONTERM_minusExpr 
    | 576 -> NONTERM_minusExpr 
    | 577 -> NONTERM_minusExpr 
    | 578 -> NONTERM_minusExpr 
    | 579 -> NONTERM_minusExpr 
    | 580 -> NONTERM_appExpr 
    | 581 -> NONTERM_appExpr 
    | 582 -> NONTERM_argExpr 
    | 583 -> NONTERM_argExpr 
    | 584 -> NONTERM_atomicExpr 
    | 585 -> NONTERM_atomicExpr 
    | 586 -> NONTERM_atomicExpr 
    | 587 -> NONTERM_atomicExpr 
    | 588 -> NONTERM_atomicExpr 
    | 589 -> NONTERM_atomicExpr 
    | 590 -> NONTERM_atomicExpr 
    | 591 -> NONTERM_atomicExpr 
    | 592 -> NONTERM_atomicExpr 
    | 593 -> NONTERM_atomicExpr 
    | 594 -> NONTERM_atomicExpr 
    | 595 -> NONTERM_atomicExpr 
    | 596 -> NONTERM_atomicExpr 
    | 597 -> NONTERM_atomicExpr 
    | 598 -> NONTERM_atomicExprQualification 
    | 599 -> NONTERM_atomicExprQualification 
    | 600 -> NONTERM_atomicExprQualification 
    | 601 -> NONTERM_atomicExprQualification 
    | 602 -> NONTERM_atomicExprQualification 
    | 603 -> NONTERM_atomicExprQualification 
    | 604 -> NONTERM_atomicExprQualification 
    | 605 -> NONTERM_atomicExprQualification 
    | 606 -> NONTERM_atomicExprQualification 
    | 607 -> NONTERM_optRange 
    | 608 -> NONTERM_optRange 
    | 609 -> NONTERM_optRange 
    | 610 -> NONTERM_optRange 
    | 611 -> NONTERM_atomicExprAfterType 
    | 612 -> NONTERM_atomicExprAfterType 
    | 613 -> NONTERM_atomicExprAfterType 
    | 614 -> NONTERM_atomicExprAfterType 
    | 615 -> NONTERM_atomicExprAfterType 
    | 616 -> NONTERM_atomicExprAfterType 
    | 617 -> NONTERM_atomicExprAfterType 
    | 618 -> NONTERM_atomicExprAfterType 
    | 619 -> NONTERM_atomicExprAfterType 
    | 620 -> NONTERM_beginEndExpr 
    | 621 -> NONTERM_beginEndExpr 
    | 622 -> NONTERM_beginEndExpr 
    | 623 -> NONTERM_beginEndExpr 
    | 624 -> NONTERM_quoteExpr 
    | 625 -> NONTERM_quoteExpr 
    | 626 -> NONTERM_quoteExpr 
    | 627 -> NONTERM_arrayExpr 
    | 628 -> NONTERM_arrayExpr 
    | 629 -> NONTERM_arrayExpr 
    | 630 -> NONTERM_parenExpr 
    | 631 -> NONTERM_parenExpr 
    | 632 -> NONTERM_parenExpr 
    | 633 -> NONTERM_parenExpr 
    | 634 -> NONTERM_parenExprBody 
    | 635 -> NONTERM_parenExprBody 
    | 636 -> NONTERM_parenExprBody 
    | 637 -> NONTERM_parenExprBody 
    | 638 -> NONTERM_staticallyKnownHeadTypars 
    | 639 -> NONTERM_staticallyKnownHeadTypars 
    | 640 -> NONTERM_braceExpr 
    | 641 -> NONTERM_braceExpr 
    | 642 -> NONTERM_braceExpr 
    | 643 -> NONTERM_braceExprBody 
    | 644 -> NONTERM_braceExprBody 
    | 645 -> NONTERM_braceExprBody 
    | 646 -> NONTERM_listExprElements 
    | 647 -> NONTERM_listExprElements 
    | 648 -> NONTERM_monadicExprInitial 
    | 649 -> NONTERM_monadicExprInitial 
    | 650 -> NONTERM_rangeSequenceExpr 
    | 651 -> NONTERM_rangeSequenceExpr 
    | 652 -> NONTERM_monadicSingleLineQualifiersThenArrowThenExprR 
    | 653 -> NONTERM_forLoopBinder 
    | 654 -> NONTERM_forLoopBinder 
    | 655 -> NONTERM_forLoopBinder 
    | 656 -> NONTERM_forLoopRange 
    | 657 -> NONTERM_opt_curriedArgExprs 
    | 658 -> NONTERM_opt_curriedArgExprs 
    | 659 -> NONTERM_opt_atomicExprAfterType 
    | 660 -> NONTERM_opt_atomicExprAfterType 
    | 661 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 662 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 663 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 664 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 665 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 666 -> NONTERM_recdExpr 
    | 667 -> NONTERM_recdExpr 
    | 668 -> NONTERM_recdExpr 
    | 669 -> NONTERM_recdExpr 
    | 670 -> NONTERM_recdExpr 
    | 671 -> NONTERM_recdExprBindings 
    | 672 -> NONTERM_recdExprBindings 
    | 673 -> NONTERM_objExpr 
    | 674 -> NONTERM_objExpr 
    | 675 -> NONTERM_objExpr 
    | 676 -> NONTERM_objExprBaseCall 
    | 677 -> NONTERM_objExprBaseCall 
    | 678 -> NONTERM_objExprBaseCall 
    | 679 -> NONTERM_opt_objExprBindings 
    | 680 -> NONTERM_opt_objExprBindings 
    | 681 -> NONTERM_objExprBindings 
    | 682 -> NONTERM_objExprBindings 
    | 683 -> NONTERM_objExprBindings 
    | 684 -> NONTERM_objExprInterfaces 
    | 685 -> NONTERM_opt_objExprInterfaces 
    | 686 -> NONTERM_opt_objExprInterfaces 
    | 687 -> NONTERM_opt_objExprInterfaces 
    | 688 -> NONTERM_objExprInterface 
    | 689 -> NONTERM_forLoopDirection 
    | 690 -> NONTERM_forLoopDirection 
    | 691 -> NONTERM_anonLambdaExpr 
    | 692 -> NONTERM_anonLambdaExpr 
    | 693 -> NONTERM_anonLambdaExpr 
    | 694 -> NONTERM_anonLambdaExpr 
    | 695 -> NONTERM_anonLambdaExpr 
    | 696 -> NONTERM_anonMatchingExpr 
    | 697 -> NONTERM_anonMatchingExpr 
    | 698 -> NONTERM_anonMatchingExpr 
    | 699 -> NONTERM_typeWithTypeConstraints 
    | 700 -> NONTERM_typeWithTypeConstraints 
    | 701 -> NONTERM_topTypeWithTypeConstraints 
    | 702 -> NONTERM_topTypeWithTypeConstraints 
    | 703 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 704 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 705 -> NONTERM_topType 
    | 706 -> NONTERM_topType 
    | 707 -> NONTERM_topTupleType 
    | 708 -> NONTERM_topTupleType 
    | 709 -> NONTERM_topTupleTypeElements 
    | 710 -> NONTERM_topTupleTypeElements 
    | 711 -> NONTERM_topAppType 
    | 712 -> NONTERM_topAppType 
    | 713 -> NONTERM_topAppType 
    | 714 -> NONTERM_topAppType 
    | 715 -> NONTERM_topAppType 
    | 716 -> NONTERM_topAppType 
    | 717 -> NONTERM_typ 
    | 718 -> NONTERM_typ 
    | 719 -> NONTERM_tupleType 
    | 720 -> NONTERM_tupleType 
    | 721 -> NONTERM_tupleType 
    | 722 -> NONTERM_tupleType 
    | 723 -> NONTERM_tupleOrQuotTypeElements 
    | 724 -> NONTERM_tupleOrQuotTypeElements 
    | 725 -> NONTERM_tupleOrQuotTypeElements 
    | 726 -> NONTERM_tupleTypeElements 
    | 727 -> NONTERM_tupleTypeElements 
    | 728 -> NONTERM_appTypeCon 
    | 729 -> NONTERM_appTypeCon 
    | 730 -> NONTERM_appTypeConPower 
    | 731 -> NONTERM_appTypeConPower 
    | 732 -> NONTERM_appType 
    | 733 -> NONTERM_appType 
    | 734 -> NONTERM_appType 
    | 735 -> NONTERM_appType 
    | 736 -> NONTERM_appType 
    | 737 -> NONTERM_appType 
    | 738 -> NONTERM_appType 
    | 739 -> NONTERM_arrayTypeSuffix 
    | 740 -> NONTERM_arrayTypeSuffix 
    | 741 -> NONTERM_arrayTypeSuffix 
    | 742 -> NONTERM_arrayTypeSuffix 
    | 743 -> NONTERM_appTypePrexifArguments 
    | 744 -> NONTERM_typeListElements 
    | 745 -> NONTERM_typeListElements 
    | 746 -> NONTERM_powerType 
    | 747 -> NONTERM_powerType 
    | 748 -> NONTERM_powerType 
    | 749 -> NONTERM_appTypeNonAtomicDeprecated 
    | 750 -> NONTERM_appTypeNonAtomicDeprecated 
    | 751 -> NONTERM_appTypeNonAtomicDeprecated 
    | 752 -> NONTERM_appTypeNonAtomicDeprecated 
    | 753 -> NONTERM_appTypeNonAtomicDeprecated 
    | 754 -> NONTERM_appTypeNonAtomicDeprecated 
    | 755 -> NONTERM_appTypeNonAtomicDeprecated 
    | 756 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 757 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 758 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 759 -> NONTERM_atomType 
    | 760 -> NONTERM_atomType 
    | 761 -> NONTERM_atomType 
    | 762 -> NONTERM_atomType 
    | 763 -> NONTERM_atomType 
    | 764 -> NONTERM_atomType 
    | 765 -> NONTERM_atomType 
    | 766 -> NONTERM_atomType 
    | 767 -> NONTERM_atomType 
    | 768 -> NONTERM_atomType 
    | 769 -> NONTERM_typeArgsNoHpaDeprecated 
    | 770 -> NONTERM_typeArgsNoHpaDeprecated 
    | 771 -> NONTERM_typeArgsActual 
    | 772 -> NONTERM_typeArgsActual 
    | 773 -> NONTERM_typeArgsActual 
    | 774 -> NONTERM_measureTypeArg 
    | 775 -> NONTERM_measureTypeArg 
    | 776 -> NONTERM_measureTypeAtom 
    | 777 -> NONTERM_measureTypeAtom 
    | 778 -> NONTERM_measureTypeAtom 
    | 779 -> NONTERM_measureTypePower 
    | 780 -> NONTERM_measureTypePower 
    | 781 -> NONTERM_measureTypePower 
    | 782 -> NONTERM_measureTypePower 
    | 783 -> NONTERM_measureTypeSeq 
    | 784 -> NONTERM_measureTypeSeq 
    | 785 -> NONTERM_measureTypeExpr 
    | 786 -> NONTERM_measureTypeExpr 
    | 787 -> NONTERM_measureTypeExpr 
    | 788 -> NONTERM_measureTypeExpr 
    | 789 -> NONTERM_typar 
    | 790 -> NONTERM_typar 
    | 791 -> NONTERM_staticallyKnownHeadTypar 
    | 792 -> NONTERM_ident 
    | 793 -> NONTERM_path 
    | 794 -> NONTERM_path 
    | 795 -> NONTERM_path 
    | 796 -> NONTERM_path 
    | 797 -> NONTERM_opName 
    | 798 -> NONTERM_opName 
    | 799 -> NONTERM_opName 
    | 800 -> NONTERM_opName 
    | 801 -> NONTERM_operatorName 
    | 802 -> NONTERM_operatorName 
    | 803 -> NONTERM_operatorName 
    | 804 -> NONTERM_operatorName 
    | 805 -> NONTERM_operatorName 
    | 806 -> NONTERM_operatorName 
    | 807 -> NONTERM_operatorName 
    | 808 -> NONTERM_operatorName 
    | 809 -> NONTERM_operatorName 
    | 810 -> NONTERM_operatorName 
    | 811 -> NONTERM_operatorName 
    | 812 -> NONTERM_operatorName 
    | 813 -> NONTERM_operatorName 
    | 814 -> NONTERM_operatorName 
    | 815 -> NONTERM_operatorName 
    | 816 -> NONTERM_operatorName 
    | 817 -> NONTERM_operatorName 
    | 818 -> NONTERM_operatorName 
    | 819 -> NONTERM_operatorName 
    | 820 -> NONTERM_operatorName 
    | 821 -> NONTERM_operatorName 
    | 822 -> NONTERM_operatorName 
    | 823 -> NONTERM_operatorName 
    | 824 -> NONTERM_operatorName 
    | 825 -> NONTERM_operatorName 
    | 826 -> NONTERM_operatorName 
    | 827 -> NONTERM_barName 
    | 828 -> NONTERM_barNames 
    | 829 -> NONTERM_barNames 
    | 830 -> NONTERM_identOrOp 
    | 831 -> NONTERM_identOrOp 
    | 832 -> NONTERM_pathOp 
    | 833 -> NONTERM_pathOp 
    | 834 -> NONTERM_pathOp 
    | 835 -> NONTERM_pathOp 
    | 836 -> NONTERM_nameop 
    | 837 -> NONTERM_topSeparator 
    | 838 -> NONTERM_topSeparator 
    | 839 -> NONTERM_topSeparator 
    | 840 -> NONTERM_topSeparators 
    | 841 -> NONTERM_topSeparators 
    | 842 -> NONTERM_interactiveSeparator 
    | 843 -> NONTERM_interactiveSeparator 
    | 844 -> NONTERM_interactiveSeparators 
    | 845 -> NONTERM_interactiveSeparators 
    | 846 -> NONTERM_opt_interactiveSeparators 
    | 847 -> NONTERM_opt_interactiveSeparators 
    | 848 -> NONTERM_opt_topSeparators 
    | 849 -> NONTERM_opt_topSeparators 
    | 850 -> NONTERM_seps 
    | 851 -> NONTERM_seps 
    | 852 -> NONTERM_seps 
    | 853 -> NONTERM_seps 
    | 854 -> NONTERM_declEnd 
    | 855 -> NONTERM_declEnd 
    | 856 -> NONTERM_declEnd 
    | 857 -> NONTERM_opt_declEnd 
    | 858 -> NONTERM_opt_declEnd 
    | 859 -> NONTERM_opt_declEnd 
    | 860 -> NONTERM_opt_declEnd 
    | 861 -> NONTERM_opt_ODECLEND 
    | 862 -> NONTERM_opt_ODECLEND 
    | 863 -> NONTERM_deprecated_opt_equals 
    | 864 -> NONTERM_deprecated_opt_equals 
    | 865 -> NONTERM_opt_OBLOCKSEP 
    | 866 -> NONTERM_opt_OBLOCKSEP 
    | 867 -> NONTERM_opt_seps 
    | 868 -> NONTERM_opt_seps 
    | 869 -> NONTERM_opt_rec 
    | 870 -> NONTERM_opt_rec 
    | 871 -> NONTERM_opt_bar 
    | 872 -> NONTERM_opt_bar 
    | 873 -> NONTERM_opt_inline 
    | 874 -> NONTERM_opt_inline 
    | 875 -> NONTERM_opt_mutable 
    | 876 -> NONTERM_opt_mutable 
    | 877 -> NONTERM_doToken 
    | 878 -> NONTERM_doToken 
    | 879 -> NONTERM_doneDeclEnd 
    | 880 -> NONTERM_doneDeclEnd 
    | 881 -> NONTERM_structOrBegin 
    | 882 -> NONTERM_structOrBegin 
    | 883 -> NONTERM_sigOrBegin 
    | 884 -> NONTERM_sigOrBegin 
    | 885 -> NONTERM_colonOrEquals 
    | 886 -> NONTERM_colonOrEquals 
    | 887 -> NONTERM_opt_HASH 
    | 888 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 889 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 890 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 891 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 892 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 182 
let _fsyacc_tagOfErrorTerminal = 180

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 23us; 65535us; 0us; 159us; 2us; 122us; 4us; 36us; 25us; 36us; 27us; 36us; 29us; 36us; 60us; 159us; 68us; 122us; 72us; 159us; 77us; 122us; 81us; 159us; 91us; 159us; 94us; 159us; 96us; 122us; 108us; 122us; 114us; 122us; 116us; 122us; 119us; 122us; 138us; 159us; 142us; 122us; 151us; 122us; 185us; 159us; 189us; 159us; 174us; 65535us; 11us; 14us; 34us; 709us; 76us; 709us; 106us; 709us; 128us; 709us; 181us; 709us; 204us; 709us; 209us; 709us; 367us; 709us; 370us; 709us; 372us; 709us; 375us; 709us; 405us; 709us; 408us; 709us; 436us; 709us; 561us; 709us; 573us; 709us; 615us; 709us; 621us; 709us; 667us; 709us; 670us; 709us; 673us; 709us; 683us; 709us; 743us; 709us; 744us; 709us; 748us; 709us; 749us; 709us; 750us; 709us; 751us; 709us; 753us; 709us; 755us; 709us; 757us; 709us; 762us; 709us; 764us; 709us; 766us; 709us; 774us; 709us; 777us; 709us; 789us; 709us; 810us; 709us; 815us; 709us; 816us; 709us; 818us; 709us; 819us; 709us; 820us; 709us; 821us; 709us; 828us; 709us; 830us; 709us; 832us; 709us; 837us; 709us; 849us; 709us; 851us; 709us; 854us; 709us; 857us; 709us; 862us; 709us; 865us; 709us; 868us; 709us; 874us; 709us; 878us; 709us; 882us; 709us; 884us; 709us; 889us; 709us; 891us; 709us; 893us; 709us; 895us; 709us; 897us; 709us; 899us; 709us; 908us; 709us; 910us; 709us; 917us; 709us; 924us; 709us; 929us; 709us; 931us; 709us; 933us; 709us; 934us; 709us; 937us; 709us; 939us; 709us; 940us; 709us; 943us; 709us; 946us; 709us; 949us; 709us; 951us; 709us; 956us; 709us; 998us; 709us; 1000us; 709us; 1003us; 709us; 1004us; 709us; 1005us; 709us; 1006us; 709us; 1007us; 709us; 1008us; 709us; 1009us; 709us; 1010us; 709us; 1011us; 709us; 1012us; 709us; 1013us; 709us; 1014us; 709us; 1015us; 709us; 1016us; 709us; 1017us; 709us; 1018us; 709us; 1019us; 709us; 1020us; 709us; 1021us; 709us; 1023us; 709us; 1026us; 709us; 1028us; 709us; 1033us; 709us; 1040us; 709us; 1044us; 709us; 1045us; 709us; 1049us; 709us; 1051us; 709us; 1055us; 709us; 1057us; 709us; 1061us; 709us; 1064us; 709us; 1065us; 709us; 1066us; 709us; 1067us; 709us; 1069us; 709us; 1070us; 709us; 1072us; 709us; 1073us; 709us; 1075us; 709us; 1076us; 709us; 1078us; 709us; 1079us; 709us; 1081us; 709us; 1082us; 709us; 1088us; 709us; 1089us; 709us; 1094us; 709us; 1096us; 709us; 1098us; 709us; 1099us; 709us; 1102us; 709us; 1108us; 709us; 1109us; 709us; 1112us; 709us; 1113us; 709us; 1126us; 709us; 1135us; 709us; 1142us; 709us; 1147us; 709us; 1150us; 709us; 1153us; 709us; 1156us; 709us; 1157us; 709us; 1168us; 709us; 1175us; 709us; 1176us; 709us; 1182us; 709us; 1188us; 709us; 1189us; 709us; 1190us; 709us; 1202us; 709us; 1210us; 709us; 1222us; 709us; 1223us; 709us; 1224us; 709us; 1226us; 709us; 1229us; 709us; 1230us; 709us; 1234us; 709us; 1238us; 709us; 1244us; 709us; 1250us; 709us; 1257us; 709us; 1287us; 709us; 1289us; 709us; 1292us; 709us; 1294us; 709us; 1301us; 709us; 1304us; 709us; 1us; 65535us; 11us; 15us; 1us; 65535us; 10us; 11us; 7us; 65535us; 4us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 18us; 27us; 18us; 29us; 18us; 4us; 65535us; 4us; 6us; 25us; 26us; 27us; 28us; 29us; 30us; 5us; 65535us; 4us; 19us; 25us; 19us; 27us; 19us; 29us; 19us; 31us; 32us; 4us; 65535us; 4us; 21us; 25us; 21us; 27us; 21us; 29us; 21us; 4us; 65535us; 4us; 23us; 25us; 23us; 27us; 23us; 29us; 23us; 1us; 65535us; 0us; 1us; 1us; 65535us; 2us; 3us; 6us; 65535us; 34us; 134us; 71us; 72us; 76us; 77us; 106us; 134us; 124us; 134us; 162us; 163us; 2us; 65535us; 58us; 59us; 66us; 67us; 1us; 65535us; 0us; 37us; 2us; 65535us; 54us; 55us; 56us; 57us; 2us; 65535us; 54us; 56us; 56us; 56us; 1us; 65535us; 2us; 43us; 2us; 65535us; 62us; 63us; 64us; 65us; 2us; 65535us; 62us; 64us; 64us; 64us; 2us; 65535us; 0us; 54us; 60us; 61us; 2us; 65535us; 2us; 62us; 68us; 69us; 3us; 65535us; 0us; 74us; 60us; 74us; 72us; 73us; 6us; 65535us; 0us; 80us; 60us; 80us; 72us; 80us; 81us; 82us; 185us; 186us; 189us; 190us; 9us; 65535us; 0us; 88us; 60us; 88us; 72us; 88us; 81us; 88us; 91us; 92us; 94us; 95us; 138us; 183us; 185us; 88us; 189us; 88us; 3us; 65535us; 2us; 79us; 68us; 79us; 77us; 78us; 5us; 65535us; 2us; 103us; 68us; 103us; 77us; 103us; 96us; 97us; 151us; 152us; 9us; 65535us; 2us; 104us; 68us; 104us; 77us; 104us; 96us; 104us; 108us; 109us; 116us; 117us; 119us; 120us; 142us; 145us; 151us; 104us; 10us; 65535us; 2us; 110us; 68us; 110us; 77us; 110us; 96us; 110us; 108us; 110us; 114us; 115us; 116us; 110us; 119us; 110us; 142us; 110us; 151us; 110us; 10us; 65535us; 2us; 114us; 68us; 114us; 77us; 114us; 96us; 114us; 108us; 114us; 114us; 114us; 116us; 114us; 119us; 114us; 142us; 114us; 151us; 114us; 15us; 65535us; 2us; 121us; 4us; 31us; 25us; 31us; 27us; 31us; 29us; 31us; 31us; 31us; 68us; 121us; 77us; 121us; 96us; 121us; 108us; 121us; 114us; 121us; 116us; 121us; 119us; 121us; 142us; 121us; 151us; 121us; 1us; 65535us; 164us; 165us; 1us; 65535us; 135us; 136us; 2us; 65535us; 135us; 149us; 142us; 143us; 0us; 65535us; 1us; 65535us; 311us; 314us; 9us; 65535us; 0us; 90us; 60us; 90us; 72us; 90us; 81us; 90us; 91us; 90us; 94us; 90us; 138us; 90us; 185us; 90us; 189us; 90us; 9us; 65535us; 0us; 160us; 60us; 160us; 72us; 160us; 81us; 160us; 91us; 160us; 94us; 160us; 138us; 160us; 185us; 160us; 189us; 160us; 2us; 65535us; 179us; 180us; 290us; 291us; 1us; 65535us; 164us; 166us; 84us; 65535us; 0us; 70us; 2us; 75us; 4us; 33us; 25us; 33us; 27us; 33us; 29us; 33us; 31us; 123us; 54us; 58us; 56us; 58us; 60us; 70us; 62us; 66us; 64us; 66us; 68us; 75us; 72us; 161us; 77us; 105us; 81us; 161us; 91us; 161us; 94us; 161us; 96us; 105us; 108us; 105us; 114us; 123us; 116us; 105us; 119us; 105us; 130us; 305us; 138us; 161us; 142us; 105us; 151us; 105us; 156us; 380us; 171us; 172us; 185us; 161us; 189us; 161us; 215us; 305us; 218us; 305us; 221us; 462us; 224us; 280us; 226us; 279us; 239us; 279us; 245us; 279us; 249us; 279us; 253us; 279us; 259us; 279us; 300us; 305us; 308us; 305us; 311us; 315us; 312us; 462us; 320us; 462us; 322us; 381us; 324us; 380us; 337us; 380us; 341us; 380us; 343us; 380us; 347us; 380us; 353us; 380us; 355us; 380us; 366us; 367us; 411us; 305us; 424us; 454us; 427us; 380us; 430us; 279us; 446us; 454us; 452us; 454us; 467us; 587us; 484us; 493us; 489us; 493us; 490us; 493us; 496us; 493us; 501us; 493us; 526us; 279us; 535us; 279us; 541us; 551us; 544us; 551us; 549us; 551us; 584us; 587us; 599us; 600us; 612us; 663us; 618us; 663us; 630us; 657us; 635us; 644us; 640us; 644us; 642us; 644us; 660us; 663us; 1200us; 279us; 1267us; 455us; 1269us; 663us; 118us; 65535us; 0us; 192us; 2us; 192us; 4us; 192us; 25us; 192us; 27us; 192us; 29us; 192us; 31us; 192us; 54us; 192us; 56us; 192us; 60us; 192us; 62us; 192us; 64us; 192us; 68us; 192us; 72us; 192us; 77us; 192us; 81us; 192us; 91us; 192us; 94us; 192us; 96us; 192us; 108us; 192us; 114us; 192us; 116us; 192us; 119us; 192us; 130us; 192us; 138us; 192us; 142us; 192us; 151us; 192us; 156us; 192us; 171us; 192us; 178us; 1324us; 185us; 192us; 189us; 192us; 193us; 194us; 215us; 192us; 218us; 192us; 221us; 192us; 224us; 192us; 226us; 192us; 236us; 1324us; 239us; 192us; 245us; 192us; 249us; 192us; 253us; 192us; 259us; 192us; 288us; 1324us; 300us; 192us; 303us; 1324us; 308us; 192us; 311us; 192us; 312us; 192us; 320us; 192us; 322us; 192us; 324us; 192us; 334us; 1324us; 337us; 192us; 341us; 192us; 343us; 192us; 347us; 192us; 353us; 192us; 355us; 192us; 366us; 192us; 396us; 1324us; 411us; 192us; 424us; 192us; 427us; 192us; 430us; 192us; 446us; 192us; 452us; 192us; 467us; 192us; 484us; 192us; 489us; 192us; 490us; 192us; 496us; 192us; 501us; 192us; 526us; 192us; 535us; 192us; 541us; 192us; 544us; 192us; 549us; 192us; 558us; 1324us; 584us; 192us; 599us; 192us; 612us; 192us; 618us; 192us; 630us; 192us; 635us; 192us; 640us; 192us; 642us; 192us; 660us; 192us; 722us; 722us; 723us; 722us; 725us; 722us; 774us; 815us; 777us; 815us; 789us; 815us; 810us; 815us; 815us; 815us; 816us; 815us; 818us; 815us; 819us; 815us; 820us; 815us; 821us; 815us; 828us; 815us; 830us; 815us; 908us; 815us; 1026us; 815us; 1028us; 815us; 1033us; 815us; 1040us; 815us; 1200us; 192us; 1267us; 192us; 1269us; 192us; 1301us; 815us; 1304us; 815us; 1313us; 1324us; 1316us; 1324us; 1319us; 1324us; 1322us; 1324us; 118us; 65535us; 0us; 193us; 2us; 193us; 4us; 193us; 25us; 193us; 27us; 193us; 29us; 193us; 31us; 193us; 54us; 193us; 56us; 193us; 60us; 193us; 62us; 193us; 64us; 193us; 68us; 193us; 72us; 193us; 77us; 193us; 81us; 193us; 91us; 193us; 94us; 193us; 96us; 193us; 108us; 193us; 114us; 193us; 116us; 193us; 119us; 193us; 130us; 193us; 138us; 193us; 142us; 193us; 151us; 193us; 156us; 193us; 171us; 193us; 178us; 193us; 185us; 193us; 189us; 193us; 193us; 193us; 215us; 193us; 218us; 193us; 221us; 193us; 224us; 193us; 226us; 193us; 236us; 193us; 239us; 193us; 245us; 193us; 249us; 193us; 253us; 193us; 259us; 193us; 288us; 193us; 300us; 193us; 303us; 193us; 308us; 193us; 311us; 193us; 312us; 193us; 320us; 193us; 322us; 193us; 324us; 193us; 334us; 193us; 337us; 193us; 341us; 193us; 343us; 193us; 347us; 193us; 353us; 193us; 355us; 193us; 366us; 193us; 396us; 193us; 411us; 193us; 424us; 193us; 427us; 193us; 430us; 193us; 446us; 193us; 452us; 193us; 467us; 193us; 484us; 193us; 489us; 193us; 490us; 193us; 496us; 193us; 501us; 193us; 526us; 193us; 535us; 193us; 541us; 193us; 544us; 193us; 549us; 193us; 558us; 193us; 584us; 193us; 599us; 193us; 612us; 193us; 618us; 193us; 630us; 193us; 635us; 193us; 640us; 193us; 642us; 193us; 660us; 193us; 722us; 193us; 723us; 193us; 725us; 193us; 774us; 193us; 777us; 193us; 789us; 193us; 810us; 193us; 815us; 193us; 816us; 193us; 818us; 193us; 819us; 193us; 820us; 193us; 821us; 193us; 828us; 193us; 830us; 193us; 908us; 193us; 1026us; 193us; 1028us; 193us; 1033us; 193us; 1040us; 193us; 1200us; 193us; 1267us; 193us; 1269us; 193us; 1301us; 193us; 1304us; 193us; 1313us; 193us; 1316us; 193us; 1319us; 193us; 1322us; 193us; 1us; 65535us; 195us; 196us; 2us; 65535us; 195us; 200us; 201us; 202us; 2us; 65535us; 195us; 206us; 201us; 206us; 2us; 65535us; 71us; 167us; 162us; 167us; 2us; 65535us; 215us; 216us; 218us; 219us; 3us; 65535us; 215us; 217us; 218us; 217us; 300us; 301us; 1us; 65535us; 221us; 222us; 2us; 65535us; 221us; 231us; 224us; 225us; 2us; 65535us; 221us; 234us; 224us; 234us; 2us; 65535us; 221us; 238us; 224us; 238us; 3us; 65535us; 239us; 240us; 249us; 250us; 430us; 431us; 8us; 65535us; 224us; 246us; 226us; 227us; 239us; 257us; 245us; 246us; 249us; 257us; 253us; 254us; 259us; 260us; 430us; 257us; 4us; 65535us; 281us; 267us; 282us; 267us; 382us; 386us; 383us; 386us; 2us; 65535us; 281us; 283us; 282us; 283us; 2us; 65535us; 289us; 290us; 397us; 398us; 2us; 65535us; 270us; 271us; 272us; 273us; 11us; 65535us; 224us; 258us; 226us; 258us; 239us; 258us; 245us; 258us; 249us; 258us; 253us; 258us; 259us; 258us; 430us; 258us; 526us; 527us; 535us; 536us; 1200us; 1201us; 6us; 65535us; 130us; 311us; 215us; 220us; 218us; 220us; 300us; 220us; 308us; 311us; 411us; 311us; 2us; 65535us; 131us; 132us; 309us; 310us; 3us; 65535us; 130us; 131us; 308us; 309us; 411us; 412us; 2us; 65535us; 312us; 313us; 320us; 321us; 3us; 65535us; 312us; 329us; 320us; 329us; 322us; 323us; 3us; 65535us; 312us; 332us; 320us; 332us; 322us; 332us; 3us; 65535us; 312us; 336us; 320us; 336us; 322us; 336us; 3us; 65535us; 156us; 157us; 337us; 338us; 427us; 428us; 10us; 65535us; 156us; 351us; 322us; 344us; 324us; 325us; 337us; 351us; 341us; 356us; 343us; 344us; 347us; 348us; 353us; 354us; 355us; 356us; 427us; 351us; 1us; 65535us; 374us; 377us; 2us; 65535us; 357us; 358us; 359us; 360us; 3us; 65535us; 357us; 363us; 359us; 363us; 364us; 365us; 2us; 65535us; 386us; 387us; 456us; 457us; 2us; 65535us; 382us; 392us; 383us; 392us; 10us; 65535us; 156us; 352us; 322us; 352us; 324us; 352us; 337us; 352us; 341us; 352us; 343us; 352us; 347us; 352us; 353us; 352us; 355us; 352us; 427us; 352us; 39us; 65535us; 367us; 752us; 372us; 752us; 405us; 784us; 667us; 752us; 743us; 752us; 744us; 752us; 748us; 752us; 749us; 752us; 750us; 752us; 751us; 752us; 753us; 784us; 755us; 784us; 757us; 784us; 762us; 784us; 764us; 784us; 766us; 784us; 774us; 752us; 777us; 752us; 789us; 752us; 810us; 752us; 815us; 752us; 816us; 752us; 818us; 752us; 819us; 752us; 820us; 752us; 821us; 752us; 828us; 752us; 830us; 752us; 908us; 752us; 933us; 752us; 939us; 752us; 1026us; 752us; 1028us; 752us; 1033us; 752us; 1040us; 752us; 1287us; 784us; 1292us; 784us; 1301us; 752us; 1304us; 752us; 8us; 65535us; 49us; 50us; 174us; 175us; 284us; 285us; 305us; 478us; 551us; 552us; 589us; 590us; 600us; 601us; 631us; 632us; 59us; 65535us; 33us; 423us; 49us; 419us; 70us; 423us; 75us; 423us; 105us; 423us; 123us; 423us; 161us; 423us; 174us; 419us; 279us; 423us; 280us; 423us; 284us; 419us; 305us; 419us; 315us; 423us; 367us; 417us; 372us; 417us; 380us; 423us; 381us; 423us; 405us; 417us; 462us; 423us; 551us; 419us; 589us; 419us; 600us; 419us; 631us; 419us; 667us; 417us; 743us; 417us; 744us; 417us; 748us; 417us; 749us; 417us; 750us; 417us; 751us; 417us; 753us; 417us; 755us; 417us; 757us; 417us; 762us; 417us; 764us; 417us; 766us; 417us; 774us; 417us; 777us; 417us; 789us; 417us; 810us; 417us; 815us; 417us; 816us; 417us; 818us; 417us; 819us; 417us; 820us; 417us; 821us; 417us; 828us; 417us; 830us; 417us; 908us; 417us; 933us; 417us; 939us; 417us; 1026us; 417us; 1028us; 417us; 1033us; 417us; 1040us; 417us; 1287us; 417us; 1292us; 417us; 1301us; 417us; 1304us; 417us; 12us; 65535us; 33us; 34us; 70us; 71us; 75us; 76us; 105us; 106us; 123us; 124us; 161us; 162us; 279us; 281us; 280us; 282us; 315us; 316us; 380us; 382us; 381us; 383us; 462us; 463us; 1us; 65535us; 390us; 391us; 4us; 65535us; 325us; 326us; 327us; 328us; 329us; 330us; 594us; 595us; 5us; 65535us; 220us; 223us; 227us; 228us; 229us; 230us; 231us; 232us; 596us; 597us; 2us; 65535us; 382us; 400us; 383us; 400us; 2us; 65535us; 318us; 319us; 406us; 407us; 2us; 65535us; 318us; 439us; 406us; 439us; 2us; 65535us; 434us; 435us; 437us; 438us; 3us; 65535us; 434us; 442us; 437us; 442us; 1091us; 1265us; 2us; 65535us; 424us; 425us; 1267us; 1272us; 4us; 65535us; 424us; 450us; 446us; 447us; 452us; 453us; 1267us; 450us; 4us; 65535us; 424us; 451us; 446us; 451us; 452us; 451us; 1267us; 451us; 2us; 65535us; 454us; 456us; 455us; 456us; 5us; 65535us; 221us; 233us; 224us; 233us; 312us; 331us; 320us; 331us; 322us; 331us; 6us; 65535us; 282us; 466us; 383us; 466us; 463us; 466us; 555us; 579us; 577us; 579us; 605us; 579us; 5us; 65535us; 221us; 239us; 224us; 239us; 312us; 337us; 320us; 337us; 322us; 337us; 9us; 65535us; 281us; 292us; 282us; 292us; 382us; 389us; 383us; 389us; 1261us; 1280us; 1263us; 1280us; 1274us; 1280us; 1276us; 1280us; 1278us; 1280us; 1us; 65535us; 305us; 306us; 1us; 65535us; 478us; 480us; 3us; 65535us; 484us; 485us; 496us; 487us; 501us; 488us; 5us; 65535us; 484us; 492us; 489us; 491us; 490us; 491us; 496us; 492us; 501us; 492us; 1us; 65535us; 479us; 482us; 1us; 65535us; 501us; 502us; 4us; 65535us; 176us; 505us; 286us; 505us; 394us; 505us; 752us; 506us; 3us; 65535us; 176us; 177us; 286us; 287us; 394us; 395us; 1us; 65535us; 752us; 753us; 3us; 65535us; 306us; 307us; 487us; 497us; 502us; 503us; 3us; 65535us; 507us; 508us; 1310us; 509us; 1312us; 510us; 4us; 65535us; 507us; 513us; 511us; 512us; 1310us; 513us; 1312us; 513us; 3us; 65535us; 282us; 465us; 383us; 465us; 463us; 465us; 5us; 65535us; 282us; 541us; 383us; 541us; 463us; 541us; 543us; 544us; 548us; 549us; 3us; 65535us; 541us; 542us; 544us; 545us; 549us; 550us; 3us; 65535us; 541us; 548us; 544us; 548us; 549us; 548us; 1us; 65535us; 552us; 553us; 3us; 65535us; 282us; 543us; 383us; 543us; 463us; 543us; 3us; 65535us; 282us; 546us; 383us; 546us; 463us; 546us; 3us; 65535us; 555us; 556us; 577us; 578us; 605us; 606us; 2us; 65535us; 467us; 468us; 584us; 585us; 2us; 65535us; 467us; 583us; 584us; 583us; 5us; 65535us; 296us; 297us; 298us; 299us; 401us; 402us; 403us; 404us; 587us; 588us; 4us; 65535us; 34us; 133us; 76us; 133us; 106us; 133us; 124us; 133us; 2us; 65535us; 71us; 168us; 162us; 168us; 6us; 65535us; 34us; 599us; 71us; 599us; 76us; 599us; 106us; 599us; 124us; 599us; 162us; 599us; 6us; 65535us; 34us; 594us; 71us; 596us; 76us; 594us; 106us; 594us; 124us; 594us; 162us; 596us; 1us; 65535us; 601us; 602us; 1us; 65535us; 602us; 603us; 15us; 65535us; 2us; 137us; 4us; 137us; 25us; 137us; 27us; 137us; 29us; 137us; 31us; 137us; 68us; 137us; 77us; 137us; 96us; 137us; 108us; 137us; 114us; 137us; 116us; 137us; 119us; 137us; 142us; 137us; 151us; 137us; 109us; 65535us; 34us; 126us; 76us; 126us; 106us; 126us; 124us; 125us; 128us; 861us; 181us; 861us; 262us; 624us; 370us; 861us; 375us; 861us; 382us; 624us; 383us; 624us; 408us; 861us; 615us; 861us; 621us; 861us; 670us; 861us; 673us; 861us; 683us; 861us; 832us; 861us; 837us; 861us; 849us; 861us; 851us; 861us; 854us; 861us; 857us; 861us; 862us; 861us; 865us; 861us; 868us; 861us; 874us; 861us; 878us; 861us; 882us; 861us; 884us; 861us; 889us; 861us; 891us; 861us; 893us; 861us; 895us; 861us; 897us; 861us; 899us; 861us; 910us; 861us; 917us; 861us; 924us; 861us; 929us; 861us; 931us; 861us; 934us; 861us; 937us; 861us; 940us; 861us; 943us; 861us; 946us; 861us; 949us; 861us; 951us; 861us; 956us; 861us; 998us; 861us; 1000us; 861us; 1003us; 861us; 1004us; 861us; 1005us; 861us; 1006us; 861us; 1007us; 861us; 1008us; 861us; 1009us; 861us; 1010us; 861us; 1011us; 861us; 1012us; 861us; 1013us; 861us; 1014us; 861us; 1015us; 861us; 1016us; 861us; 1017us; 861us; 1018us; 861us; 1019us; 861us; 1020us; 861us; 1021us; 861us; 1023us; 861us; 1044us; 861us; 1045us; 861us; 1049us; 861us; 1051us; 861us; 1055us; 861us; 1057us; 861us; 1061us; 861us; 1064us; 861us; 1065us; 861us; 1126us; 861us; 1135us; 861us; 1142us; 861us; 1147us; 861us; 1150us; 861us; 1153us; 861us; 1156us; 861us; 1157us; 861us; 1168us; 861us; 1175us; 861us; 1176us; 861us; 1182us; 861us; 1188us; 861us; 1189us; 861us; 1190us; 861us; 1202us; 861us; 1210us; 861us; 1222us; 861us; 1223us; 861us; 1224us; 861us; 1226us; 861us; 1229us; 861us; 1230us; 861us; 1238us; 861us; 1244us; 861us; 1250us; 861us; 1257us; 861us; 1289us; 861us; 1294us; 861us; 7us; 65535us; 34us; 129us; 76us; 129us; 106us; 129us; 124us; 129us; 262us; 625us; 382us; 625us; 383us; 625us; 109us; 65535us; 34us; 128us; 76us; 128us; 106us; 128us; 124us; 127us; 128us; 857us; 181us; 865us; 262us; 626us; 370us; 857us; 375us; 857us; 382us; 626us; 383us; 626us; 408us; 857us; 615us; 857us; 621us; 857us; 670us; 857us; 673us; 857us; 683us; 857us; 832us; 857us; 837us; 857us; 849us; 857us; 851us; 857us; 854us; 857us; 857us; 857us; 862us; 857us; 865us; 857us; 868us; 857us; 874us; 857us; 878us; 857us; 882us; 857us; 884us; 865us; 889us; 865us; 891us; 865us; 893us; 865us; 895us; 865us; 897us; 865us; 899us; 857us; 910us; 857us; 917us; 857us; 924us; 857us; 929us; 865us; 931us; 865us; 934us; 857us; 937us; 857us; 940us; 857us; 943us; 857us; 946us; 857us; 949us; 857us; 951us; 857us; 956us; 857us; 998us; 865us; 1000us; 865us; 1003us; 865us; 1004us; 865us; 1005us; 865us; 1006us; 865us; 1007us; 865us; 1008us; 865us; 1009us; 865us; 1010us; 865us; 1011us; 865us; 1012us; 865us; 1013us; 865us; 1014us; 865us; 1015us; 865us; 1016us; 865us; 1017us; 865us; 1018us; 865us; 1019us; 865us; 1020us; 865us; 1021us; 865us; 1023us; 857us; 1044us; 865us; 1045us; 857us; 1049us; 865us; 1051us; 857us; 1055us; 865us; 1057us; 857us; 1061us; 865us; 1064us; 865us; 1065us; 865us; 1126us; 857us; 1135us; 857us; 1142us; 857us; 1147us; 865us; 1150us; 865us; 1153us; 865us; 1156us; 865us; 1157us; 865us; 1168us; 857us; 1175us; 857us; 1176us; 857us; 1182us; 857us; 1188us; 857us; 1189us; 857us; 1190us; 857us; 1202us; 857us; 1210us; 857us; 1222us; 865us; 1223us; 865us; 1224us; 857us; 1226us; 865us; 1229us; 865us; 1230us; 865us; 1238us; 865us; 1244us; 865us; 1250us; 865us; 1257us; 865us; 1289us; 857us; 1294us; 857us; 108us; 65535us; 34us; 871us; 76us; 871us; 106us; 871us; 128us; 871us; 181us; 871us; 262us; 627us; 370us; 871us; 375us; 871us; 382us; 627us; 383us; 627us; 408us; 871us; 615us; 871us; 621us; 871us; 670us; 871us; 673us; 871us; 683us; 871us; 832us; 871us; 837us; 871us; 849us; 871us; 851us; 871us; 854us; 871us; 857us; 871us; 862us; 871us; 865us; 871us; 868us; 871us; 874us; 871us; 878us; 871us; 882us; 871us; 884us; 871us; 889us; 871us; 891us; 871us; 893us; 871us; 895us; 871us; 897us; 871us; 899us; 871us; 910us; 871us; 917us; 871us; 924us; 871us; 929us; 871us; 931us; 871us; 934us; 871us; 937us; 871us; 940us; 871us; 943us; 871us; 946us; 871us; 949us; 871us; 951us; 871us; 956us; 871us; 998us; 871us; 1000us; 871us; 1003us; 871us; 1004us; 871us; 1005us; 871us; 1006us; 871us; 1007us; 871us; 1008us; 871us; 1009us; 871us; 1010us; 871us; 1011us; 871us; 1012us; 871us; 1013us; 871us; 1014us; 871us; 1015us; 871us; 1016us; 871us; 1017us; 871us; 1018us; 871us; 1019us; 871us; 1020us; 871us; 1021us; 871us; 1023us; 871us; 1044us; 871us; 1045us; 871us; 1049us; 871us; 1051us; 871us; 1055us; 871us; 1057us; 871us; 1061us; 871us; 1064us; 871us; 1065us; 871us; 1126us; 871us; 1135us; 871us; 1142us; 871us; 1147us; 871us; 1150us; 871us; 1153us; 871us; 1156us; 871us; 1157us; 871us; 1168us; 871us; 1175us; 871us; 1176us; 871us; 1182us; 871us; 1188us; 871us; 1189us; 871us; 1190us; 871us; 1202us; 871us; 1210us; 871us; 1222us; 871us; 1223us; 871us; 1224us; 871us; 1226us; 871us; 1229us; 871us; 1230us; 871us; 1238us; 871us; 1244us; 871us; 1250us; 871us; 1257us; 871us; 1289us; 871us; 1294us; 871us; 3us; 65535us; 262us; 385us; 382us; 384us; 383us; 384us; 4us; 65535us; 619us; 620us; 622us; 623us; 941us; 942us; 952us; 953us; 109us; 65535us; 34us; 614us; 76us; 614us; 106us; 614us; 124us; 614us; 128us; 614us; 181us; 614us; 262us; 614us; 370us; 614us; 375us; 614us; 382us; 614us; 383us; 614us; 408us; 614us; 615us; 614us; 621us; 614us; 670us; 614us; 673us; 614us; 683us; 614us; 832us; 614us; 837us; 614us; 849us; 614us; 851us; 614us; 854us; 614us; 857us; 614us; 862us; 614us; 865us; 614us; 868us; 614us; 874us; 614us; 878us; 614us; 882us; 614us; 884us; 614us; 889us; 614us; 891us; 614us; 893us; 614us; 895us; 614us; 897us; 614us; 899us; 614us; 910us; 614us; 917us; 614us; 924us; 614us; 929us; 614us; 931us; 614us; 934us; 614us; 937us; 614us; 940us; 614us; 943us; 614us; 946us; 614us; 949us; 614us; 951us; 614us; 956us; 614us; 998us; 614us; 1000us; 614us; 1003us; 614us; 1004us; 614us; 1005us; 614us; 1006us; 614us; 1007us; 614us; 1008us; 614us; 1009us; 614us; 1010us; 614us; 1011us; 614us; 1012us; 614us; 1013us; 614us; 1014us; 614us; 1015us; 614us; 1016us; 614us; 1017us; 614us; 1018us; 614us; 1019us; 614us; 1020us; 614us; 1021us; 614us; 1023us; 614us; 1044us; 614us; 1045us; 614us; 1049us; 614us; 1051us; 614us; 1055us; 614us; 1057us; 614us; 1061us; 614us; 1064us; 614us; 1065us; 614us; 1126us; 614us; 1135us; 614us; 1142us; 614us; 1147us; 614us; 1150us; 614us; 1153us; 614us; 1156us; 614us; 1157us; 614us; 1168us; 614us; 1175us; 614us; 1176us; 614us; 1182us; 614us; 1188us; 614us; 1189us; 614us; 1190us; 614us; 1202us; 614us; 1210us; 614us; 1222us; 614us; 1223us; 614us; 1224us; 614us; 1226us; 614us; 1229us; 614us; 1230us; 614us; 1238us; 614us; 1244us; 614us; 1250us; 614us; 1257us; 614us; 1289us; 614us; 1294us; 614us; 1us; 65535us; 635us; 636us; 1us; 65535us; 635us; 638us; 3us; 65535us; 635us; 639us; 640us; 641us; 642us; 643us; 2us; 65535us; 644us; 645us; 657us; 648us; 1us; 65535us; 630us; 631us; 4us; 65535us; 612us; 613us; 618us; 619us; 1267us; 1268us; 1269us; 1270us; 2us; 65535us; 658us; 659us; 661us; 662us; 5us; 65535us; 612us; 658us; 618us; 658us; 660us; 661us; 1267us; 658us; 1269us; 658us; 2us; 65535us; 455us; 664us; 663us; 664us; 1us; 65535us; 670us; 671us; 2us; 65535us; 670us; 677us; 673us; 674us; 1us; 65535us; 678us; 679us; 1us; 65535us; 679us; 680us; 1us; 65535us; 681us; 682us; 2us; 65535us; 681us; 687us; 685us; 686us; 173us; 65535us; 34us; 711us; 76us; 711us; 106us; 711us; 128us; 711us; 181us; 711us; 204us; 711us; 209us; 711us; 367us; 711us; 370us; 711us; 372us; 711us; 375us; 711us; 405us; 711us; 408us; 711us; 436us; 711us; 561us; 711us; 573us; 711us; 615us; 711us; 621us; 711us; 667us; 711us; 670us; 711us; 673us; 711us; 683us; 711us; 743us; 711us; 744us; 711us; 748us; 711us; 749us; 711us; 750us; 711us; 751us; 711us; 753us; 711us; 755us; 711us; 757us; 711us; 762us; 711us; 764us; 711us; 766us; 711us; 774us; 711us; 777us; 711us; 789us; 711us; 810us; 711us; 815us; 711us; 816us; 711us; 818us; 711us; 819us; 711us; 820us; 711us; 821us; 711us; 828us; 711us; 830us; 711us; 832us; 711us; 837us; 711us; 849us; 711us; 851us; 711us; 854us; 711us; 857us; 711us; 862us; 711us; 865us; 711us; 868us; 711us; 874us; 711us; 878us; 711us; 882us; 711us; 884us; 711us; 889us; 711us; 891us; 711us; 893us; 711us; 895us; 711us; 897us; 711us; 899us; 711us; 908us; 711us; 910us; 711us; 917us; 711us; 924us; 711us; 929us; 711us; 931us; 711us; 933us; 711us; 934us; 711us; 937us; 711us; 939us; 711us; 940us; 711us; 943us; 711us; 946us; 711us; 949us; 711us; 951us; 711us; 956us; 711us; 998us; 711us; 1000us; 711us; 1003us; 711us; 1004us; 711us; 1005us; 711us; 1006us; 711us; 1007us; 711us; 1008us; 711us; 1009us; 711us; 1010us; 711us; 1011us; 711us; 1012us; 711us; 1013us; 711us; 1014us; 711us; 1015us; 711us; 1016us; 711us; 1017us; 711us; 1018us; 711us; 1019us; 711us; 1020us; 711us; 1021us; 711us; 1023us; 711us; 1026us; 711us; 1028us; 711us; 1033us; 711us; 1040us; 711us; 1044us; 711us; 1045us; 711us; 1049us; 711us; 1051us; 711us; 1055us; 711us; 1057us; 711us; 1061us; 711us; 1064us; 711us; 1065us; 711us; 1066us; 711us; 1067us; 711us; 1069us; 711us; 1070us; 711us; 1072us; 711us; 1073us; 711us; 1075us; 711us; 1076us; 711us; 1078us; 711us; 1079us; 711us; 1081us; 711us; 1082us; 711us; 1088us; 711us; 1089us; 711us; 1094us; 711us; 1096us; 711us; 1098us; 711us; 1099us; 711us; 1102us; 711us; 1108us; 711us; 1109us; 711us; 1112us; 711us; 1113us; 711us; 1126us; 711us; 1135us; 711us; 1142us; 711us; 1147us; 711us; 1150us; 711us; 1153us; 711us; 1156us; 711us; 1157us; 711us; 1168us; 711us; 1175us; 711us; 1176us; 711us; 1182us; 711us; 1188us; 711us; 1189us; 711us; 1190us; 711us; 1202us; 711us; 1210us; 711us; 1222us; 711us; 1223us; 711us; 1224us; 711us; 1226us; 711us; 1229us; 711us; 1230us; 711us; 1234us; 711us; 1238us; 711us; 1244us; 711us; 1250us; 711us; 1257us; 711us; 1287us; 711us; 1289us; 711us; 1292us; 711us; 1294us; 711us; 1301us; 711us; 1304us; 711us; 173us; 65535us; 34us; 1159us; 76us; 1159us; 106us; 1159us; 128us; 1159us; 181us; 1159us; 204us; 1159us; 209us; 1159us; 367us; 785us; 370us; 1159us; 372us; 785us; 375us; 1159us; 405us; 785us; 408us; 1159us; 436us; 1159us; 561us; 562us; 573us; 574us; 615us; 1159us; 621us; 1159us; 667us; 785us; 670us; 1159us; 673us; 1159us; 683us; 1159us; 743us; 785us; 744us; 785us; 748us; 785us; 749us; 785us; 750us; 785us; 751us; 785us; 753us; 785us; 755us; 785us; 757us; 785us; 762us; 785us; 764us; 785us; 766us; 785us; 774us; 785us; 777us; 785us; 789us; 785us; 810us; 785us; 815us; 785us; 816us; 785us; 818us; 785us; 819us; 785us; 820us; 785us; 821us; 785us; 828us; 785us; 830us; 785us; 832us; 1159us; 837us; 1159us; 849us; 1159us; 851us; 1159us; 854us; 1159us; 857us; 1159us; 862us; 1159us; 865us; 1159us; 868us; 1159us; 874us; 1159us; 878us; 1159us; 882us; 1159us; 884us; 1159us; 889us; 1159us; 891us; 1159us; 893us; 1159us; 895us; 1159us; 897us; 1159us; 899us; 1159us; 908us; 785us; 910us; 1159us; 917us; 1159us; 924us; 1159us; 929us; 1159us; 931us; 1159us; 933us; 785us; 934us; 1159us; 937us; 1159us; 939us; 785us; 940us; 1159us; 943us; 1159us; 946us; 1159us; 949us; 1159us; 951us; 1159us; 956us; 1159us; 998us; 1159us; 1000us; 1159us; 1003us; 1159us; 1004us; 1159us; 1005us; 1159us; 1006us; 1159us; 1007us; 1159us; 1008us; 1159us; 1009us; 1159us; 1010us; 1159us; 1011us; 1159us; 1012us; 1159us; 1013us; 1159us; 1014us; 1159us; 1015us; 1159us; 1016us; 1159us; 1017us; 1159us; 1018us; 1159us; 1019us; 1159us; 1020us; 1159us; 1021us; 1159us; 1023us; 1159us; 1026us; 785us; 1028us; 785us; 1033us; 785us; 1040us; 785us; 1044us; 1159us; 1045us; 1159us; 1049us; 1159us; 1051us; 1159us; 1055us; 1159us; 1057us; 1159us; 1061us; 1159us; 1064us; 1159us; 1065us; 1159us; 1066us; 1159us; 1067us; 1159us; 1069us; 1159us; 1070us; 1159us; 1072us; 1159us; 1073us; 1159us; 1075us; 1159us; 1076us; 1159us; 1078us; 1159us; 1079us; 1159us; 1081us; 1159us; 1082us; 1159us; 1088us; 1159us; 1089us; 1159us; 1094us; 1159us; 1096us; 1159us; 1098us; 1159us; 1099us; 1159us; 1102us; 1159us; 1108us; 1159us; 1109us; 1159us; 1112us; 1159us; 1113us; 1159us; 1126us; 1159us; 1135us; 1159us; 1142us; 1159us; 1147us; 1159us; 1150us; 1159us; 1153us; 1159us; 1156us; 1159us; 1157us; 1159us; 1168us; 1159us; 1175us; 1159us; 1176us; 1159us; 1182us; 1159us; 1188us; 1159us; 1189us; 1159us; 1190us; 1159us; 1202us; 1159us; 1210us; 1159us; 1222us; 1159us; 1223us; 1159us; 1224us; 1159us; 1226us; 1159us; 1229us; 1159us; 1230us; 1159us; 1234us; 1159us; 1238us; 1159us; 1244us; 1159us; 1250us; 1159us; 1257us; 1159us; 1287us; 785us; 1289us; 1159us; 1292us; 785us; 1294us; 1159us; 1301us; 785us; 1304us; 785us; 3us; 65535us; 367us; 368us; 372us; 373us; 667us; 668us; 3us; 65535us; 722us; 718us; 723us; 719us; 725us; 719us; 2us; 65535us; 723us; 724us; 725us; 726us; 1us; 65535us; 317us; 318us; 11us; 65535us; 367us; 714us; 372us; 714us; 667us; 714us; 743us; 733us; 744us; 734us; 748us; 735us; 749us; 736us; 750us; 737us; 751us; 738us; 933us; 739us; 939us; 740us; 11us; 65535us; 367us; 745us; 372us; 745us; 667us; 745us; 743us; 745us; 744us; 745us; 748us; 745us; 749us; 745us; 750us; 745us; 751us; 745us; 933us; 745us; 939us; 745us; 11us; 65535us; 367us; 746us; 372us; 746us; 667us; 746us; 743us; 746us; 744us; 746us; 748us; 746us; 749us; 746us; 750us; 746us; 751us; 746us; 933us; 746us; 939us; 746us; 30us; 65535us; 367us; 747us; 372us; 747us; 667us; 747us; 743us; 747us; 744us; 747us; 748us; 747us; 749us; 747us; 750us; 747us; 751us; 747us; 774us; 817us; 777us; 817us; 789us; 817us; 810us; 817us; 815us; 817us; 816us; 817us; 818us; 817us; 819us; 817us; 820us; 817us; 821us; 817us; 828us; 817us; 830us; 817us; 908us; 817us; 933us; 747us; 939us; 747us; 1026us; 817us; 1028us; 817us; 1033us; 817us; 1040us; 817us; 1301us; 817us; 1304us; 817us; 8us; 65535us; 753us; 754us; 755us; 756us; 757us; 758us; 762us; 763us; 764us; 765us; 766us; 767us; 1287us; 1288us; 1292us; 1293us; 39us; 65535us; 367us; 761us; 372us; 761us; 405us; 406us; 667us; 761us; 743us; 761us; 744us; 761us; 748us; 761us; 749us; 761us; 750us; 761us; 751us; 761us; 753us; 762us; 755us; 762us; 757us; 762us; 762us; 762us; 764us; 762us; 766us; 762us; 774us; 761us; 777us; 761us; 789us; 761us; 810us; 761us; 815us; 761us; 816us; 761us; 818us; 761us; 819us; 761us; 820us; 761us; 821us; 761us; 828us; 761us; 830us; 761us; 908us; 761us; 933us; 761us; 939us; 761us; 1026us; 761us; 1028us; 761us; 1033us; 761us; 1040us; 761us; 1287us; 762us; 1292us; 762us; 1301us; 761us; 1304us; 761us; 1us; 65535us; 789us; 790us; 19us; 65535us; 774us; 805us; 777us; 805us; 789us; 796us; 810us; 797us; 815us; 798us; 816us; 799us; 818us; 800us; 819us; 801us; 820us; 802us; 821us; 803us; 828us; 804us; 830us; 805us; 908us; 806us; 1026us; 807us; 1028us; 807us; 1033us; 807us; 1040us; 807us; 1301us; 807us; 1304us; 807us; 19us; 65535us; 774us; 811us; 777us; 811us; 789us; 811us; 810us; 811us; 815us; 811us; 816us; 811us; 818us; 811us; 819us; 811us; 820us; 811us; 821us; 811us; 828us; 811us; 830us; 811us; 908us; 811us; 1026us; 811us; 1028us; 811us; 1033us; 811us; 1040us; 811us; 1301us; 811us; 1304us; 811us; 19us; 65535us; 774us; 812us; 777us; 812us; 789us; 812us; 810us; 812us; 815us; 812us; 816us; 812us; 818us; 812us; 819us; 812us; 820us; 812us; 821us; 812us; 828us; 812us; 830us; 812us; 908us; 812us; 1026us; 812us; 1028us; 812us; 1033us; 812us; 1040us; 812us; 1301us; 812us; 1304us; 812us; 1us; 65535us; 771us; 772us; 2us; 65535us; 771us; 822us; 825us; 826us; 2us; 65535us; 771us; 823us; 825us; 823us; 3us; 65535us; 774us; 775us; 777us; 778us; 830us; 831us; 22us; 65535us; 128us; 866us; 370us; 371us; 375us; 376us; 408us; 409us; 615us; 616us; 621us; 622us; 683us; 684us; 857us; 866us; 865us; 866us; 868us; 869us; 882us; 883us; 899us; 900us; 910us; 911us; 917us; 918us; 924us; 925us; 934us; 935us; 937us; 938us; 940us; 941us; 943us; 944us; 949us; 950us; 951us; 952us; 1289us; 1290us; 7us; 65535us; 893us; 894us; 895us; 896us; 1000us; 1001us; 1238us; 1239us; 1244us; 1245us; 1250us; 1251us; 1257us; 1258us; 5us; 65535us; 878us; 879us; 956us; 957us; 1045us; 1046us; 1224us; 1225us; 1294us; 1295us; 47us; 65535us; 128us; 836us; 370us; 836us; 375us; 836us; 408us; 836us; 615us; 836us; 621us; 836us; 670us; 678us; 673us; 678us; 683us; 836us; 832us; 833us; 837us; 838us; 854us; 855us; 857us; 836us; 862us; 863us; 865us; 836us; 868us; 836us; 874us; 875us; 878us; 841us; 882us; 836us; 899us; 836us; 910us; 836us; 917us; 836us; 924us; 836us; 934us; 836us; 937us; 836us; 940us; 836us; 943us; 836us; 946us; 947us; 949us; 836us; 951us; 836us; 956us; 841us; 1023us; 1024us; 1045us; 841us; 1051us; 1052us; 1057us; 1058us; 1135us; 1140us; 1142us; 1143us; 1168us; 1169us; 1175us; 1177us; 1176us; 1177us; 1188us; 1204us; 1189us; 1204us; 1190us; 1204us; 1202us; 1203us; 1224us; 841us; 1289us; 836us; 1294us; 841us; 52us; 65535us; 128us; 843us; 370us; 843us; 375us; 843us; 408us; 843us; 615us; 843us; 621us; 843us; 670us; 843us; 673us; 843us; 683us; 843us; 832us; 843us; 837us; 843us; 849us; 850us; 851us; 852us; 854us; 843us; 857us; 843us; 862us; 843us; 865us; 843us; 868us; 843us; 874us; 843us; 878us; 843us; 882us; 843us; 899us; 843us; 910us; 843us; 917us; 843us; 924us; 843us; 934us; 843us; 937us; 843us; 940us; 843us; 943us; 843us; 946us; 843us; 949us; 843us; 951us; 843us; 956us; 843us; 1023us; 843us; 1045us; 843us; 1051us; 843us; 1057us; 843us; 1126us; 1220us; 1135us; 843us; 1142us; 843us; 1168us; 843us; 1175us; 843us; 1176us; 843us; 1182us; 1220us; 1188us; 843us; 1189us; 843us; 1190us; 843us; 1202us; 843us; 1210us; 1220us; 1224us; 843us; 1289us; 843us; 1294us; 843us; 50us; 65535us; 82us; 85us; 97us; 100us; 145us; 147us; 152us; 154us; 240us; 242us; 246us; 248us; 250us; 252us; 254us; 256us; 338us; 340us; 344us; 345us; 348us; 349us; 447us; 449us; 468us; 470us; 619us; 629us; 622us; 629us; 674us; 676us; 725us; 732us; 726us; 729us; 789us; 795us; 790us; 792us; 833us; 835us; 875us; 877us; 879us; 881us; 884us; 888us; 885us; 887us; 898us; 905us; 900us; 902us; 909us; 913us; 918us; 920us; 941us; 629us; 952us; 629us; 981us; 1063us; 1029us; 1031us; 1052us; 1054us; 1058us; 1060us; 1114us; 1134us; 1117us; 1134us; 1127us; 1129us; 1169us; 1171us; 1177us; 1179us; 1183us; 1185us; 1188us; 1195us; 1189us; 1195us; 1190us; 1195us; 1191us; 1193us; 1211us; 1213us; 1226us; 1228us; 1294us; 1299us; 1401us; 1426us; 1424us; 1426us; 105us; 65535us; 34us; 35us; 76us; 107us; 106us; 107us; 128us; 846us; 181us; 182us; 370us; 846us; 375us; 846us; 408us; 846us; 615us; 846us; 621us; 846us; 670us; 846us; 673us; 846us; 683us; 846us; 832us; 846us; 837us; 846us; 849us; 846us; 851us; 846us; 854us; 846us; 857us; 846us; 862us; 846us; 865us; 846us; 868us; 846us; 874us; 846us; 878us; 846us; 882us; 846us; 884us; 885us; 889us; 890us; 891us; 892us; 893us; 840us; 895us; 840us; 897us; 898us; 899us; 846us; 910us; 846us; 917us; 846us; 924us; 846us; 929us; 930us; 931us; 932us; 934us; 846us; 937us; 846us; 940us; 846us; 943us; 846us; 946us; 846us; 949us; 846us; 951us; 846us; 956us; 846us; 998us; 958us; 1000us; 840us; 1003us; 959us; 1004us; 960us; 1005us; 961us; 1006us; 962us; 1007us; 963us; 1008us; 964us; 1009us; 965us; 1010us; 966us; 1011us; 967us; 1012us; 968us; 1013us; 969us; 1014us; 970us; 1015us; 971us; 1016us; 972us; 1017us; 973us; 1018us; 974us; 1019us; 975us; 1020us; 976us; 1021us; 977us; 1023us; 846us; 1044us; 978us; 1045us; 846us; 1049us; 979us; 1051us; 846us; 1055us; 980us; 1057us; 846us; 1061us; 981us; 1064us; 982us; 1065us; 983us; 1126us; 848us; 1135us; 846us; 1142us; 847us; 1147us; 984us; 1150us; 984us; 1153us; 984us; 1156us; 985us; 1157us; 986us; 1168us; 846us; 1175us; 846us; 1176us; 846us; 1182us; 848us; 1188us; 846us; 1189us; 846us; 1190us; 846us; 1202us; 846us; 1210us; 848us; 1222us; 988us; 1223us; 989us; 1224us; 846us; 1226us; 987us; 1229us; 990us; 1230us; 991us; 1238us; 840us; 1244us; 840us; 1250us; 840us; 1257us; 840us; 1289us; 846us; 1294us; 846us; 1us; 65535us; 1122us; 1123us; 2us; 65535us; 875us; 876us; 879us; 880us; 2us; 65535us; 1026us; 1027us; 1028us; 1029us; 6us; 65535us; 1026us; 1038us; 1028us; 1038us; 1033us; 1038us; 1040us; 1038us; 1301us; 1038us; 1304us; 1038us; 6us; 65535us; 1026us; 1032us; 1028us; 1032us; 1033us; 1034us; 1040us; 1041us; 1301us; 1302us; 1304us; 1305us; 1us; 65535us; 807us; 1037us; 1us; 65535us; 1038us; 1039us; 2us; 65535us; 885us; 886us; 981us; 1062us; 2us; 65535us; 885us; 1047us; 981us; 1047us; 1us; 65535us; 1047us; 1048us; 105us; 65535us; 34us; 1002us; 76us; 1002us; 106us; 1002us; 128us; 1002us; 181us; 1002us; 370us; 1002us; 375us; 1002us; 408us; 1002us; 615us; 1002us; 621us; 1002us; 670us; 1002us; 673us; 1002us; 683us; 1002us; 832us; 1002us; 837us; 1002us; 849us; 1002us; 851us; 1002us; 854us; 1002us; 857us; 1002us; 862us; 1002us; 865us; 1002us; 868us; 1002us; 874us; 1002us; 878us; 1002us; 882us; 1002us; 884us; 1002us; 889us; 1002us; 891us; 1002us; 893us; 1002us; 895us; 1002us; 897us; 1002us; 899us; 1002us; 910us; 1002us; 917us; 1002us; 924us; 1002us; 929us; 1002us; 931us; 1002us; 934us; 1002us; 937us; 1002us; 940us; 1002us; 943us; 1002us; 946us; 1002us; 949us; 1002us; 951us; 1002us; 956us; 1002us; 998us; 1002us; 1000us; 1002us; 1003us; 1002us; 1004us; 1002us; 1005us; 1002us; 1006us; 1002us; 1007us; 1002us; 1008us; 1002us; 1009us; 1002us; 1010us; 1002us; 1011us; 1002us; 1012us; 1002us; 1013us; 1002us; 1014us; 1002us; 1015us; 1002us; 1016us; 1002us; 1017us; 1002us; 1018us; 1002us; 1019us; 1002us; 1020us; 1002us; 1021us; 1002us; 1023us; 1002us; 1044us; 1002us; 1045us; 1002us; 1049us; 1002us; 1051us; 1002us; 1055us; 1002us; 1057us; 1002us; 1061us; 1002us; 1064us; 1002us; 1065us; 1002us; 1126us; 1002us; 1135us; 1002us; 1142us; 1002us; 1147us; 1002us; 1150us; 1002us; 1153us; 1002us; 1156us; 1002us; 1157us; 1002us; 1168us; 1002us; 1175us; 1002us; 1176us; 1002us; 1182us; 1002us; 1188us; 1002us; 1189us; 1002us; 1190us; 1002us; 1202us; 1002us; 1210us; 1002us; 1222us; 1002us; 1223us; 1002us; 1224us; 1002us; 1226us; 1002us; 1229us; 1002us; 1230us; 1002us; 1238us; 1002us; 1244us; 1002us; 1250us; 1002us; 1257us; 1002us; 1289us; 1002us; 1294us; 1002us; 119us; 65535us; 34us; 999us; 76us; 999us; 106us; 999us; 128us; 999us; 181us; 999us; 370us; 999us; 375us; 999us; 408us; 999us; 615us; 999us; 621us; 999us; 670us; 999us; 673us; 999us; 683us; 999us; 832us; 999us; 837us; 999us; 849us; 999us; 851us; 999us; 854us; 999us; 857us; 999us; 862us; 999us; 865us; 999us; 868us; 999us; 874us; 999us; 878us; 999us; 882us; 999us; 884us; 999us; 889us; 999us; 891us; 999us; 893us; 999us; 895us; 999us; 897us; 999us; 899us; 999us; 910us; 999us; 917us; 999us; 924us; 999us; 929us; 999us; 931us; 999us; 934us; 999us; 937us; 999us; 940us; 999us; 943us; 999us; 946us; 999us; 949us; 999us; 951us; 999us; 956us; 999us; 998us; 999us; 1000us; 999us; 1003us; 999us; 1004us; 999us; 1005us; 999us; 1006us; 999us; 1007us; 999us; 1008us; 999us; 1009us; 999us; 1010us; 999us; 1011us; 999us; 1012us; 999us; 1013us; 999us; 1014us; 999us; 1015us; 999us; 1016us; 999us; 1017us; 999us; 1018us; 999us; 1019us; 999us; 1020us; 999us; 1021us; 999us; 1023us; 999us; 1044us; 999us; 1045us; 999us; 1049us; 999us; 1051us; 999us; 1055us; 999us; 1057us; 999us; 1061us; 999us; 1064us; 999us; 1065us; 999us; 1066us; 1068us; 1067us; 1068us; 1069us; 1071us; 1070us; 1071us; 1072us; 1074us; 1073us; 1074us; 1075us; 1077us; 1076us; 1077us; 1078us; 1080us; 1079us; 1080us; 1081us; 1083us; 1082us; 1083us; 1094us; 1095us; 1096us; 1097us; 1126us; 999us; 1135us; 999us; 1142us; 999us; 1147us; 999us; 1150us; 999us; 1153us; 999us; 1156us; 999us; 1157us; 999us; 1168us; 999us; 1175us; 999us; 1176us; 999us; 1182us; 999us; 1188us; 999us; 1189us; 999us; 1190us; 999us; 1202us; 999us; 1210us; 999us; 1222us; 999us; 1223us; 999us; 1224us; 999us; 1226us; 999us; 1229us; 999us; 1230us; 999us; 1238us; 999us; 1244us; 999us; 1250us; 999us; 1257us; 999us; 1289us; 999us; 1294us; 999us; 119us; 65535us; 34us; 1098us; 76us; 1098us; 106us; 1098us; 128us; 1098us; 181us; 1098us; 370us; 1098us; 375us; 1098us; 408us; 1098us; 615us; 1098us; 621us; 1098us; 670us; 1098us; 673us; 1098us; 683us; 1098us; 832us; 1098us; 837us; 1098us; 849us; 1098us; 851us; 1098us; 854us; 1098us; 857us; 1098us; 862us; 1098us; 865us; 1098us; 868us; 1098us; 874us; 1098us; 878us; 1098us; 882us; 1098us; 884us; 1098us; 889us; 1098us; 891us; 1098us; 893us; 1098us; 895us; 1098us; 897us; 1098us; 899us; 1098us; 910us; 1098us; 917us; 1098us; 924us; 1098us; 929us; 1098us; 931us; 1098us; 934us; 1098us; 937us; 1098us; 940us; 1098us; 943us; 1098us; 946us; 1098us; 949us; 1098us; 951us; 1098us; 956us; 1098us; 998us; 1098us; 1000us; 1098us; 1003us; 1098us; 1004us; 1098us; 1005us; 1098us; 1006us; 1098us; 1007us; 1098us; 1008us; 1098us; 1009us; 1098us; 1010us; 1098us; 1011us; 1098us; 1012us; 1098us; 1013us; 1098us; 1014us; 1098us; 1015us; 1098us; 1016us; 1098us; 1017us; 1098us; 1018us; 1098us; 1019us; 1098us; 1020us; 1098us; 1021us; 1098us; 1023us; 1098us; 1044us; 1098us; 1045us; 1098us; 1049us; 1098us; 1051us; 1098us; 1055us; 1098us; 1057us; 1098us; 1061us; 1098us; 1064us; 1098us; 1065us; 1098us; 1066us; 1098us; 1067us; 1098us; 1069us; 1098us; 1070us; 1098us; 1072us; 1098us; 1073us; 1098us; 1075us; 1098us; 1076us; 1098us; 1078us; 1098us; 1079us; 1098us; 1081us; 1098us; 1082us; 1098us; 1094us; 1098us; 1096us; 1098us; 1126us; 1098us; 1135us; 1098us; 1142us; 1098us; 1147us; 1098us; 1150us; 1098us; 1153us; 1098us; 1156us; 1098us; 1157us; 1098us; 1168us; 1098us; 1175us; 1098us; 1176us; 1098us; 1182us; 1098us; 1188us; 1098us; 1189us; 1098us; 1190us; 1098us; 1202us; 1098us; 1210us; 1099us; 1222us; 1098us; 1223us; 1098us; 1224us; 1098us; 1226us; 1098us; 1229us; 1098us; 1230us; 1098us; 1238us; 1098us; 1244us; 1098us; 1250us; 1098us; 1257us; 1098us; 1289us; 1098us; 1294us; 1098us; 2us; 65535us; 1098us; 1100us; 1099us; 1100us; 126us; 65535us; 34us; 1101us; 76us; 1101us; 106us; 1101us; 128us; 1101us; 181us; 1101us; 370us; 1101us; 375us; 1101us; 408us; 1101us; 615us; 1101us; 621us; 1101us; 670us; 1101us; 673us; 1101us; 683us; 1101us; 832us; 1101us; 837us; 1101us; 849us; 1101us; 851us; 1101us; 854us; 1101us; 857us; 1101us; 862us; 1101us; 865us; 1101us; 868us; 1101us; 874us; 1101us; 878us; 1101us; 882us; 1101us; 884us; 1101us; 889us; 1101us; 891us; 1101us; 893us; 1101us; 895us; 1101us; 897us; 1101us; 899us; 1101us; 910us; 1101us; 917us; 1101us; 924us; 1101us; 929us; 1101us; 931us; 1101us; 934us; 1101us; 937us; 1101us; 940us; 1101us; 943us; 1101us; 946us; 1101us; 949us; 1101us; 951us; 1101us; 956us; 1101us; 998us; 1101us; 1000us; 1101us; 1003us; 1101us; 1004us; 1101us; 1005us; 1101us; 1006us; 1101us; 1007us; 1101us; 1008us; 1101us; 1009us; 1101us; 1010us; 1101us; 1011us; 1101us; 1012us; 1101us; 1013us; 1101us; 1014us; 1101us; 1015us; 1101us; 1016us; 1101us; 1017us; 1101us; 1018us; 1101us; 1019us; 1101us; 1020us; 1101us; 1021us; 1101us; 1023us; 1101us; 1044us; 1101us; 1045us; 1101us; 1049us; 1101us; 1051us; 1101us; 1055us; 1101us; 1057us; 1101us; 1061us; 1101us; 1064us; 1101us; 1065us; 1101us; 1066us; 1101us; 1067us; 1101us; 1069us; 1101us; 1070us; 1101us; 1072us; 1101us; 1073us; 1101us; 1075us; 1101us; 1076us; 1101us; 1078us; 1101us; 1079us; 1101us; 1081us; 1101us; 1082us; 1101us; 1094us; 1101us; 1096us; 1101us; 1098us; 1104us; 1099us; 1104us; 1102us; 1103us; 1108us; 1105us; 1109us; 1106us; 1112us; 1107us; 1113us; 1107us; 1126us; 1101us; 1135us; 1101us; 1142us; 1101us; 1147us; 1101us; 1150us; 1101us; 1153us; 1101us; 1156us; 1101us; 1157us; 1101us; 1168us; 1101us; 1175us; 1101us; 1176us; 1101us; 1182us; 1101us; 1188us; 1101us; 1189us; 1101us; 1190us; 1101us; 1202us; 1101us; 1210us; 1101us; 1222us; 1101us; 1223us; 1101us; 1224us; 1101us; 1226us; 1101us; 1229us; 1101us; 1230us; 1101us; 1238us; 1101us; 1244us; 1101us; 1250us; 1101us; 1257us; 1101us; 1289us; 1101us; 1294us; 1101us; 2us; 65535us; 1114us; 1115us; 1117us; 1118us; 4us; 65535us; 1142us; 1145us; 1147us; 1148us; 1150us; 1151us; 1153us; 1154us; 132us; 65535us; 34us; 1132us; 76us; 1132us; 106us; 1132us; 128us; 1132us; 181us; 1132us; 204us; 1231us; 209us; 1231us; 370us; 1132us; 375us; 1132us; 408us; 1132us; 436us; 437us; 615us; 1132us; 621us; 1132us; 670us; 1132us; 673us; 1132us; 683us; 1132us; 832us; 1132us; 837us; 1132us; 849us; 1132us; 851us; 1132us; 854us; 1132us; 857us; 1132us; 862us; 1132us; 865us; 1132us; 868us; 1132us; 874us; 1132us; 878us; 1132us; 882us; 1132us; 884us; 1132us; 889us; 1132us; 891us; 1132us; 893us; 1132us; 895us; 1132us; 897us; 1132us; 899us; 1132us; 910us; 1132us; 917us; 1132us; 924us; 1132us; 929us; 1132us; 931us; 1132us; 934us; 1132us; 937us; 1132us; 940us; 1132us; 943us; 1132us; 946us; 1132us; 949us; 1132us; 951us; 1132us; 956us; 1132us; 998us; 1132us; 1000us; 1132us; 1003us; 1132us; 1004us; 1132us; 1005us; 1132us; 1006us; 1132us; 1007us; 1132us; 1008us; 1132us; 1009us; 1132us; 1010us; 1132us; 1011us; 1132us; 1012us; 1132us; 1013us; 1132us; 1014us; 1132us; 1015us; 1132us; 1016us; 1132us; 1017us; 1132us; 1018us; 1132us; 1019us; 1132us; 1020us; 1132us; 1021us; 1132us; 1023us; 1132us; 1044us; 1132us; 1045us; 1132us; 1049us; 1132us; 1051us; 1132us; 1055us; 1132us; 1057us; 1132us; 1061us; 1132us; 1064us; 1132us; 1065us; 1132us; 1066us; 1132us; 1067us; 1132us; 1069us; 1132us; 1070us; 1132us; 1072us; 1132us; 1073us; 1132us; 1075us; 1132us; 1076us; 1132us; 1078us; 1132us; 1079us; 1132us; 1081us; 1132us; 1082us; 1132us; 1088us; 1090us; 1089us; 1091us; 1094us; 1132us; 1096us; 1132us; 1098us; 1132us; 1099us; 1132us; 1102us; 1132us; 1108us; 1132us; 1109us; 1132us; 1112us; 1132us; 1113us; 1132us; 1126us; 1132us; 1135us; 1132us; 1142us; 1132us; 1147us; 1132us; 1150us; 1132us; 1153us; 1132us; 1156us; 1132us; 1157us; 1132us; 1168us; 1132us; 1175us; 1132us; 1176us; 1132us; 1182us; 1132us; 1188us; 1132us; 1189us; 1132us; 1190us; 1132us; 1202us; 1132us; 1210us; 1132us; 1222us; 1132us; 1223us; 1132us; 1224us; 1132us; 1226us; 1132us; 1229us; 1132us; 1230us; 1132us; 1234us; 1231us; 1238us; 1132us; 1244us; 1132us; 1250us; 1132us; 1257us; 1132us; 1289us; 1132us; 1294us; 1132us; 132us; 65535us; 34us; 1167us; 76us; 1167us; 106us; 1167us; 128us; 1167us; 181us; 1167us; 204us; 1167us; 209us; 1167us; 370us; 1167us; 375us; 1167us; 408us; 1167us; 436us; 1167us; 615us; 1167us; 621us; 1167us; 670us; 1167us; 673us; 1167us; 683us; 1167us; 832us; 1167us; 837us; 1167us; 849us; 1167us; 851us; 1167us; 854us; 1167us; 857us; 1167us; 862us; 1167us; 865us; 1167us; 868us; 1167us; 874us; 1167us; 878us; 1167us; 882us; 1167us; 884us; 1167us; 889us; 1167us; 891us; 1167us; 893us; 1167us; 895us; 1167us; 897us; 1167us; 899us; 1167us; 910us; 1167us; 917us; 1167us; 924us; 1167us; 929us; 1167us; 931us; 1167us; 934us; 1167us; 937us; 1167us; 940us; 1167us; 943us; 1167us; 946us; 1167us; 949us; 1167us; 951us; 1167us; 956us; 1167us; 998us; 1167us; 1000us; 1167us; 1003us; 1167us; 1004us; 1167us; 1005us; 1167us; 1006us; 1167us; 1007us; 1167us; 1008us; 1167us; 1009us; 1167us; 1010us; 1167us; 1011us; 1167us; 1012us; 1167us; 1013us; 1167us; 1014us; 1167us; 1015us; 1167us; 1016us; 1167us; 1017us; 1167us; 1018us; 1167us; 1019us; 1167us; 1020us; 1167us; 1021us; 1167us; 1023us; 1167us; 1044us; 1167us; 1045us; 1167us; 1049us; 1167us; 1051us; 1167us; 1055us; 1167us; 1057us; 1167us; 1061us; 1167us; 1064us; 1167us; 1065us; 1167us; 1066us; 1167us; 1067us; 1167us; 1069us; 1167us; 1070us; 1167us; 1072us; 1167us; 1073us; 1167us; 1075us; 1167us; 1076us; 1167us; 1078us; 1167us; 1079us; 1167us; 1081us; 1167us; 1082us; 1167us; 1088us; 1167us; 1089us; 1167us; 1094us; 1167us; 1096us; 1167us; 1098us; 1167us; 1099us; 1167us; 1102us; 1167us; 1108us; 1167us; 1109us; 1167us; 1112us; 1167us; 1113us; 1167us; 1126us; 1167us; 1135us; 1167us; 1142us; 1167us; 1147us; 1167us; 1150us; 1167us; 1153us; 1167us; 1156us; 1167us; 1157us; 1167us; 1168us; 1167us; 1175us; 1167us; 1176us; 1167us; 1182us; 1167us; 1188us; 1167us; 1189us; 1167us; 1190us; 1167us; 1202us; 1167us; 1210us; 1167us; 1222us; 1167us; 1223us; 1167us; 1224us; 1167us; 1226us; 1167us; 1229us; 1167us; 1230us; 1167us; 1234us; 1167us; 1238us; 1167us; 1244us; 1167us; 1250us; 1167us; 1257us; 1167us; 1289us; 1167us; 1294us; 1167us; 171us; 65535us; 34us; 1165us; 76us; 1165us; 106us; 1165us; 128us; 1165us; 181us; 1165us; 204us; 1165us; 209us; 1165us; 367us; 768us; 370us; 1165us; 372us; 768us; 375us; 1165us; 405us; 768us; 408us; 1165us; 436us; 1165us; 615us; 1165us; 621us; 1165us; 667us; 768us; 670us; 1165us; 673us; 1165us; 683us; 1165us; 743us; 768us; 744us; 768us; 748us; 768us; 749us; 768us; 750us; 768us; 751us; 768us; 753us; 768us; 755us; 768us; 757us; 768us; 762us; 768us; 764us; 768us; 766us; 768us; 774us; 768us; 777us; 768us; 789us; 768us; 810us; 768us; 815us; 768us; 816us; 768us; 818us; 768us; 819us; 768us; 820us; 768us; 821us; 768us; 828us; 768us; 830us; 768us; 832us; 1165us; 837us; 1165us; 849us; 1165us; 851us; 1165us; 854us; 1165us; 857us; 1165us; 862us; 1165us; 865us; 1165us; 868us; 1165us; 874us; 1165us; 878us; 1165us; 882us; 1165us; 884us; 1165us; 889us; 1165us; 891us; 1165us; 893us; 1165us; 895us; 1165us; 897us; 1165us; 899us; 1165us; 908us; 768us; 910us; 1165us; 917us; 1165us; 924us; 1165us; 929us; 1165us; 931us; 1165us; 933us; 768us; 934us; 1165us; 937us; 1165us; 939us; 768us; 940us; 1165us; 943us; 1165us; 946us; 1165us; 949us; 1165us; 951us; 1165us; 956us; 1165us; 998us; 1165us; 1000us; 1165us; 1003us; 1165us; 1004us; 1165us; 1005us; 1165us; 1006us; 1165us; 1007us; 1165us; 1008us; 1165us; 1009us; 1165us; 1010us; 1165us; 1011us; 1165us; 1012us; 1165us; 1013us; 1165us; 1014us; 1165us; 1015us; 1165us; 1016us; 1165us; 1017us; 1165us; 1018us; 1165us; 1019us; 1165us; 1020us; 1165us; 1021us; 1165us; 1023us; 1165us; 1026us; 768us; 1028us; 768us; 1033us; 768us; 1040us; 768us; 1044us; 1165us; 1045us; 1165us; 1049us; 1165us; 1051us; 1165us; 1055us; 1165us; 1057us; 1165us; 1061us; 1165us; 1064us; 1165us; 1065us; 1165us; 1066us; 1165us; 1067us; 1165us; 1069us; 1165us; 1070us; 1165us; 1072us; 1165us; 1073us; 1165us; 1075us; 1165us; 1076us; 1165us; 1078us; 1165us; 1079us; 1165us; 1081us; 1165us; 1082us; 1165us; 1088us; 1165us; 1089us; 1165us; 1094us; 1165us; 1096us; 1165us; 1098us; 1165us; 1099us; 1165us; 1102us; 1165us; 1108us; 1165us; 1109us; 1165us; 1112us; 1165us; 1113us; 1165us; 1126us; 1165us; 1135us; 1165us; 1142us; 1165us; 1147us; 1165us; 1150us; 1165us; 1153us; 1165us; 1156us; 1165us; 1157us; 1165us; 1168us; 1165us; 1175us; 1165us; 1176us; 1165us; 1182us; 1165us; 1188us; 1165us; 1189us; 1165us; 1190us; 1165us; 1202us; 1165us; 1210us; 1165us; 1222us; 1165us; 1223us; 1165us; 1224us; 1165us; 1226us; 1165us; 1229us; 1165us; 1230us; 1165us; 1234us; 1165us; 1238us; 1165us; 1244us; 1165us; 1250us; 1165us; 1257us; 1165us; 1287us; 768us; 1289us; 1165us; 1292us; 768us; 1294us; 1165us; 1301us; 768us; 1304us; 768us; 132us; 65535us; 34us; 1166us; 76us; 1166us; 106us; 1166us; 128us; 1166us; 181us; 1166us; 204us; 1166us; 209us; 1166us; 370us; 1166us; 375us; 1166us; 408us; 1166us; 436us; 1166us; 615us; 1166us; 621us; 1166us; 670us; 1166us; 673us; 1166us; 683us; 1166us; 832us; 1166us; 837us; 1166us; 849us; 1166us; 851us; 1166us; 854us; 1166us; 857us; 1166us; 862us; 1166us; 865us; 1166us; 868us; 1166us; 874us; 1166us; 878us; 1166us; 882us; 1166us; 884us; 1166us; 889us; 1166us; 891us; 1166us; 893us; 1166us; 895us; 1166us; 897us; 1166us; 899us; 1166us; 910us; 1166us; 917us; 1166us; 924us; 1166us; 929us; 1166us; 931us; 1166us; 934us; 1166us; 937us; 1166us; 940us; 1166us; 943us; 1166us; 946us; 1166us; 949us; 1166us; 951us; 1166us; 956us; 1166us; 998us; 1166us; 1000us; 1166us; 1003us; 1166us; 1004us; 1166us; 1005us; 1166us; 1006us; 1166us; 1007us; 1166us; 1008us; 1166us; 1009us; 1166us; 1010us; 1166us; 1011us; 1166us; 1012us; 1166us; 1013us; 1166us; 1014us; 1166us; 1015us; 1166us; 1016us; 1166us; 1017us; 1166us; 1018us; 1166us; 1019us; 1166us; 1020us; 1166us; 1021us; 1166us; 1023us; 1166us; 1044us; 1166us; 1045us; 1166us; 1049us; 1166us; 1051us; 1166us; 1055us; 1166us; 1057us; 1166us; 1061us; 1166us; 1064us; 1166us; 1065us; 1166us; 1066us; 1166us; 1067us; 1166us; 1069us; 1166us; 1070us; 1166us; 1072us; 1166us; 1073us; 1166us; 1075us; 1166us; 1076us; 1166us; 1078us; 1166us; 1079us; 1166us; 1081us; 1166us; 1082us; 1166us; 1088us; 1166us; 1089us; 1166us; 1094us; 1166us; 1096us; 1166us; 1098us; 1166us; 1099us; 1166us; 1102us; 1166us; 1108us; 1166us; 1109us; 1166us; 1112us; 1166us; 1113us; 1166us; 1126us; 1166us; 1135us; 1166us; 1142us; 1166us; 1147us; 1166us; 1150us; 1166us; 1153us; 1166us; 1156us; 1166us; 1157us; 1166us; 1168us; 1166us; 1175us; 1166us; 1176us; 1166us; 1182us; 1166us; 1188us; 1166us; 1189us; 1166us; 1190us; 1166us; 1202us; 1166us; 1210us; 1166us; 1222us; 1166us; 1223us; 1166us; 1224us; 1166us; 1226us; 1166us; 1229us; 1166us; 1230us; 1166us; 1234us; 1166us; 1238us; 1166us; 1244us; 1166us; 1250us; 1166us; 1257us; 1166us; 1289us; 1166us; 1294us; 1166us; 132us; 65535us; 34us; 1160us; 76us; 1160us; 106us; 1160us; 128us; 1160us; 181us; 1160us; 204us; 1160us; 209us; 1160us; 370us; 1160us; 375us; 1160us; 408us; 1160us; 436us; 1160us; 615us; 1160us; 621us; 1160us; 670us; 1160us; 673us; 1160us; 683us; 1160us; 832us; 1160us; 837us; 1160us; 849us; 1160us; 851us; 1160us; 854us; 1160us; 857us; 1160us; 862us; 1160us; 865us; 1160us; 868us; 1160us; 874us; 1160us; 878us; 1160us; 882us; 1160us; 884us; 1160us; 889us; 1160us; 891us; 1160us; 893us; 1160us; 895us; 1160us; 897us; 1160us; 899us; 1160us; 910us; 1160us; 917us; 1160us; 924us; 1160us; 929us; 1160us; 931us; 1160us; 934us; 1160us; 937us; 1160us; 940us; 1160us; 943us; 1160us; 946us; 1160us; 949us; 1160us; 951us; 1160us; 956us; 1160us; 998us; 1160us; 1000us; 1160us; 1003us; 1160us; 1004us; 1160us; 1005us; 1160us; 1006us; 1160us; 1007us; 1160us; 1008us; 1160us; 1009us; 1160us; 1010us; 1160us; 1011us; 1160us; 1012us; 1160us; 1013us; 1160us; 1014us; 1160us; 1015us; 1160us; 1016us; 1160us; 1017us; 1160us; 1018us; 1160us; 1019us; 1160us; 1020us; 1160us; 1021us; 1160us; 1023us; 1160us; 1044us; 1160us; 1045us; 1160us; 1049us; 1160us; 1051us; 1160us; 1055us; 1160us; 1057us; 1160us; 1061us; 1160us; 1064us; 1160us; 1065us; 1160us; 1066us; 1160us; 1067us; 1160us; 1069us; 1160us; 1070us; 1160us; 1072us; 1160us; 1073us; 1160us; 1075us; 1160us; 1076us; 1160us; 1078us; 1160us; 1079us; 1160us; 1081us; 1160us; 1082us; 1160us; 1088us; 1160us; 1089us; 1160us; 1094us; 1160us; 1096us; 1160us; 1098us; 1160us; 1099us; 1160us; 1102us; 1160us; 1108us; 1160us; 1109us; 1160us; 1112us; 1160us; 1113us; 1160us; 1126us; 1160us; 1135us; 1160us; 1142us; 1160us; 1147us; 1160us; 1150us; 1160us; 1153us; 1160us; 1156us; 1160us; 1157us; 1160us; 1168us; 1160us; 1175us; 1160us; 1176us; 1160us; 1182us; 1160us; 1188us; 1160us; 1189us; 1160us; 1190us; 1160us; 1202us; 1160us; 1210us; 1160us; 1222us; 1160us; 1223us; 1160us; 1224us; 1160us; 1226us; 1160us; 1229us; 1160us; 1230us; 1160us; 1234us; 1160us; 1238us; 1160us; 1244us; 1160us; 1250us; 1160us; 1257us; 1160us; 1289us; 1160us; 1294us; 1160us; 3us; 65535us; 1188us; 1191us; 1189us; 1191us; 1190us; 1191us; 3us; 65535us; 1188us; 1198us; 1189us; 1198us; 1190us; 1198us; 132us; 65535us; 34us; 1161us; 76us; 1161us; 106us; 1161us; 128us; 1161us; 181us; 1161us; 204us; 1161us; 209us; 1161us; 370us; 1161us; 375us; 1161us; 408us; 1161us; 436us; 1161us; 615us; 1161us; 621us; 1161us; 670us; 1161us; 673us; 1161us; 683us; 1161us; 832us; 1161us; 837us; 1161us; 849us; 1161us; 851us; 1161us; 854us; 1161us; 857us; 1161us; 862us; 1161us; 865us; 1161us; 868us; 1161us; 874us; 1161us; 878us; 1161us; 882us; 1161us; 884us; 1161us; 889us; 1161us; 891us; 1161us; 893us; 1161us; 895us; 1161us; 897us; 1161us; 899us; 1161us; 910us; 1161us; 917us; 1161us; 924us; 1161us; 929us; 1161us; 931us; 1161us; 934us; 1161us; 937us; 1161us; 940us; 1161us; 943us; 1161us; 946us; 1161us; 949us; 1161us; 951us; 1161us; 956us; 1161us; 998us; 1161us; 1000us; 1161us; 1003us; 1161us; 1004us; 1161us; 1005us; 1161us; 1006us; 1161us; 1007us; 1161us; 1008us; 1161us; 1009us; 1161us; 1010us; 1161us; 1011us; 1161us; 1012us; 1161us; 1013us; 1161us; 1014us; 1161us; 1015us; 1161us; 1016us; 1161us; 1017us; 1161us; 1018us; 1161us; 1019us; 1161us; 1020us; 1161us; 1021us; 1161us; 1023us; 1161us; 1044us; 1161us; 1045us; 1161us; 1049us; 1161us; 1051us; 1161us; 1055us; 1161us; 1057us; 1161us; 1061us; 1161us; 1064us; 1161us; 1065us; 1161us; 1066us; 1161us; 1067us; 1161us; 1069us; 1161us; 1070us; 1161us; 1072us; 1161us; 1073us; 1161us; 1075us; 1161us; 1076us; 1161us; 1078us; 1161us; 1079us; 1161us; 1081us; 1161us; 1082us; 1161us; 1088us; 1161us; 1089us; 1161us; 1094us; 1161us; 1096us; 1161us; 1098us; 1161us; 1099us; 1161us; 1102us; 1161us; 1108us; 1161us; 1109us; 1161us; 1112us; 1161us; 1113us; 1161us; 1126us; 1161us; 1135us; 1161us; 1142us; 1161us; 1147us; 1161us; 1150us; 1161us; 1153us; 1161us; 1156us; 1161us; 1157us; 1161us; 1168us; 1161us; 1175us; 1161us; 1176us; 1161us; 1182us; 1161us; 1188us; 1161us; 1189us; 1161us; 1190us; 1161us; 1202us; 1161us; 1210us; 1161us; 1222us; 1161us; 1223us; 1161us; 1224us; 1161us; 1226us; 1161us; 1229us; 1161us; 1230us; 1161us; 1234us; 1161us; 1238us; 1161us; 1244us; 1161us; 1250us; 1161us; 1257us; 1161us; 1289us; 1161us; 1294us; 1161us; 1us; 65535us; 1210us; 1211us; 2us; 65535us; 1126us; 1127us; 1182us; 1183us; 3us; 65535us; 1126us; 1219us; 1182us; 1219us; 1210us; 1218us; 4us; 65535us; 1126us; 1221us; 1182us; 1221us; 1210us; 1221us; 1226us; 1227us; 1us; 65535us; 954us; 955us; 1us; 65535us; 908us; 909us; 1us; 65535us; 908us; 916us; 0us; 65535us; 3us; 65535us; 204us; 205us; 209us; 210us; 1234us; 1235us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 1210us; 1216us; 4us; 65535us; 1235us; 1236us; 1239us; 1240us; 1245us; 1246us; 1251us; 1252us; 1us; 65535us; 1210us; 1217us; 1us; 65535us; 1210us; 1259us; 1us; 65535us; 1281us; 1282us; 2us; 65535us; 1259us; 1260us; 1281us; 1266us; 1us; 65535us; 1263us; 1264us; 4us; 65535us; 1261us; 1262us; 1274us; 1275us; 1276us; 1277us; 1278us; 1279us; 5us; 65535us; 1261us; 1276us; 1263us; 1274us; 1274us; 1276us; 1276us; 1276us; 1278us; 1276us; 1us; 65535us; 990us; 1230us; 105us; 65535us; 34us; 873us; 76us; 873us; 106us; 873us; 128us; 873us; 181us; 873us; 370us; 873us; 375us; 873us; 408us; 873us; 615us; 873us; 621us; 873us; 670us; 873us; 673us; 873us; 683us; 873us; 832us; 873us; 837us; 873us; 849us; 873us; 851us; 873us; 854us; 873us; 857us; 873us; 862us; 873us; 865us; 873us; 868us; 873us; 874us; 873us; 878us; 873us; 882us; 873us; 884us; 873us; 889us; 873us; 891us; 873us; 893us; 873us; 895us; 873us; 897us; 873us; 899us; 873us; 910us; 873us; 917us; 873us; 924us; 873us; 929us; 873us; 931us; 873us; 934us; 873us; 937us; 873us; 940us; 873us; 943us; 873us; 946us; 873us; 949us; 873us; 951us; 873us; 956us; 873us; 998us; 873us; 1000us; 873us; 1003us; 873us; 1004us; 873us; 1005us; 873us; 1006us; 873us; 1007us; 873us; 1008us; 873us; 1009us; 873us; 1010us; 873us; 1011us; 873us; 1012us; 873us; 1013us; 873us; 1014us; 873us; 1015us; 873us; 1016us; 873us; 1017us; 873us; 1018us; 873us; 1019us; 873us; 1020us; 873us; 1021us; 873us; 1023us; 873us; 1044us; 873us; 1045us; 873us; 1049us; 873us; 1051us; 873us; 1055us; 873us; 1057us; 873us; 1061us; 873us; 1064us; 873us; 1065us; 873us; 1126us; 873us; 1135us; 873us; 1142us; 873us; 1147us; 873us; 1150us; 873us; 1153us; 873us; 1156us; 873us; 1157us; 873us; 1168us; 873us; 1175us; 873us; 1176us; 873us; 1182us; 873us; 1188us; 873us; 1189us; 873us; 1190us; 873us; 1202us; 873us; 1210us; 873us; 1222us; 873us; 1223us; 873us; 1224us; 873us; 1226us; 873us; 1229us; 873us; 1230us; 873us; 1238us; 873us; 1244us; 873us; 1250us; 873us; 1257us; 873us; 1289us; 873us; 1294us; 873us; 105us; 65535us; 34us; 872us; 76us; 872us; 106us; 872us; 128us; 872us; 181us; 872us; 370us; 872us; 375us; 872us; 408us; 872us; 615us; 872us; 621us; 872us; 670us; 872us; 673us; 872us; 683us; 872us; 832us; 872us; 837us; 872us; 849us; 872us; 851us; 872us; 854us; 872us; 857us; 872us; 862us; 872us; 865us; 872us; 868us; 872us; 874us; 872us; 878us; 872us; 882us; 872us; 884us; 872us; 889us; 872us; 891us; 872us; 893us; 872us; 895us; 872us; 897us; 872us; 899us; 872us; 910us; 872us; 917us; 872us; 924us; 872us; 929us; 872us; 931us; 872us; 934us; 872us; 937us; 872us; 940us; 872us; 943us; 872us; 946us; 872us; 949us; 872us; 951us; 872us; 956us; 872us; 998us; 872us; 1000us; 872us; 1003us; 872us; 1004us; 872us; 1005us; 872us; 1006us; 872us; 1007us; 872us; 1008us; 872us; 1009us; 872us; 1010us; 872us; 1011us; 872us; 1012us; 872us; 1013us; 872us; 1014us; 872us; 1015us; 872us; 1016us; 872us; 1017us; 872us; 1018us; 872us; 1019us; 872us; 1020us; 872us; 1021us; 872us; 1023us; 872us; 1044us; 872us; 1045us; 872us; 1049us; 872us; 1051us; 872us; 1055us; 872us; 1057us; 872us; 1061us; 872us; 1064us; 872us; 1065us; 872us; 1126us; 872us; 1135us; 872us; 1142us; 872us; 1147us; 872us; 1150us; 872us; 1153us; 872us; 1156us; 872us; 1157us; 872us; 1168us; 872us; 1175us; 872us; 1176us; 872us; 1182us; 872us; 1188us; 872us; 1189us; 872us; 1190us; 872us; 1202us; 872us; 1210us; 872us; 1222us; 872us; 1223us; 872us; 1224us; 872us; 1226us; 872us; 1229us; 872us; 1230us; 872us; 1238us; 872us; 1244us; 872us; 1250us; 872us; 1257us; 872us; 1289us; 872us; 1294us; 872us; 3us; 65535us; 720us; 721us; 813us; 814us; 844us; 845us; 5us; 65535us; 178us; 179us; 288us; 289us; 303us; 304us; 396us; 397us; 1313us; 1314us; 3us; 65535us; 368us; 369us; 373us; 374us; 668us; 669us; 9us; 65535us; 178us; 1311us; 236us; 237us; 288us; 1311us; 303us; 1311us; 334us; 335us; 396us; 1311us; 558us; 559us; 1313us; 1311us; 1316us; 1317us; 9us; 65535us; 178us; 1315us; 236us; 1315us; 288us; 1315us; 303us; 1315us; 334us; 1315us; 396us; 1315us; 558us; 1315us; 1313us; 1315us; 1316us; 1315us; 2us; 65535us; 1319us; 1320us; 1322us; 1323us; 11us; 65535us; 178us; 1318us; 236us; 1318us; 288us; 1318us; 303us; 1318us; 334us; 1318us; 396us; 1318us; 558us; 1318us; 1313us; 1318us; 1316us; 1318us; 1319us; 1321us; 1322us; 1321us; 26us; 65535us; 282us; 464us; 383us; 464us; 463us; 464us; 516us; 517us; 519us; 520us; 592us; 593us; 689us; 690us; 720us; 1309us; 813us; 1309us; 844us; 1309us; 992us; 993us; 994us; 995us; 996us; 997us; 1196us; 1197us; 1340us; 1341us; 1374us; 1401us; 1375us; 1401us; 1383us; 1385us; 1384us; 1386us; 1389us; 1391us; 1390us; 1392us; 1402us; 1403us; 1406us; 1407us; 1423us; 1424us; 1437us; 1439us; 1441us; 1442us; 26us; 65535us; 282us; 1339us; 383us; 1339us; 463us; 1339us; 516us; 1339us; 519us; 1339us; 592us; 1339us; 689us; 1339us; 720us; 1339us; 813us; 1339us; 844us; 1339us; 992us; 1339us; 994us; 1339us; 996us; 1339us; 1196us; 1339us; 1340us; 1339us; 1374us; 1339us; 1375us; 1339us; 1383us; 1339us; 1384us; 1339us; 1389us; 1339us; 1390us; 1339us; 1402us; 1339us; 1406us; 1339us; 1423us; 1339us; 1437us; 1339us; 1441us; 1339us; 5us; 65535us; 1343us; 1344us; 1345us; 1346us; 1347us; 1348us; 1350us; 1351us; 1352us; 1353us; 2us; 65535us; 581us; 582us; 1355us; 1356us; 79us; 65535us; 178us; 1362us; 236us; 1362us; 282us; 1362us; 288us; 1362us; 292us; 1362us; 293us; 1361us; 294us; 1362us; 295us; 1361us; 303us; 1362us; 334us; 1362us; 383us; 1362us; 389us; 1362us; 390us; 1361us; 396us; 1362us; 433us; 1362us; 463us; 1362us; 516us; 1362us; 519us; 1362us; 555us; 1362us; 558us; 1362us; 577us; 1362us; 580us; 1361us; 581us; 1362us; 592us; 1362us; 605us; 1362us; 689us; 1362us; 720us; 1362us; 759us; 1362us; 813us; 1362us; 844us; 1362us; 992us; 1362us; 994us; 1362us; 996us; 1362us; 1084us; 1362us; 1085us; 1362us; 1196us; 1362us; 1232us; 1362us; 1280us; 1362us; 1281us; 1361us; 1313us; 1362us; 1316us; 1362us; 1319us; 1362us; 1322us; 1362us; 1324us; 1362us; 1325us; 1361us; 1326us; 1362us; 1327us; 1361us; 1330us; 1362us; 1331us; 1361us; 1332us; 1361us; 1333us; 1362us; 1334us; 1361us; 1337us; 1362us; 1338us; 1361us; 1340us; 1362us; 1342us; 1361us; 1343us; 1362us; 1345us; 1362us; 1347us; 1362us; 1349us; 1361us; 1350us; 1362us; 1352us; 1362us; 1354us; 1361us; 1355us; 1362us; 1365us; 1361us; 1374us; 1362us; 1375us; 1362us; 1378us; 1361us; 1379us; 1361us; 1383us; 1362us; 1384us; 1362us; 1389us; 1362us; 1390us; 1362us; 1402us; 1362us; 1406us; 1362us; 1419us; 1362us; 1423us; 1362us; 1437us; 1362us; 1441us; 1362us; 79us; 65535us; 178us; 1421us; 236us; 1421us; 282us; 1421us; 288us; 1421us; 292us; 1421us; 293us; 1372us; 294us; 1421us; 295us; 1372us; 303us; 1421us; 334us; 1421us; 383us; 1421us; 389us; 1421us; 390us; 1372us; 396us; 1421us; 433us; 1421us; 463us; 1421us; 516us; 1421us; 519us; 1421us; 555us; 1421us; 558us; 1421us; 577us; 1421us; 580us; 1372us; 581us; 1421us; 592us; 1421us; 605us; 1421us; 689us; 1421us; 720us; 1421us; 759us; 1421us; 813us; 1421us; 844us; 1421us; 992us; 1421us; 994us; 1421us; 996us; 1421us; 1084us; 1421us; 1085us; 1421us; 1196us; 1421us; 1232us; 1421us; 1280us; 1421us; 1281us; 1372us; 1313us; 1421us; 1316us; 1421us; 1319us; 1421us; 1322us; 1421us; 1324us; 1421us; 1325us; 1372us; 1326us; 1421us; 1327us; 1372us; 1330us; 1421us; 1331us; 1372us; 1332us; 1372us; 1333us; 1421us; 1334us; 1372us; 1337us; 1421us; 1338us; 1372us; 1340us; 1421us; 1342us; 1372us; 1343us; 1421us; 1345us; 1421us; 1347us; 1421us; 1349us; 1372us; 1350us; 1421us; 1352us; 1421us; 1354us; 1372us; 1355us; 1421us; 1365us; 1373us; 1374us; 1421us; 1375us; 1421us; 1378us; 1380us; 1379us; 1381us; 1383us; 1421us; 1384us; 1421us; 1389us; 1421us; 1390us; 1421us; 1402us; 1421us; 1406us; 1421us; 1419us; 1421us; 1423us; 1421us; 1437us; 1421us; 1441us; 1421us; 60us; 65535us; 178us; 1332us; 236us; 1332us; 282us; 1342us; 288us; 1332us; 292us; 293us; 294us; 295us; 303us; 1332us; 334us; 1332us; 383us; 1342us; 389us; 390us; 396us; 1332us; 433us; 1365us; 463us; 1342us; 516us; 1342us; 519us; 1342us; 555us; 580us; 558us; 1332us; 577us; 580us; 581us; 1354us; 592us; 1342us; 605us; 580us; 689us; 1342us; 720us; 1342us; 813us; 1342us; 844us; 1342us; 992us; 1342us; 994us; 1342us; 996us; 1342us; 1084us; 1365us; 1085us; 1365us; 1196us; 1342us; 1232us; 1365us; 1280us; 1281us; 1313us; 1332us; 1316us; 1332us; 1319us; 1332us; 1322us; 1332us; 1324us; 1325us; 1326us; 1327us; 1330us; 1331us; 1333us; 1334us; 1337us; 1338us; 1340us; 1342us; 1343us; 1349us; 1345us; 1349us; 1347us; 1349us; 1350us; 1349us; 1352us; 1349us; 1355us; 1354us; 1374us; 1342us; 1375us; 1342us; 1383us; 1342us; 1384us; 1342us; 1389us; 1342us; 1390us; 1342us; 1402us; 1342us; 1406us; 1342us; 1423us; 1342us; 1437us; 1342us; 1441us; 1342us; 17us; 65535us; 293us; 1366us; 295us; 1366us; 390us; 1366us; 580us; 1366us; 1281us; 1366us; 1325us; 1366us; 1327us; 1366us; 1331us; 1366us; 1332us; 1366us; 1334us; 1366us; 1338us; 1366us; 1342us; 1366us; 1349us; 1366us; 1354us; 1366us; 1365us; 1367us; 1368us; 1370us; 1369us; 1371us; 2us; 65535us; 1374us; 1377us; 1375us; 1376us; 2us; 65535us; 1403us; 1404us; 1442us; 1405us; 60us; 65535us; 178us; 1382us; 236us; 1382us; 282us; 1382us; 288us; 1382us; 292us; 1382us; 294us; 1382us; 303us; 1382us; 334us; 1382us; 383us; 1382us; 389us; 1382us; 396us; 1382us; 433us; 1382us; 463us; 1382us; 516us; 1382us; 519us; 1382us; 555us; 1382us; 558us; 1382us; 577us; 1382us; 581us; 1382us; 592us; 1382us; 605us; 1382us; 689us; 1382us; 720us; 1382us; 813us; 1382us; 844us; 1382us; 992us; 1382us; 994us; 1382us; 996us; 1382us; 1084us; 1382us; 1085us; 1382us; 1196us; 1382us; 1232us; 1382us; 1280us; 1382us; 1313us; 1382us; 1316us; 1382us; 1319us; 1382us; 1322us; 1382us; 1324us; 1382us; 1326us; 1382us; 1330us; 1382us; 1333us; 1382us; 1337us; 1382us; 1340us; 1382us; 1343us; 1382us; 1345us; 1382us; 1347us; 1382us; 1350us; 1382us; 1352us; 1382us; 1355us; 1382us; 1374us; 1382us; 1375us; 1382us; 1383us; 1382us; 1384us; 1382us; 1389us; 1382us; 1390us; 1382us; 1402us; 1382us; 1406us; 1382us; 1423us; 1382us; 1437us; 1382us; 1441us; 1382us; 4us; 65535us; 433us; 434us; 1084us; 1086us; 1085us; 1087us; 1232us; 1233us; 4us; 65535us; 433us; 1418us; 1084us; 1418us; 1085us; 1418us; 1232us; 1418us; 62us; 65535us; 178us; 1409us; 236us; 1409us; 282us; 1409us; 288us; 1409us; 292us; 1409us; 294us; 1409us; 303us; 1409us; 334us; 1409us; 383us; 1409us; 389us; 1409us; 396us; 1409us; 433us; 1408us; 463us; 1409us; 516us; 1409us; 519us; 1409us; 555us; 1409us; 558us; 1409us; 577us; 1409us; 581us; 1409us; 592us; 1409us; 605us; 1409us; 689us; 1409us; 720us; 1409us; 759us; 760us; 813us; 1409us; 844us; 1409us; 992us; 1409us; 994us; 1409us; 996us; 1409us; 1084us; 1408us; 1085us; 1408us; 1196us; 1409us; 1232us; 1408us; 1280us; 1409us; 1313us; 1409us; 1316us; 1409us; 1319us; 1409us; 1322us; 1409us; 1324us; 1409us; 1326us; 1409us; 1330us; 1409us; 1333us; 1409us; 1337us; 1409us; 1340us; 1409us; 1343us; 1409us; 1345us; 1409us; 1347us; 1409us; 1350us; 1409us; 1352us; 1409us; 1355us; 1409us; 1374us; 1409us; 1375us; 1409us; 1383us; 1409us; 1384us; 1409us; 1389us; 1409us; 1390us; 1409us; 1402us; 1409us; 1406us; 1409us; 1419us; 1420us; 1423us; 1409us; 1437us; 1409us; 1441us; 1409us; 4us; 65535us; 523us; 540us; 538us; 539us; 1362us; 1430us; 1432us; 1433us; 6us; 65535us; 523us; 1434us; 538us; 1434us; 1110us; 1111us; 1362us; 1434us; 1432us; 1434us; 1435us; 1436us; 1us; 65535us; 712us; 713us; 6us; 65535us; 1444us; 1454us; 1451us; 1454us; 1460us; 1454us; 1466us; 1454us; 1467us; 1454us; 1468us; 1454us; 6us; 65535us; 1444us; 1460us; 1451us; 1460us; 1460us; 1460us; 1466us; 1460us; 1467us; 1460us; 1468us; 1460us; 6us; 65535us; 1444us; 1462us; 1451us; 1462us; 1460us; 1461us; 1466us; 1462us; 1467us; 1462us; 1468us; 1462us; 5us; 65535us; 1444us; 1445us; 1451us; 1452us; 1466us; 1463us; 1467us; 1464us; 1468us; 1465us; 96us; 65535us; 178us; 1359us; 236us; 1359us; 282us; 1359us; 288us; 1359us; 292us; 1359us; 293us; 1358us; 294us; 1359us; 295us; 1358us; 303us; 1359us; 334us; 1359us; 383us; 1359us; 389us; 1359us; 390us; 1358us; 396us; 1359us; 433us; 1360us; 463us; 1359us; 478us; 483us; 493us; 494us; 507us; 518us; 511us; 518us; 514us; 515us; 516us; 1359us; 519us; 1359us; 529us; 530us; 531us; 532us; 555us; 1359us; 558us; 1359us; 577us; 1359us; 580us; 1358us; 581us; 1359us; 592us; 1359us; 605us; 1359us; 681us; 688us; 685us; 688us; 689us; 1359us; 720us; 1359us; 759us; 1358us; 813us; 1359us; 844us; 1359us; 992us; 1359us; 994us; 1359us; 996us; 1359us; 1084us; 1360us; 1085us; 1360us; 1196us; 1359us; 1232us; 1360us; 1280us; 1359us; 1281us; 1358us; 1310us; 518us; 1312us; 518us; 1313us; 1359us; 1316us; 1359us; 1319us; 1359us; 1322us; 1359us; 1324us; 1359us; 1325us; 1358us; 1326us; 1359us; 1327us; 1358us; 1330us; 1359us; 1331us; 1358us; 1332us; 1358us; 1333us; 1359us; 1334us; 1358us; 1337us; 1359us; 1338us; 1358us; 1340us; 1359us; 1342us; 1358us; 1343us; 1359us; 1345us; 1359us; 1347us; 1359us; 1349us; 1358us; 1350us; 1359us; 1352us; 1359us; 1354us; 1358us; 1355us; 1359us; 1365us; 1358us; 1374us; 1359us; 1375us; 1359us; 1378us; 1358us; 1379us; 1358us; 1383us; 1359us; 1384us; 1359us; 1389us; 1359us; 1390us; 1359us; 1402us; 1359us; 1406us; 1359us; 1419us; 1358us; 1423us; 1359us; 1437us; 1359us; 1441us; 1359us; 1444us; 1450us; 1451us; 1450us; 1460us; 1450us; 1466us; 1450us; 1467us; 1450us; 1468us; 1450us; 100us; 65535us; 178us; 1471us; 236us; 1471us; 282us; 1471us; 288us; 1471us; 292us; 1471us; 293us; 1471us; 294us; 1471us; 295us; 1471us; 303us; 1471us; 334us; 1471us; 383us; 1471us; 389us; 1471us; 390us; 1471us; 396us; 1471us; 433us; 1471us; 463us; 1471us; 478us; 1471us; 493us; 1471us; 507us; 1471us; 511us; 1471us; 514us; 1471us; 516us; 1471us; 519us; 1471us; 529us; 1471us; 531us; 1471us; 555us; 1471us; 558us; 1471us; 577us; 1471us; 580us; 1471us; 581us; 1471us; 592us; 1471us; 605us; 1471us; 681us; 1471us; 685us; 1471us; 689us; 1471us; 720us; 1471us; 759us; 1471us; 813us; 1471us; 844us; 1471us; 992us; 1471us; 994us; 1471us; 996us; 1471us; 1084us; 1471us; 1085us; 1471us; 1188us; 1205us; 1189us; 1206us; 1190us; 1205us; 1196us; 1471us; 1207us; 1208us; 1232us; 1471us; 1280us; 1471us; 1281us; 1471us; 1310us; 1471us; 1312us; 1471us; 1313us; 1471us; 1316us; 1471us; 1319us; 1471us; 1322us; 1471us; 1324us; 1471us; 1325us; 1471us; 1326us; 1471us; 1327us; 1471us; 1330us; 1471us; 1331us; 1471us; 1332us; 1471us; 1333us; 1471us; 1334us; 1471us; 1337us; 1471us; 1338us; 1471us; 1340us; 1471us; 1342us; 1471us; 1343us; 1471us; 1345us; 1471us; 1347us; 1471us; 1349us; 1471us; 1350us; 1471us; 1352us; 1471us; 1354us; 1471us; 1355us; 1471us; 1365us; 1471us; 1374us; 1471us; 1375us; 1471us; 1378us; 1471us; 1379us; 1471us; 1383us; 1471us; 1384us; 1471us; 1389us; 1471us; 1390us; 1471us; 1402us; 1471us; 1406us; 1471us; 1419us; 1471us; 1423us; 1471us; 1437us; 1471us; 1441us; 1471us; 1444us; 1471us; 1451us; 1471us; 1460us; 1471us; 1466us; 1471us; 1467us; 1471us; 1468us; 1471us; 305us; 65535us; 34us; 1522us; 50us; 1477us; 52us; 1477us; 76us; 1522us; 106us; 1522us; 128us; 1522us; 135us; 1477us; 138us; 1477us; 164us; 1477us; 169us; 1477us; 175us; 1522us; 178us; 1477us; 181us; 1522us; 195us; 213us; 201us; 213us; 207us; 1477us; 236us; 1477us; 270us; 1522us; 272us; 1522us; 277us; 1522us; 282us; 571us; 285us; 1522us; 288us; 1477us; 292us; 1477us; 293us; 1477us; 294us; 1477us; 295us; 1477us; 303us; 1477us; 334us; 1477us; 367us; 1524us; 370us; 1522us; 372us; 1524us; 375us; 1522us; 383us; 571us; 389us; 1477us; 390us; 1477us; 393us; 1522us; 396us; 1477us; 405us; 1524us; 408us; 1522us; 414us; 1524us; 417us; 1524us; 433us; 1477us; 440us; 441us; 443us; 444us; 463us; 571us; 478us; 1477us; 480us; 1477us; 516us; 1477us; 519us; 1477us; 552us; 1522us; 555us; 1477us; 558us; 1477us; 577us; 1477us; 580us; 1477us; 581us; 1477us; 590us; 591us; 592us; 1477us; 601us; 604us; 605us; 1477us; 607us; 1477us; 609us; 1477us; 615us; 1522us; 621us; 1522us; 632us; 633us; 644us; 1477us; 645us; 646us; 657us; 1477us; 667us; 1524us; 670us; 1522us; 673us; 1522us; 683us; 1522us; 689us; 1477us; 716us; 717us; 720us; 1477us; 722us; 715us; 723us; 715us; 725us; 715us; 741us; 742us; 743us; 1524us; 744us; 1524us; 748us; 1524us; 749us; 1524us; 750us; 1524us; 751us; 1524us; 753us; 1524us; 755us; 1524us; 757us; 1524us; 759us; 1477us; 762us; 1524us; 764us; 1524us; 766us; 1524us; 771us; 1477us; 774us; 1524us; 777us; 1524us; 781us; 783us; 782us; 783us; 789us; 1524us; 808us; 809us; 810us; 1524us; 813us; 1477us; 815us; 1524us; 816us; 1524us; 818us; 1524us; 819us; 1524us; 820us; 1524us; 821us; 1524us; 825us; 1477us; 828us; 1524us; 830us; 1524us; 832us; 1522us; 837us; 1522us; 844us; 1477us; 849us; 1522us; 851us; 1522us; 854us; 1522us; 857us; 1522us; 862us; 1522us; 865us; 1522us; 868us; 1522us; 874us; 1522us; 878us; 1522us; 882us; 1522us; 884us; 1522us; 889us; 1522us; 891us; 1522us; 893us; 1522us; 895us; 1522us; 897us; 1522us; 899us; 1522us; 908us; 1524us; 910us; 1522us; 917us; 1522us; 924us; 1522us; 929us; 1522us; 931us; 1522us; 933us; 1524us; 934us; 1522us; 937us; 1522us; 939us; 1524us; 940us; 1522us; 943us; 1522us; 946us; 1522us; 949us; 1522us; 951us; 1522us; 956us; 1522us; 992us; 1477us; 994us; 1477us; 996us; 1477us; 998us; 1522us; 1000us; 1522us; 1003us; 1522us; 1004us; 1522us; 1005us; 1522us; 1006us; 1522us; 1007us; 1522us; 1008us; 1522us; 1009us; 1522us; 1010us; 1522us; 1011us; 1522us; 1012us; 1522us; 1013us; 1522us; 1014us; 1522us; 1015us; 1522us; 1016us; 1522us; 1017us; 1522us; 1018us; 1522us; 1019us; 1522us; 1020us; 1522us; 1021us; 1522us; 1023us; 1522us; 1026us; 1524us; 1028us; 1524us; 1033us; 1524us; 1040us; 1524us; 1044us; 1522us; 1045us; 1522us; 1049us; 1522us; 1051us; 1522us; 1055us; 1522us; 1057us; 1522us; 1061us; 1522us; 1064us; 1522us; 1065us; 1522us; 1066us; 1522us; 1067us; 1522us; 1069us; 1522us; 1070us; 1522us; 1072us; 1522us; 1073us; 1522us; 1075us; 1522us; 1076us; 1522us; 1078us; 1522us; 1079us; 1522us; 1081us; 1522us; 1082us; 1522us; 1084us; 1477us; 1085us; 1477us; 1094us; 1522us; 1096us; 1522us; 1098us; 1522us; 1099us; 1522us; 1102us; 1522us; 1108us; 1522us; 1109us; 1522us; 1112us; 1522us; 1113us; 1522us; 1114us; 1522us; 1117us; 1522us; 1119us; 1522us; 1120us; 1522us; 1126us; 1522us; 1135us; 1522us; 1142us; 1522us; 1147us; 1522us; 1150us; 1522us; 1153us; 1522us; 1156us; 1522us; 1157us; 1522us; 1168us; 1522us; 1175us; 1522us; 1176us; 1522us; 1182us; 1522us; 1188us; 1522us; 1189us; 1522us; 1190us; 1522us; 1196us; 1477us; 1202us; 1522us; 1210us; 1522us; 1222us; 1522us; 1223us; 1522us; 1224us; 1522us; 1226us; 1522us; 1229us; 1522us; 1230us; 1522us; 1232us; 1477us; 1238us; 1522us; 1242us; 1477us; 1244us; 1522us; 1248us; 1477us; 1250us; 1522us; 1255us; 1477us; 1257us; 1522us; 1280us; 1477us; 1281us; 1477us; 1287us; 1524us; 1289us; 1522us; 1292us; 1524us; 1294us; 1522us; 1301us; 1524us; 1304us; 1524us; 1313us; 1477us; 1316us; 1477us; 1319us; 1477us; 1322us; 1477us; 1324us; 1477us; 1325us; 1477us; 1326us; 1477us; 1327us; 1477us; 1328us; 1329us; 1330us; 1477us; 1331us; 1477us; 1332us; 1477us; 1333us; 1477us; 1334us; 1477us; 1335us; 1336us; 1337us; 1477us; 1338us; 1477us; 1340us; 1477us; 1342us; 1477us; 1343us; 1477us; 1345us; 1477us; 1347us; 1477us; 1349us; 1477us; 1350us; 1477us; 1352us; 1477us; 1354us; 1477us; 1355us; 1477us; 1365us; 1477us; 1374us; 1477us; 1375us; 1477us; 1378us; 1477us; 1379us; 1477us; 1383us; 1477us; 1384us; 1477us; 1389us; 1477us; 1390us; 1477us; 1402us; 1477us; 1406us; 1477us; 1419us; 1477us; 1423us; 1477us; 1431us; 1477us; 1437us; 1477us; 1441us; 1477us; 1444us; 1477us; 1451us; 1477us; 1460us; 1477us; 1466us; 1477us; 1467us; 1477us; 1468us; 1477us; 1469us; 1470us; 1472us; 1474us; 1473us; 1474us; 1478us; 1479us; 1526us; 1524us; 106us; 65535us; 50us; 51us; 52us; 53us; 135us; 150us; 138us; 139us; 164us; 141us; 169us; 170us; 178us; 1357us; 195us; 203us; 201us; 203us; 207us; 208us; 236us; 1357us; 282us; 1357us; 288us; 1357us; 292us; 1357us; 293us; 1357us; 294us; 1357us; 295us; 1357us; 303us; 1357us; 334us; 1357us; 383us; 1357us; 389us; 1357us; 390us; 1357us; 396us; 1357us; 433us; 1357us; 463us; 1357us; 478us; 479us; 480us; 481us; 516us; 1357us; 519us; 1357us; 555us; 1357us; 558us; 1357us; 577us; 1357us; 580us; 1357us; 581us; 1357us; 592us; 1357us; 605us; 1357us; 607us; 608us; 609us; 610us; 644us; 647us; 657us; 647us; 689us; 1357us; 720us; 1357us; 759us; 1357us; 771us; 827us; 813us; 1357us; 825us; 827us; 844us; 1357us; 992us; 1357us; 994us; 1357us; 996us; 1357us; 1084us; 1357us; 1085us; 1357us; 1196us; 1357us; 1232us; 1357us; 1242us; 1243us; 1248us; 1249us; 1255us; 1256us; 1280us; 1357us; 1281us; 1357us; 1313us; 1357us; 1316us; 1357us; 1319us; 1357us; 1322us; 1357us; 1324us; 1357us; 1325us; 1357us; 1326us; 1357us; 1327us; 1357us; 1330us; 1357us; 1331us; 1357us; 1332us; 1357us; 1333us; 1357us; 1334us; 1357us; 1337us; 1357us; 1338us; 1357us; 1340us; 1357us; 1342us; 1357us; 1343us; 1357us; 1345us; 1357us; 1347us; 1357us; 1349us; 1357us; 1350us; 1357us; 1352us; 1357us; 1354us; 1357us; 1355us; 1357us; 1365us; 1357us; 1374us; 1357us; 1375us; 1357us; 1378us; 1357us; 1379us; 1357us; 1383us; 1357us; 1384us; 1357us; 1389us; 1357us; 1390us; 1357us; 1402us; 1357us; 1406us; 1357us; 1419us; 1357us; 1423us; 1357us; 1431us; 1432us; 1437us; 1357us; 1441us; 1357us; 1444us; 1449us; 1451us; 1449us; 1460us; 1449us; 1466us; 1449us; 1467us; 1449us; 1468us; 1449us; 179us; 65535us; 34us; 1523us; 76us; 1523us; 106us; 1523us; 128us; 1523us; 175us; 1523us; 181us; 1523us; 270us; 1523us; 272us; 1523us; 277us; 1523us; 285us; 1523us; 367us; 1525us; 370us; 1523us; 372us; 1525us; 375us; 1523us; 393us; 1523us; 405us; 1525us; 408us; 1523us; 414us; 1525us; 417us; 1525us; 552us; 1523us; 615us; 1523us; 621us; 1523us; 667us; 1525us; 670us; 1523us; 673us; 1523us; 683us; 1523us; 743us; 1525us; 744us; 1525us; 748us; 1525us; 749us; 1525us; 750us; 1525us; 751us; 1525us; 753us; 1525us; 755us; 1525us; 757us; 1525us; 762us; 1525us; 764us; 1525us; 766us; 1525us; 774us; 1525us; 777us; 1525us; 789us; 1525us; 810us; 1525us; 815us; 1525us; 816us; 1525us; 818us; 1525us; 819us; 1525us; 820us; 1525us; 821us; 1525us; 828us; 1525us; 830us; 1525us; 832us; 1523us; 837us; 1523us; 849us; 1523us; 851us; 1523us; 854us; 1523us; 857us; 1523us; 862us; 1523us; 865us; 1523us; 868us; 1523us; 874us; 1523us; 878us; 1523us; 882us; 1523us; 884us; 1523us; 889us; 1523us; 891us; 1523us; 893us; 1523us; 895us; 1523us; 897us; 1523us; 899us; 1523us; 908us; 1525us; 910us; 1523us; 917us; 1523us; 924us; 1523us; 929us; 1523us; 931us; 1523us; 933us; 1525us; 934us; 1523us; 937us; 1523us; 939us; 1525us; 940us; 1523us; 943us; 1523us; 946us; 1523us; 949us; 1523us; 951us; 1523us; 956us; 1523us; 998us; 1523us; 1000us; 1523us; 1003us; 1523us; 1004us; 1523us; 1005us; 1523us; 1006us; 1523us; 1007us; 1523us; 1008us; 1523us; 1009us; 1523us; 1010us; 1523us; 1011us; 1523us; 1012us; 1523us; 1013us; 1523us; 1014us; 1523us; 1015us; 1523us; 1016us; 1523us; 1017us; 1523us; 1018us; 1523us; 1019us; 1523us; 1020us; 1523us; 1021us; 1523us; 1023us; 1523us; 1026us; 1525us; 1028us; 1525us; 1033us; 1525us; 1040us; 1525us; 1044us; 1523us; 1045us; 1523us; 1049us; 1523us; 1051us; 1523us; 1055us; 1523us; 1057us; 1523us; 1061us; 1523us; 1064us; 1523us; 1065us; 1523us; 1066us; 1523us; 1067us; 1523us; 1069us; 1523us; 1070us; 1523us; 1072us; 1523us; 1073us; 1523us; 1075us; 1523us; 1076us; 1523us; 1078us; 1523us; 1079us; 1523us; 1081us; 1523us; 1082us; 1523us; 1094us; 1523us; 1096us; 1523us; 1098us; 1523us; 1099us; 1523us; 1102us; 1523us; 1108us; 1523us; 1109us; 1523us; 1112us; 1523us; 1113us; 1523us; 1114us; 1523us; 1117us; 1523us; 1119us; 1523us; 1120us; 1523us; 1126us; 1523us; 1135us; 1523us; 1142us; 1523us; 1147us; 1523us; 1150us; 1523us; 1153us; 1523us; 1156us; 1523us; 1157us; 1523us; 1168us; 1523us; 1175us; 1523us; 1176us; 1523us; 1182us; 1523us; 1188us; 1523us; 1189us; 1523us; 1190us; 1523us; 1202us; 1523us; 1210us; 1523us; 1222us; 1523us; 1223us; 1523us; 1224us; 1523us; 1226us; 1523us; 1229us; 1523us; 1230us; 1523us; 1238us; 1523us; 1244us; 1523us; 1250us; 1523us; 1257us; 1523us; 1287us; 1525us; 1289us; 1523us; 1292us; 1525us; 1294us; 1523us; 1301us; 1525us; 1304us; 1525us; 1526us; 1525us; 6us; 65535us; 565us; 1482us; 789us; 1482us; 1135us; 1482us; 1189us; 1482us; 1190us; 1482us; 1481us; 1482us; 2us; 65535us; 1486us; 1521us; 1519us; 1520us; 6us; 65535us; 565us; 1485us; 789us; 1485us; 1135us; 1485us; 1189us; 1485us; 1190us; 1485us; 1481us; 1485us; 137us; 65535us; 34us; 1529us; 76us; 1529us; 106us; 1529us; 128us; 1529us; 175us; 1529us; 181us; 1529us; 270us; 1529us; 272us; 1529us; 277us; 1529us; 285us; 1529us; 370us; 1529us; 375us; 1529us; 393us; 1529us; 408us; 1529us; 552us; 1529us; 615us; 1529us; 621us; 1529us; 670us; 1529us; 673us; 1529us; 683us; 1529us; 832us; 1529us; 837us; 1529us; 849us; 1529us; 851us; 1529us; 854us; 1529us; 857us; 1529us; 862us; 1529us; 865us; 1529us; 868us; 1529us; 874us; 1529us; 878us; 1529us; 882us; 1529us; 884us; 1529us; 889us; 1529us; 891us; 1529us; 893us; 1529us; 895us; 1529us; 897us; 1529us; 899us; 1529us; 910us; 1529us; 917us; 1529us; 924us; 1529us; 929us; 1529us; 931us; 1529us; 934us; 1529us; 937us; 1529us; 940us; 1529us; 943us; 1529us; 946us; 1529us; 949us; 1529us; 951us; 1529us; 956us; 1529us; 998us; 1529us; 1000us; 1529us; 1003us; 1529us; 1004us; 1529us; 1005us; 1529us; 1006us; 1529us; 1007us; 1529us; 1008us; 1529us; 1009us; 1529us; 1010us; 1529us; 1011us; 1529us; 1012us; 1529us; 1013us; 1529us; 1014us; 1529us; 1015us; 1529us; 1016us; 1529us; 1017us; 1529us; 1018us; 1529us; 1019us; 1529us; 1020us; 1529us; 1021us; 1529us; 1023us; 1529us; 1044us; 1529us; 1045us; 1529us; 1049us; 1529us; 1051us; 1529us; 1055us; 1529us; 1057us; 1529us; 1061us; 1529us; 1064us; 1529us; 1065us; 1529us; 1066us; 1529us; 1067us; 1529us; 1069us; 1529us; 1070us; 1529us; 1072us; 1529us; 1073us; 1529us; 1075us; 1529us; 1076us; 1529us; 1078us; 1529us; 1079us; 1529us; 1081us; 1529us; 1082us; 1529us; 1094us; 1529us; 1096us; 1529us; 1098us; 1529us; 1099us; 1529us; 1102us; 1529us; 1108us; 1529us; 1109us; 1529us; 1112us; 1529us; 1113us; 1529us; 1114us; 1133us; 1117us; 1133us; 1119us; 1529us; 1120us; 1529us; 1126us; 1529us; 1135us; 1529us; 1142us; 1529us; 1147us; 1529us; 1150us; 1529us; 1153us; 1529us; 1156us; 1529us; 1157us; 1529us; 1168us; 1529us; 1175us; 1529us; 1176us; 1529us; 1182us; 1529us; 1188us; 1529us; 1189us; 1529us; 1190us; 1529us; 1202us; 1529us; 1210us; 1529us; 1222us; 1529us; 1223us; 1529us; 1224us; 1529us; 1226us; 1529us; 1229us; 1529us; 1230us; 1529us; 1238us; 1529us; 1244us; 1529us; 1250us; 1529us; 1257us; 1529us; 1289us; 1529us; 1294us; 1529us; 42us; 65535us; 367us; 416us; 372us; 416us; 405us; 416us; 414us; 415us; 417us; 418us; 667us; 416us; 743us; 416us; 744us; 416us; 748us; 416us; 749us; 416us; 750us; 416us; 751us; 416us; 753us; 416us; 755us; 416us; 757us; 416us; 762us; 416us; 764us; 416us; 766us; 416us; 774us; 416us; 777us; 416us; 789us; 416us; 810us; 416us; 815us; 416us; 816us; 416us; 818us; 416us; 819us; 416us; 820us; 416us; 821us; 416us; 828us; 416us; 830us; 416us; 908us; 416us; 933us; 416us; 939us; 416us; 1026us; 416us; 1028us; 416us; 1033us; 416us; 1040us; 416us; 1287us; 416us; 1292us; 416us; 1301us; 416us; 1304us; 416us; 1526us; 1527us; 135us; 65535us; 34us; 1125us; 76us; 1125us; 106us; 1125us; 128us; 1125us; 175us; 176us; 181us; 1125us; 270us; 276us; 272us; 276us; 277us; 278us; 285us; 286us; 370us; 1125us; 375us; 1125us; 393us; 394us; 408us; 1125us; 552us; 564us; 615us; 1125us; 621us; 1125us; 670us; 1125us; 673us; 1125us; 683us; 1125us; 832us; 1125us; 837us; 1125us; 849us; 1125us; 851us; 1125us; 854us; 1125us; 857us; 1125us; 862us; 1125us; 865us; 1125us; 868us; 1125us; 874us; 1125us; 878us; 1125us; 882us; 1125us; 884us; 1125us; 889us; 1125us; 891us; 1125us; 893us; 1125us; 895us; 1125us; 897us; 1125us; 899us; 1125us; 910us; 1125us; 917us; 1125us; 924us; 1125us; 929us; 1125us; 931us; 1125us; 934us; 1125us; 937us; 1125us; 940us; 1125us; 943us; 1125us; 946us; 1125us; 949us; 1125us; 951us; 1125us; 956us; 1125us; 998us; 1125us; 1000us; 1125us; 1003us; 1125us; 1004us; 1125us; 1005us; 1125us; 1006us; 1125us; 1007us; 1125us; 1008us; 1125us; 1009us; 1125us; 1010us; 1125us; 1011us; 1125us; 1012us; 1125us; 1013us; 1125us; 1014us; 1125us; 1015us; 1125us; 1016us; 1125us; 1017us; 1125us; 1018us; 1125us; 1019us; 1125us; 1020us; 1125us; 1021us; 1125us; 1023us; 1125us; 1044us; 1125us; 1045us; 1125us; 1049us; 1125us; 1051us; 1125us; 1055us; 1125us; 1057us; 1125us; 1061us; 1125us; 1064us; 1125us; 1065us; 1125us; 1066us; 1125us; 1067us; 1125us; 1069us; 1125us; 1070us; 1125us; 1072us; 1125us; 1073us; 1125us; 1075us; 1125us; 1076us; 1125us; 1078us; 1125us; 1079us; 1125us; 1081us; 1125us; 1082us; 1125us; 1094us; 1125us; 1096us; 1125us; 1098us; 1125us; 1099us; 1125us; 1102us; 1125us; 1108us; 1125us; 1109us; 1125us; 1112us; 1125us; 1113us; 1125us; 1119us; 1121us; 1120us; 1121us; 1126us; 1125us; 1135us; 1125us; 1142us; 1125us; 1147us; 1125us; 1150us; 1125us; 1153us; 1125us; 1156us; 1125us; 1157us; 1125us; 1168us; 1125us; 1175us; 1125us; 1176us; 1125us; 1182us; 1125us; 1188us; 1125us; 1189us; 1125us; 1190us; 1125us; 1202us; 1125us; 1210us; 1125us; 1222us; 1125us; 1223us; 1125us; 1224us; 1125us; 1226us; 1125us; 1229us; 1125us; 1230us; 1125us; 1238us; 1125us; 1244us; 1125us; 1250us; 1125us; 1257us; 1125us; 1289us; 1125us; 1294us; 1125us; 15us; 65535us; 41us; 1533us; 47us; 1533us; 86us; 1533us; 89us; 1533us; 90us; 1539us; 93us; 1533us; 101us; 1533us; 107us; 1533us; 111us; 1533us; 112us; 1533us; 113us; 1533us; 114us; 1533us; 118us; 1533us; 1533us; 1533us; 1539us; 1539us; 13us; 65535us; 41us; 94us; 47us; 119us; 86us; 94us; 89us; 94us; 93us; 94us; 101us; 119us; 107us; 108us; 111us; 119us; 112us; 119us; 113us; 119us; 114us; 116us; 118us; 119us; 1533us; 1534us; 4us; 65535us; 19us; 1537us; 21us; 1537us; 23us; 1537us; 1537us; 1537us; 4us; 65535us; 19us; 25us; 21us; 27us; 23us; 29us; 1537us; 1538us; 0us; 65535us; 2us; 65535us; 90us; 91us; 1539us; 1540us; 14us; 65535us; 196us; 201us; 258us; 1554us; 352us; 1554us; 451us; 1554us; 583us; 584us; 805us; 830us; 823us; 825us; 846us; 849us; 847us; 849us; 848us; 849us; 1236us; 1255us; 1240us; 1255us; 1246us; 1255us; 1252us; 1255us; 4us; 65535us; 157us; 158us; 425us; 426us; 428us; 429us; 431us; 432us; 2us; 65535us; 1272us; 1273us; 1282us; 1283us; 4us; 65535us; 387us; 388us; 398us; 399us; 409us; 410us; 457us; 458us; 2us; 65535us; 59us; 60us; 67us; 68us; 19us; 65535us; 83us; 84us; 98us; 99us; 198us; 199us; 225us; 226us; 323us; 324us; 546us; 576us; 553us; 554us; 556us; 557us; 559us; 560us; 562us; 563us; 571us; 572us; 574us; 575us; 909us; 954us; 936us; 937us; 942us; 943us; 948us; 949us; 1259us; 1263us; 1260us; 1261us; 1283us; 1284us; 11us; 65535us; 196us; 197us; 258us; 259us; 352us; 353us; 451us; 452us; 583us; 586us; 805us; 829us; 823us; 824us; 1236us; 1237us; 1240us; 1241us; 1246us; 1247us; 1252us; 1253us; 2us; 65535us; 611us; 612us; 617us; 618us; 2us; 65535us; 1300us; 1301us; 1303us; 1304us; 10us; 65535us; 172us; 173us; 283us; 284us; 357us; 366us; 359us; 366us; 364us; 366us; 386us; 372us; 392us; 393us; 455us; 666us; 456us; 372us; 663us; 666us; 7us; 65535us; 173us; 174us; 296us; 589us; 298us; 589us; 401us; 589us; 403us; 589us; 587us; 589us; 666us; 667us; 4us; 65535us; 898us; 899us; 909us; 910us; 916us; 917us; 923us; 924us; 9us; 65535us; 900us; 901us; 903us; 904us; 906us; 907us; 911us; 912us; 914us; 915us; 918us; 919us; 921us; 922us; 925us; 926us; 927us; 928us; 2us; 65535us; 135us; 151us; 142us; 151us; 2us; 65535us; 138us; 185us; 164us; 189us; 2us; 65535us; 72us; 164us; 163us; 164us; 0us; 65535us; 10us; 65535us; 203us; 204us; 208us; 209us; 316us; 317us; 434us; 436us; 633us; 634us; 645us; 649us; 648us; 649us; 1086us; 1088us; 1087us; 1089us; 1233us; 1234us; 5us; 65535us; 176us; 500us; 286us; 500us; 394us; 500us; 479us; 495us; 752us; 500us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 5us; 29us; 204us; 206us; 208us; 216us; 221us; 227us; 232us; 237us; 239us; 241us; 248us; 251us; 253us; 256us; 259us; 261us; 264us; 267us; 270us; 273us; 277us; 284us; 294us; 298us; 304us; 314us; 325us; 336us; 352us; 354us; 356us; 359us; 360us; 362us; 372us; 382us; 385us; 387us; 472us; 591us; 710us; 712us; 715us; 718us; 721us; 724us; 728us; 730us; 733us; 736us; 739us; 743us; 752us; 757us; 760us; 763us; 766us; 778us; 785us; 788us; 792us; 795us; 799us; 803us; 807us; 811us; 822us; 824us; 827us; 831us; 834us; 837us; 848us; 888us; 897us; 957us; 970us; 972us; 977us; 983us; 986us; 989us; 992us; 995us; 999us; 1002us; 1007us; 1012us; 1015us; 1021us; 1028us; 1034us; 1044us; 1046us; 1048us; 1052us; 1058us; 1060us; 1062us; 1067us; 1071us; 1073us; 1077us; 1081us; 1086us; 1090us; 1096us; 1100us; 1104us; 1106us; 1110us; 1114us; 1118us; 1121us; 1124us; 1130us; 1135us; 1138us; 1145us; 1152us; 1154us; 1156us; 1172us; 1282us; 1290us; 1400us; 1509us; 1513us; 1518us; 1628us; 1630us; 1632us; 1636us; 1639us; 1641us; 1646us; 1649us; 1655us; 1658us; 1660us; 1663us; 1665us; 1667us; 1669us; 1672us; 1846us; 2020us; 2024us; 2028us; 2031us; 2033us; 2045us; 2057us; 2069us; 2100us; 2109us; 2149us; 2151us; 2171us; 2191us; 2211us; 2213us; 2216us; 2219us; 2223us; 2246us; 2254us; 2260us; 2308us; 2361us; 2412us; 2518us; 2520us; 2523us; 2526us; 2533us; 2540us; 2542us; 2544us; 2547us; 2550us; 2552us; 2658us; 2778us; 2898us; 2901us; 3028us; 3031us; 3036us; 3169us; 3302us; 3474us; 3607us; 3740us; 3744us; 3748us; 3881us; 3883us; 3886us; 3890us; 3895us; 3897us; 3899us; 3901us; 3902us; 3906us; 3907us; 3908us; 3910us; 3915us; 3917us; 3919us; 3921us; 3924us; 3926us; 3931us; 3937us; 3939us; 4045us; 4151us; 4155us; 4161us; 4165us; 4175us; 4185us; 4188us; 4200us; 4227us; 4254us; 4260us; 4263us; 4343us; 4423us; 4484us; 4502us; 4505us; 4508us; 4569us; 4574us; 4579us; 4642us; 4647us; 4654us; 4656us; 4663us; 4670us; 4677us; 4683us; 4780us; 4881us; 5187us; 5294us; 5474us; 5481us; 5484us; 5491us; 5629us; 5672us; 5808us; 5824us; 5838us; 5843us; 5848us; 5849us; 5852us; 5867us; 5872us; 5875us; 5880us; 5883us; 5903us; 5915us; 5918us; 5921us; 5932us; 5940us; 5945us; 5955us; 5958us; 5961us; 5964us; 5965us; 5976us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 2us; 6us; 11us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 2us; 15us; 18us; 1us; 15us; 2us; 16us; 19us; 1us; 16us; 2us; 17us; 20us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 7us; 23us; 75us; 76us; 77us; 78us; 79us; 80us; 7us; 23us; 75us; 76us; 77us; 78us; 79us; 80us; 25us; 23us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 1us; 26us; 1us; 26us; 3us; 27us; 52us; 55us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 1us; 29us; 1us; 29us; 3us; 30us; 67us; 72us; 1us; 30us; 1us; 31us; 1us; 31us; 3us; 31us; 795us; 796us; 1us; 32us; 3us; 32us; 795us; 796us; 2us; 33us; 34us; 1us; 34us; 2us; 35us; 36us; 1us; 35us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 2us; 38us; 39us; 1us; 39us; 2us; 40us; 41us; 1us; 40us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 6us; 43us; 97us; 98us; 99us; 100us; 102us; 6us; 43us; 97us; 98us; 99us; 100us; 102us; 3us; 43us; 97us; 98us; 1us; 43us; 1us; 44us; 10us; 45us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 10us; 45us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 2us; 45us; 80us; 1us; 45us; 1us; 46us; 1us; 47us; 3us; 48us; 49us; 50us; 2us; 48us; 49us; 1us; 48us; 1us; 48us; 1us; 49us; 3us; 50us; 52us; 55us; 1us; 50us; 1us; 51us; 2us; 52us; 55us; 2us; 54us; 56us; 2us; 54us; 56us; 1us; 54us; 1us; 55us; 1us; 55us; 1us; 55us; 3us; 57us; 58us; 59us; 2us; 57us; 58us; 1us; 57us; 1us; 57us; 1us; 58us; 3us; 59us; 67us; 72us; 1us; 59us; 1us; 60us; 1us; 61us; 9us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 9us; 63us; 64us; 65us; 75us; 76us; 77us; 78us; 79us; 80us; 27us; 63us; 64us; 65us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 2us; 63us; 64us; 1us; 63us; 1us; 66us; 2us; 67us; 72us; 3us; 67us; 72us; 87us; 3us; 67us; 72us; 92us; 4us; 68us; 69us; 70us; 71us; 1us; 68us; 2us; 69us; 71us; 1us; 69us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 74us; 6us; 75us; 76us; 77us; 78us; 79us; 80us; 6us; 75us; 76us; 77us; 78us; 79us; 80us; 1us; 75us; 3us; 75us; 468us; 469us; 1us; 76us; 5us; 76us; 470us; 471us; 472us; 473us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 1us; 81us; 3us; 82us; 105us; 106us; 3us; 82us; 795us; 796us; 1us; 82us; 3us; 83us; 795us; 796us; 4us; 84us; 85us; 86us; 87us; 1us; 84us; 1us; 84us; 2us; 85us; 86us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 3us; 89us; 795us; 796us; 3us; 90us; 91us; 92us; 2us; 90us; 91us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 96us; 5us; 97us; 98us; 99us; 100us; 102us; 5us; 97us; 98us; 99us; 100us; 102us; 2us; 97us; 98us; 2us; 97us; 98us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 3us; 101us; 795us; 796us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 104us; 25us; 104us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 2us; 110us; 111us; 1us; 111us; 1us; 112us; 2us; 112us; 114us; 1us; 112us; 1us; 112us; 1us; 112us; 1us; 113us; 2us; 114us; 867us; 1us; 114us; 3us; 115us; 795us; 796us; 1us; 115us; 1us; 115us; 1us; 116us; 1us; 116us; 3us; 116us; 795us; 796us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 118us; 2us; 119us; 794us; 1us; 120us; 1us; 121us; 1us; 121us; 2us; 122us; 123us; 1us; 122us; 1us; 122us; 2us; 124us; 125us; 1us; 124us; 1us; 124us; 1us; 125us; 3us; 126us; 135us; 136us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 129us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 131us; 3us; 132us; 133us; 134us; 2us; 132us; 133us; 1us; 132us; 1us; 133us; 1us; 134us; 1us; 134us; 2us; 135us; 136us; 2us; 135us; 136us; 1us; 135us; 1us; 136us; 2us; 137us; 138us; 2us; 137us; 138us; 1us; 137us; 1us; 138us; 2us; 139us; 140us; 2us; 139us; 140us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 142us; 3us; 144us; 161us; 162us; 4us; 144us; 199us; 205us; 207us; 1us; 144us; 1us; 145us; 1us; 146us; 1us; 147us; 1us; 148us; 2us; 149us; 150us; 1us; 150us; 1us; 152us; 1us; 152us; 2us; 153us; 154us; 2us; 153us; 154us; 1us; 153us; 1us; 154us; 2us; 155us; 156us; 1us; 156us; 1us; 156us; 7us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 10us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 242us; 243us; 244us; 7us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 10us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 242us; 243us; 244us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 158us; 4us; 158us; 732us; 733us; 734us; 1us; 159us; 4us; 159us; 732us; 733us; 734us; 1us; 160us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 165us; 1us; 165us; 4us; 167us; 168us; 169us; 170us; 1us; 168us; 1us; 168us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 3us; 171us; 180us; 181us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 174us; 1us; 175us; 1us; 175us; 1us; 175us; 1us; 176us; 3us; 177us; 178us; 179us; 2us; 177us; 178us; 1us; 177us; 1us; 178us; 2us; 179us; 186us; 1us; 179us; 2us; 180us; 181us; 2us; 180us; 181us; 1us; 180us; 1us; 181us; 2us; 182us; 183us; 2us; 182us; 183us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 188us; 1us; 188us; 2us; 189us; 190us; 2us; 189us; 190us; 1us; 189us; 1us; 190us; 2us; 191us; 192us; 1us; 192us; 1us; 192us; 1us; 193us; 1us; 193us; 1us; 193us; 1us; 193us; 1us; 193us; 1us; 193us; 2us; 194us; 195us; 2us; 194us; 195us; 2us; 194us; 195us; 1us; 194us; 1us; 194us; 1us; 195us; 2us; 196us; 197us; 1us; 197us; 10us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 205us; 206us; 207us; 13us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 205us; 206us; 207us; 242us; 243us; 244us; 10us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 205us; 206us; 207us; 13us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 205us; 206us; 207us; 242us; 243us; 244us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 200us; 1us; 200us; 1us; 201us; 4us; 201us; 732us; 733us; 734us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 204us; 1us; 205us; 1us; 205us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 207us; 1us; 207us; 1us; 208us; 1us; 208us; 1us; 208us; 1us; 209us; 1us; 210us; 1us; 210us; 1us; 212us; 1us; 213us; 1us; 214us; 1us; 215us; 1us; 216us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 222us; 1us; 222us; 1us; 222us; 2us; 224us; 225us; 2us; 224us; 225us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 228us; 1us; 228us; 1us; 229us; 2us; 231us; 232us; 1us; 231us; 1us; 232us; 2us; 233us; 234us; 2us; 233us; 234us; 1us; 233us; 1us; 234us; 1us; 235us; 2us; 236us; 237us; 2us; 236us; 237us; 1us; 236us; 2us; 238us; 239us; 3us; 238us; 239us; 347us; 2us; 238us; 239us; 1us; 238us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 3us; 242us; 243us; 244us; 3us; 242us; 243us; 244us; 1us; 242us; 1us; 243us; 1us; 244us; 3us; 245us; 246us; 247us; 2us; 245us; 246us; 1us; 245us; 1us; 246us; 1us; 247us; 1us; 247us; 1us; 248us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 252us; 3us; 253us; 254us; 255us; 4us; 253us; 255us; 795us; 796us; 1us; 254us; 3us; 254us; 795us; 796us; 1us; 255us; 1us; 256us; 1us; 257us; 2us; 257us; 258us; 1us; 257us; 2us; 258us; 261us; 3us; 258us; 262us; 263us; 1us; 258us; 2us; 258us; 262us; 1us; 258us; 1us; 259us; 1us; 260us; 1us; 260us; 1us; 261us; 1us; 261us; 1us; 261us; 1us; 261us; 1us; 262us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 266us; 2us; 268us; 404us; 1us; 271us; 2us; 271us; 272us; 2us; 272us; 700us; 2us; 272us; 702us; 1us; 272us; 1us; 272us; 1us; 273us; 1us; 274us; 1us; 274us; 1us; 274us; 1us; 274us; 8us; 275us; 276us; 277us; 278us; 279us; 281us; 282us; 283us; 1us; 275us; 1us; 275us; 7us; 276us; 277us; 278us; 279us; 281us; 282us; 283us; 1us; 276us; 3us; 277us; 282us; 283us; 1us; 277us; 1us; 278us; 1us; 279us; 1us; 279us; 1us; 279us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 280us; 1us; 281us; 1us; 281us; 1us; 282us; 1us; 284us; 1us; 284us; 1us; 285us; 1us; 285us; 1us; 285us; 2us; 286us; 299us; 1us; 287us; 2us; 288us; 289us; 1us; 288us; 1us; 288us; 4us; 290us; 291us; 292us; 293us; 4us; 290us; 291us; 292us; 293us; 4us; 290us; 291us; 292us; 293us; 1us; 290us; 1us; 291us; 1us; 291us; 1us; 291us; 1us; 292us; 1us; 292us; 1us; 292us; 1us; 293us; 1us; 293us; 1us; 293us; 1us; 294us; 5us; 295us; 296us; 797us; 799us; 800us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 296us; 1us; 296us; 5us; 297us; 298us; 300us; 301us; 794us; 1us; 297us; 2us; 298us; 301us; 2us; 298us; 301us; 2us; 298us; 301us; 1us; 299us; 1us; 300us; 1us; 300us; 1us; 302us; 5us; 303us; 304us; 732us; 733us; 734us; 1us; 303us; 1us; 303us; 2us; 305us; 306us; 2us; 305us; 867us; 1us; 305us; 1us; 306us; 1us; 307us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 309us; 1us; 309us; 1us; 310us; 1us; 310us; 1us; 311us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 2us; 313us; 314us; 1us; 314us; 1us; 314us; 1us; 316us; 3us; 316us; 795us; 796us; 1us; 317us; 3us; 317us; 795us; 796us; 1us; 318us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 320us; 1us; 320us; 1us; 321us; 1us; 321us; 1us; 321us; 1us; 321us; 1us; 322us; 1us; 322us; 1us; 322us; 1us; 323us; 1us; 324us; 1us; 325us; 1us; 326us; 1us; 327us; 1us; 328us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 329us; 2us; 330us; 333us; 2us; 331us; 334us; 1us; 333us; 1us; 333us; 1us; 334us; 1us; 334us; 2us; 335us; 336us; 5us; 335us; 336us; 338us; 339us; 340us; 1us; 336us; 3us; 337us; 795us; 796us; 4us; 338us; 339us; 340us; 342us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 339us; 1us; 340us; 1us; 341us; 2us; 341us; 343us; 1us; 341us; 2us; 342us; 343us; 1us; 344us; 1us; 344us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 347us; 1us; 347us; 1us; 348us; 2us; 349us; 350us; 2us; 349us; 350us; 2us; 349us; 350us; 2us; 349us; 350us; 2us; 349us; 350us; 1us; 349us; 1us; 350us; 2us; 351us; 352us; 2us; 351us; 352us; 1us; 351us; 1us; 352us; 1us; 353us; 1us; 354us; 2us; 354us; 355us; 1us; 355us; 1us; 357us; 2us; 357us; 358us; 1us; 357us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 359us; 2us; 360us; 361us; 1us; 360us; 1us; 360us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 1us; 371us; 1us; 372us; 1us; 373us; 1us; 374us; 1us; 375us; 2us; 375us; 415us; 1us; 376us; 1us; 377us; 1us; 378us; 1us; 379us; 2us; 380us; 381us; 1us; 381us; 1us; 381us; 6us; 382us; 394us; 395us; 396us; 401us; 403us; 1us; 383us; 1us; 384us; 1us; 384us; 2us; 385us; 386us; 3us; 385us; 387us; 388us; 1us; 385us; 1us; 385us; 1us; 386us; 1us; 388us; 1us; 388us; 5us; 389us; 390us; 391us; 392us; 393us; 2us; 389us; 391us; 1us; 389us; 1us; 390us; 1us; 391us; 2us; 392us; 466us; 1us; 392us; 1us; 393us; 6us; 394us; 395us; 395us; 396us; 401us; 403us; 6us; 394us; 395us; 396us; 396us; 401us; 403us; 6us; 394us; 395us; 396us; 400us; 401us; 403us; 6us; 394us; 395us; 396us; 401us; 401us; 403us; 6us; 394us; 395us; 396us; 401us; 402us; 403us; 6us; 394us; 395us; 396us; 401us; 403us; 403us; 6us; 394us; 395us; 396us; 401us; 403us; 506us; 7us; 394us; 395us; 396us; 401us; 403us; 507us; 508us; 1us; 394us; 1us; 394us; 1us; 395us; 1us; 396us; 2us; 397us; 400us; 2us; 398us; 402us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 5us; 404us; 405us; 406us; 407us; 421us; 3us; 405us; 406us; 407us; 1us; 405us; 1us; 406us; 1us; 406us; 1us; 407us; 1us; 407us; 1us; 408us; 3us; 408us; 767us; 768us; 1us; 409us; 4us; 410us; 411us; 412us; 413us; 1us; 410us; 1us; 411us; 1us; 411us; 1us; 412us; 1us; 412us; 1us; 414us; 1us; 415us; 1us; 415us; 1us; 416us; 1us; 416us; 1us; 416us; 1us; 417us; 1us; 417us; 1us; 417us; 1us; 418us; 1us; 418us; 1us; 418us; 1us; 419us; 1us; 420us; 2us; 420us; 817us; 1us; 420us; 1us; 421us; 1us; 422us; 1us; 423us; 1us; 424us; 1us; 425us; 7us; 426us; 427us; 428us; 429us; 797us; 799us; 800us; 2us; 426us; 427us; 1us; 426us; 1us; 427us; 2us; 428us; 466us; 1us; 428us; 1us; 429us; 7us; 430us; 432us; 433us; 436us; 438us; 441us; 443us; 7us; 432us; 433us; 433us; 436us; 438us; 441us; 443us; 7us; 432us; 433us; 436us; 437us; 438us; 441us; 443us; 7us; 432us; 433us; 436us; 438us; 438us; 441us; 443us; 7us; 432us; 433us; 436us; 438us; 440us; 441us; 443us; 7us; 432us; 433us; 436us; 438us; 441us; 441us; 443us; 7us; 432us; 433us; 436us; 438us; 441us; 442us; 443us; 7us; 432us; 433us; 436us; 438us; 441us; 443us; 443us; 7us; 432us; 433us; 436us; 438us; 441us; 443us; 447us; 8us; 432us; 433us; 436us; 438us; 441us; 443us; 449us; 450us; 11us; 432us; 433us; 436us; 438us; 441us; 443us; 503us; 653us; 654us; 655us; 656us; 7us; 432us; 433us; 436us; 438us; 441us; 443us; 548us; 1us; 432us; 1us; 432us; 1us; 433us; 2us; 434us; 440us; 2us; 435us; 442us; 1us; 436us; 1us; 436us; 1us; 437us; 1us; 438us; 1us; 439us; 1us; 440us; 1us; 441us; 1us; 442us; 1us; 443us; 1us; 444us; 2us; 445us; 446us; 1us; 445us; 2us; 446us; 867us; 1us; 446us; 3us; 447us; 795us; 796us; 1us; 447us; 1us; 449us; 2us; 450us; 867us; 1us; 450us; 2us; 451us; 452us; 2us; 451us; 452us; 1us; 451us; 1us; 452us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 454us; 25us; 455us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 2us; 456us; 457us; 1us; 456us; 2us; 458us; 459us; 1us; 458us; 1us; 458us; 29us; 460us; 461us; 462us; 463us; 464us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 31us; 460us; 461us; 462us; 463us; 464us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 607us; 608us; 31us; 460us; 461us; 462us; 463us; 464us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 650us; 651us; 2us; 460us; 461us; 1us; 460us; 1us; 463us; 1us; 463us; 1us; 464us; 1us; 464us; 1us; 464us; 1us; 464us; 5us; 465us; 470us; 471us; 472us; 473us; 1us; 466us; 2us; 466us; 632us; 1us; 467us; 2us; 468us; 469us; 2us; 468us; 469us; 1us; 468us; 1us; 469us; 4us; 470us; 471us; 472us; 473us; 1us; 470us; 1us; 471us; 2us; 472us; 473us; 1us; 472us; 1us; 473us; 1us; 474us; 1us; 475us; 1us; 476us; 2us; 477us; 478us; 2us; 477us; 478us; 1us; 477us; 1us; 478us; 3us; 479us; 480us; 481us; 3us; 479us; 480us; 481us; 1us; 479us; 1us; 480us; 1us; 481us; 1us; 481us; 3us; 482us; 483us; 484us; 26us; 482us; 483us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 482us; 1us; 483us; 1us; 484us; 1us; 485us; 25us; 485us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 2us; 486us; 487us; 25us; 486us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 488us; 1us; 488us; 2us; 489us; 490us; 1us; 489us; 5us; 491us; 492us; 493us; 494us; 495us; 28us; 491us; 492us; 493us; 494us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 3us; 491us; 492us; 493us; 2us; 491us; 492us; 1us; 491us; 1us; 492us; 1us; 493us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 495us; 9us; 496us; 497us; 498us; 499us; 500us; 501us; 502us; 503us; 511us; 4us; 496us; 497us; 498us; 511us; 2us; 496us; 498us; 1us; 496us; 1us; 496us; 1us; 497us; 1us; 498us; 1us; 498us; 3us; 499us; 500us; 501us; 3us; 499us; 500us; 501us; 2us; 499us; 500us; 1us; 499us; 1us; 500us; 1us; 501us; 1us; 501us; 1us; 502us; 1us; 502us; 1us; 502us; 1us; 502us; 1us; 503us; 1us; 503us; 1us; 504us; 25us; 504us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 505us; 25us; 505us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 1us; 506us; 1us; 506us; 1us; 506us; 1us; 506us; 1us; 506us; 1us; 506us; 2us; 507us; 508us; 2us; 507us; 508us; 2us; 507us; 508us; 2us; 507us; 508us; 2us; 507us; 508us; 1us; 507us; 1us; 508us; 1us; 509us; 1us; 509us; 1us; 509us; 1us; 509us; 1us; 509us; 1us; 510us; 1us; 510us; 1us; 510us; 1us; 511us; 1us; 511us; 1us; 512us; 1us; 512us; 25us; 513us; 514us; 515us; 516us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 533us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 534us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 535us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 536us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 537us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 553us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 557us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 561us; 567us; 26us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 564us; 565us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 566us; 567us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 567us; 26us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 607us; 608us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 607us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 609us; 27us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 650us; 651us; 653us; 26us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 650us; 651us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 651us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 656us; 25us; 513us; 514us; 515us; 516us; 519us; 520us; 521us; 522us; 523us; 524us; 525us; 526us; 527us; 528us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 567us; 656us; 1us; 513us; 1us; 513us; 1us; 514us; 1us; 514us; 1us; 515us; 1us; 515us; 1us; 516us; 2us; 517us; 538us; 1us; 517us; 1us; 517us; 2us; 518us; 566us; 1us; 519us; 1us; 520us; 1us; 521us; 1us; 522us; 1us; 523us; 1us; 524us; 1us; 525us; 1us; 526us; 1us; 527us; 1us; 528us; 1us; 529us; 1us; 530us; 1us; 531us; 1us; 532us; 1us; 533us; 1us; 534us; 1us; 535us; 1us; 536us; 1us; 537us; 1us; 539us; 1us; 540us; 1us; 540us; 1us; 540us; 1us; 541us; 1us; 541us; 2us; 542us; 543us; 2us; 542us; 543us; 1us; 542us; 1us; 543us; 1us; 544us; 2us; 545us; 546us; 1us; 545us; 1us; 546us; 1us; 547us; 1us; 548us; 4us; 549us; 550us; 551us; 552us; 4us; 549us; 550us; 551us; 552us; 2us; 550us; 551us; 1us; 550us; 1us; 551us; 1us; 552us; 1us; 553us; 1us; 555us; 1us; 555us; 1us; 556us; 1us; 556us; 1us; 557us; 2us; 558us; 559us; 2us; 558us; 559us; 2us; 558us; 559us; 1us; 558us; 1us; 559us; 1us; 561us; 2us; 562us; 563us; 2us; 562us; 563us; 2us; 562us; 563us; 1us; 562us; 1us; 563us; 2us; 564us; 565us; 1us; 564us; 1us; 565us; 1us; 566us; 1us; 567us; 1us; 568us; 2us; 568us; 811us; 1us; 568us; 1us; 569us; 2us; 569us; 807us; 1us; 569us; 1us; 570us; 2us; 570us; 810us; 1us; 570us; 1us; 571us; 2us; 571us; 823us; 1us; 571us; 1us; 572us; 2us; 572us; 818us; 1us; 572us; 1us; 573us; 2us; 573us; 819us; 1us; 573us; 3us; 574us; 575us; 576us; 7us; 574us; 575us; 576us; 675us; 676us; 677us; 678us; 2us; 574us; 575us; 6us; 574us; 575us; 675us; 676us; 677us; 678us; 2us; 574us; 575us; 4us; 574us; 575us; 676us; 677us; 1us; 574us; 3us; 574us; 676us; 677us; 1us; 575us; 1us; 576us; 1us; 577us; 1us; 577us; 1us; 578us; 1us; 578us; 2us; 579us; 580us; 5us; 579us; 580us; 668us; 669us; 670us; 1us; 580us; 6us; 581us; 584us; 585us; 586us; 588us; 591us; 1us; 582us; 6us; 582us; 584us; 585us; 586us; 588us; 591us; 6us; 583us; 584us; 585us; 586us; 588us; 591us; 6us; 584us; 584us; 585us; 586us; 588us; 591us; 6us; 584us; 585us; 585us; 586us; 588us; 591us; 6us; 584us; 585us; 586us; 587us; 588us; 591us; 1us; 584us; 1us; 585us; 1us; 586us; 1us; 586us; 1us; 587us; 2us; 587us; 801us; 1us; 588us; 1us; 588us; 1us; 589us; 1us; 589us; 1us; 589us; 1us; 590us; 2us; 590us; 817us; 1us; 590us; 1us; 591us; 1us; 591us; 1us; 592us; 1us; 593us; 3us; 594us; 595us; 596us; 2us; 594us; 595us; 1us; 594us; 1us; 595us; 1us; 596us; 1us; 596us; 1us; 597us; 1us; 598us; 1us; 599us; 5us; 600us; 601us; 797us; 799us; 800us; 1us; 600us; 1us; 600us; 1us; 600us; 1us; 600us; 1us; 601us; 1us; 601us; 5us; 602us; 603us; 604us; 605us; 606us; 1us; 602us; 1us; 602us; 4us; 603us; 604us; 605us; 606us; 1us; 603us; 3us; 604us; 605us; 606us; 3us; 604us; 605us; 606us; 1us; 604us; 2us; 605us; 606us; 2us; 605us; 606us; 1us; 605us; 1us; 606us; 1us; 606us; 1us; 606us; 2us; 607us; 608us; 1us; 609us; 1us; 610us; 1us; 611us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 4us; 620us; 621us; 622us; 623us; 2us; 620us; 621us; 1us; 620us; 1us; 621us; 1us; 622us; 1us; 622us; 1us; 623us; 3us; 624us; 625us; 626us; 4us; 624us; 625us; 626us; 826us; 2us; 624us; 625us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 626us; 3us; 627us; 628us; 629us; 2us; 627us; 628us; 1us; 627us; 1us; 628us; 1us; 629us; 1us; 629us; 4us; 630us; 631us; 632us; 633us; 8us; 630us; 631us; 632us; 633us; 639us; 797us; 799us; 800us; 7us; 630us; 631us; 632us; 633us; 797us; 799us; 800us; 2us; 630us; 631us; 1us; 630us; 1us; 631us; 1us; 632us; 1us; 633us; 1us; 635us; 1us; 635us; 1us; 636us; 1us; 636us; 1us; 636us; 1us; 636us; 1us; 636us; 1us; 636us; 1us; 637us; 1us; 638us; 2us; 638us; 639us; 1us; 639us; 1us; 639us; 1us; 639us; 3us; 640us; 641us; 642us; 2us; 640us; 641us; 1us; 640us; 1us; 641us; 1us; 642us; 1us; 642us; 1us; 643us; 1us; 644us; 1us; 645us; 1us; 646us; 1us; 648us; 1us; 649us; 2us; 650us; 651us; 1us; 651us; 1us; 652us; 1us; 652us; 3us; 653us; 654us; 655us; 1us; 654us; 1us; 655us; 1us; 656us; 1us; 656us; 1us; 660us; 1us; 667us; 1us; 667us; 1us; 667us; 1us; 667us; 2us; 667us; 671us; 1us; 667us; 1us; 668us; 1us; 668us; 2us; 668us; 671us; 1us; 668us; 1us; 669us; 3us; 669us; 795us; 796us; 1us; 669us; 1us; 669us; 2us; 669us; 671us; 1us; 669us; 1us; 670us; 3us; 670us; 795us; 796us; 1us; 670us; 1us; 670us; 2us; 670us; 671us; 1us; 670us; 1us; 670us; 2us; 671us; 867us; 3us; 671us; 795us; 796us; 1us; 671us; 1us; 671us; 2us; 673us; 674us; 1us; 673us; 1us; 673us; 1us; 673us; 1us; 674us; 1us; 674us; 1us; 676us; 1us; 679us; 2us; 681us; 683us; 1us; 681us; 1us; 682us; 1us; 682us; 1us; 682us; 1us; 683us; 1us; 683us; 1us; 684us; 1us; 684us; 1us; 686us; 1us; 686us; 1us; 687us; 1us; 687us; 1us; 688us; 4us; 688us; 732us; 733us; 734us; 1us; 688us; 1us; 688us; 1us; 688us; 1us; 689us; 1us; 690us; 2us; 691us; 692us; 2us; 691us; 692us; 2us; 691us; 692us; 1us; 691us; 1us; 692us; 3us; 693us; 694us; 695us; 3us; 693us; 694us; 695us; 3us; 693us; 694us; 695us; 1us; 693us; 1us; 693us; 1us; 694us; 1us; 694us; 1us; 695us; 1us; 696us; 1us; 696us; 1us; 696us; 2us; 697us; 698us; 2us; 697us; 698us; 2us; 697us; 698us; 1us; 697us; 1us; 698us; 1us; 698us; 2us; 699us; 700us; 1us; 700us; 2us; 701us; 702us; 1us; 702us; 1us; 704us; 1us; 704us; 2us; 705us; 706us; 1us; 705us; 1us; 705us; 2us; 707us; 708us; 1us; 707us; 1us; 707us; 2us; 709us; 710us; 1us; 709us; 1us; 709us; 3us; 711us; 712us; 713us; 5us; 711us; 713us; 732us; 733us; 734us; 1us; 711us; 4us; 711us; 732us; 733us; 734us; 1us; 712us; 1us; 712us; 1us; 712us; 4us; 712us; 732us; 733us; 734us; 5us; 714us; 716us; 732us; 733us; 734us; 1us; 714us; 4us; 714us; 732us; 733us; 734us; 1us; 715us; 1us; 715us; 1us; 715us; 4us; 715us; 732us; 733us; 734us; 2us; 717us; 718us; 1us; 717us; 1us; 717us; 6us; 719us; 721us; 722us; 732us; 733us; 734us; 1us; 719us; 1us; 719us; 1us; 720us; 1us; 720us; 1us; 721us; 1us; 721us; 6us; 723us; 724us; 725us; 732us; 733us; 734us; 1us; 723us; 1us; 723us; 1us; 724us; 1us; 724us; 5us; 726us; 727us; 732us; 733us; 734us; 1us; 726us; 1us; 726us; 3us; 728us; 795us; 796us; 1us; 729us; 2us; 729us; 737us; 3us; 729us; 737us; 754us; 2us; 730us; 731us; 3us; 730us; 731us; 766us; 1us; 730us; 1us; 730us; 6us; 732us; 733us; 734us; 749us; 750us; 751us; 1us; 732us; 2us; 732us; 749us; 1us; 733us; 2us; 733us; 750us; 1us; 733us; 2us; 733us; 750us; 1us; 734us; 2us; 734us; 751us; 5us; 735us; 752us; 762us; 763us; 765us; 4us; 735us; 762us; 763us; 765us; 1us; 735us; 2us; 735us; 752us; 1us; 735us; 2us; 735us; 752us; 1us; 735us; 2us; 735us; 752us; 1us; 736us; 1us; 737us; 2us; 737us; 754us; 1us; 737us; 2us; 737us; 754us; 3us; 738us; 755us; 761us; 2us; 738us; 761us; 1us; 738us; 2us; 738us; 755us; 1us; 738us; 2us; 738us; 755us; 4us; 739us; 740us; 741us; 742us; 1us; 739us; 3us; 740us; 741us; 742us; 1us; 740us; 2us; 741us; 742us; 1us; 741us; 1us; 742us; 1us; 742us; 3us; 743us; 762us; 763us; 1us; 743us; 1us; 743us; 2us; 743us; 744us; 2us; 744us; 773us; 1us; 744us; 1us; 744us; 8us; 746us; 747us; 748us; 756us; 757us; 758us; 767us; 768us; 5us; 746us; 747us; 748us; 767us; 768us; 2us; 747us; 748us; 4us; 747us; 748us; 757us; 758us; 1us; 747us; 2us; 747us; 757us; 1us; 748us; 2us; 748us; 758us; 1us; 748us; 2us; 748us; 758us; 1us; 753us; 1us; 759us; 3us; 759us; 767us; 768us; 1us; 760us; 1us; 761us; 3us; 762us; 763us; 765us; 2us; 762us; 763us; 1us; 762us; 1us; 763us; 1us; 764us; 1us; 765us; 1us; 765us; 1us; 766us; 2us; 767us; 768us; 4us; 767us; 768us; 795us; 796us; 1us; 768us; 1us; 769us; 1us; 770us; 1us; 770us; 3us; 771us; 772us; 773us; 1us; 771us; 2us; 772us; 773us; 1us; 772us; 1us; 773us; 1us; 773us; 1us; 773us; 2us; 774us; 775us; 3us; 774us; 786us; 787us; 1us; 774us; 1us; 775us; 1us; 775us; 3us; 776us; 795us; 796us; 1us; 777us; 1us; 778us; 3us; 778us; 786us; 787us; 1us; 778us; 3us; 779us; 780us; 781us; 2us; 780us; 781us; 1us; 780us; 1us; 781us; 1us; 781us; 1us; 782us; 2us; 783us; 784us; 1us; 784us; 1us; 785us; 3us; 786us; 786us; 787us; 3us; 786us; 787us; 787us; 3us; 786us; 787us; 788us; 1us; 786us; 1us; 787us; 1us; 788us; 1us; 789us; 1us; 789us; 1us; 790us; 1us; 791us; 2us; 791us; 804us; 1us; 791us; 1us; 792us; 1us; 793us; 1us; 794us; 2us; 795us; 796us; 1us; 795us; 1us; 796us; 3us; 797us; 799us; 800us; 1us; 797us; 1us; 797us; 1us; 798us; 3us; 799us; 800us; 829us; 3us; 799us; 800us; 829us; 1us; 799us; 1us; 800us; 1us; 800us; 1us; 800us; 1us; 801us; 1us; 802us; 1us; 803us; 1us; 804us; 1us; 805us; 1us; 806us; 1us; 807us; 1us; 808us; 1us; 809us; 1us; 810us; 1us; 811us; 1us; 812us; 1us; 813us; 1us; 814us; 1us; 815us; 1us; 816us; 1us; 817us; 1us; 818us; 1us; 819us; 1us; 820us; 1us; 821us; 1us; 822us; 1us; 823us; 2us; 824us; 825us; 1us; 825us; 1us; 826us; 1us; 826us; 1us; 827us; 1us; 828us; 1us; 828us; 1us; 829us; 1us; 830us; 1us; 831us; 3us; 832us; 834us; 835us; 1us; 833us; 2us; 834us; 835us; 1us; 834us; 1us; 835us; 1us; 836us; 1us; 837us; 1us; 838us; 1us; 839us; 2us; 840us; 841us; 1us; 841us; 1us; 842us; 1us; 843us; 2us; 844us; 845us; 1us; 845us; 1us; 848us; 1us; 848us; 2us; 850us; 852us; 2us; 851us; 853us; 1us; 852us; 1us; 853us; 1us; 854us; 1us; 855us; 1us; 856us; 1us; 857us; 1us; 858us; 1us; 859us; 1us; 861us; 1us; 863us; 1us; 865us; 1us; 867us; 1us; 869us; 1us; 871us; 1us; 873us; 1us; 875us; 1us; 877us; 1us; 878us; 1us; 879us; 1us; 880us; 1us; 881us; 1us; 882us; 1us; 883us; 1us; 884us; 1us; 885us; 1us; 886us; 1us; 888us; 1us; 889us; 1us; 891us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 25us; 27us; 29us; 31us; 33us; 35us; 37us; 39us; 42us; 44us; 47us; 49us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 69us; 71us; 79us; 87us; 113us; 115us; 118us; 120us; 122us; 124us; 128us; 130us; 133us; 135us; 137us; 139us; 143us; 145us; 147us; 149us; 153us; 155us; 159us; 162us; 164us; 167us; 169us; 171us; 173us; 175us; 177us; 180us; 182us; 185us; 187us; 189us; 191us; 193us; 195us; 202us; 209us; 213us; 215us; 217us; 228us; 239us; 242us; 244us; 246us; 248us; 252us; 255us; 257us; 259us; 261us; 265us; 267us; 269us; 272us; 275us; 278us; 280us; 282us; 284us; 286us; 290us; 293us; 295us; 297us; 299us; 303us; 305us; 307us; 309us; 319us; 329us; 357us; 360us; 362us; 364us; 367us; 371us; 375us; 380us; 382us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 404us; 411us; 413us; 417us; 419us; 425us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 447us; 451us; 453us; 457us; 462us; 464us; 466us; 469us; 471us; 473us; 475us; 477us; 481us; 485us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 510us; 516us; 519us; 522us; 524us; 526us; 528us; 530us; 532us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 607us; 609us; 611us; 614us; 616us; 618us; 620us; 622us; 625us; 627us; 631us; 633us; 635us; 637us; 639us; 643us; 645us; 647us; 649us; 651us; 654us; 656us; 658us; 660us; 663us; 665us; 667us; 670us; 672us; 674us; 676us; 680us; 682us; 684us; 686us; 688us; 690us; 692us; 694us; 696us; 698us; 700us; 702us; 704us; 706us; 708us; 712us; 715us; 717us; 719us; 721us; 723us; 726us; 729us; 731us; 733us; 736us; 739us; 741us; 743us; 746us; 749us; 751us; 753us; 755us; 757us; 759us; 761us; 765us; 770us; 772us; 774us; 776us; 778us; 780us; 783us; 785us; 787us; 789us; 792us; 795us; 797us; 799us; 802us; 804us; 806us; 814us; 825us; 833us; 844us; 846us; 848us; 850us; 852us; 854us; 856us; 858us; 860us; 862us; 864us; 869us; 871us; 876us; 878us; 880us; 882us; 884us; 886us; 888us; 890us; 892us; 894us; 896us; 898us; 900us; 902us; 904us; 906us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 925us; 927us; 929us; 931us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 967us; 970us; 972us; 974us; 977us; 979us; 982us; 985us; 987us; 989us; 992us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1018us; 1021us; 1023us; 1025us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1047us; 1050us; 1053us; 1055us; 1057us; 1059us; 1062us; 1064us; 1075us; 1089us; 1100us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1149us; 1151us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1177us; 1179us; 1181us; 1183us; 1185us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1218us; 1221us; 1223us; 1225us; 1227us; 1229us; 1231us; 1233us; 1235us; 1237us; 1240us; 1242us; 1244us; 1247us; 1250us; 1252us; 1254us; 1256us; 1259us; 1262us; 1264us; 1267us; 1271us; 1274us; 1276us; 1278us; 1280us; 1282us; 1284us; 1288us; 1292us; 1294us; 1296us; 1298us; 1302us; 1305us; 1307us; 1309us; 1311us; 1313us; 1315us; 1317us; 1319us; 1321us; 1323us; 1327us; 1332us; 1334us; 1338us; 1340us; 1342us; 1344us; 1347us; 1349us; 1352us; 1356us; 1358us; 1361us; 1363us; 1365us; 1367us; 1369us; 1371us; 1373us; 1375us; 1377us; 1379us; 1381us; 1383us; 1385us; 1387us; 1389us; 1391us; 1394us; 1396us; 1399us; 1402us; 1405us; 1407us; 1409us; 1411us; 1413us; 1415us; 1417us; 1419us; 1428us; 1430us; 1432us; 1440us; 1442us; 1446us; 1448us; 1450us; 1452us; 1454us; 1456us; 1458us; 1460us; 1462us; 1464us; 1466us; 1468us; 1470us; 1472us; 1474us; 1476us; 1478us; 1480us; 1482us; 1484us; 1486us; 1488us; 1490us; 1493us; 1495us; 1498us; 1500us; 1502us; 1507us; 1512us; 1517us; 1519us; 1521us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1537us; 1539us; 1545us; 1547us; 1549us; 1551us; 1553us; 1555us; 1561us; 1563us; 1566us; 1569us; 1572us; 1574us; 1576us; 1578us; 1580us; 1586us; 1588us; 1590us; 1593us; 1596us; 1598us; 1600us; 1602us; 1604us; 1606us; 1608us; 1610us; 1612us; 1614us; 1616us; 1618us; 1620us; 1622us; 1624us; 1626us; 1628us; 1630us; 1632us; 1634us; 1637us; 1639us; 1641us; 1643us; 1647us; 1649us; 1653us; 1655us; 1657us; 1659us; 1661us; 1663us; 1665us; 1667us; 1669us; 1671us; 1673us; 1675us; 1677us; 1679us; 1681us; 1683us; 1685us; 1687us; 1689us; 1691us; 1693us; 1695us; 1697us; 1699us; 1701us; 1703us; 1705us; 1707us; 1710us; 1713us; 1715us; 1717us; 1719us; 1721us; 1724us; 1730us; 1732us; 1736us; 1741us; 1743us; 1745us; 1747us; 1749us; 1751us; 1753us; 1756us; 1758us; 1761us; 1763us; 1765us; 1767us; 1769us; 1771us; 1773us; 1775us; 1777us; 1780us; 1783us; 1786us; 1789us; 1792us; 1794us; 1796us; 1799us; 1802us; 1804us; 1806us; 1808us; 1810us; 1813us; 1815us; 1817us; 1820us; 1822us; 1824us; 1826us; 1828us; 1830us; 1833us; 1835us; 1837us; 1839us; 1841us; 1843us; 1845us; 1847us; 1849us; 1851us; 1853us; 1855us; 1857us; 1859us; 1861us; 1863us; 1865us; 1867us; 1870us; 1872us; 1874us; 1876us; 1878us; 1881us; 1883us; 1885us; 1892us; 1894us; 1896us; 1898us; 1901us; 1905us; 1907us; 1909us; 1911us; 1913us; 1915us; 1921us; 1924us; 1926us; 1928us; 1930us; 1933us; 1935us; 1937us; 1944us; 1951us; 1958us; 1965us; 1972us; 1979us; 1986us; 1994us; 1996us; 1998us; 2000us; 2002us; 2005us; 2008us; 2010us; 2012us; 2014us; 2016us; 2018us; 2024us; 2028us; 2030us; 2032us; 2034us; 2036us; 2038us; 2040us; 2044us; 2046us; 2051us; 2053us; 2055us; 2057us; 2059us; 2061us; 2063us; 2065us; 2067us; 2069us; 2071us; 2073us; 2075us; 2077us; 2079us; 2081us; 2083us; 2085us; 2087us; 2089us; 2092us; 2094us; 2096us; 2098us; 2100us; 2102us; 2104us; 2112us; 2115us; 2117us; 2119us; 2122us; 2124us; 2126us; 2134us; 2142us; 2150us; 2158us; 2166us; 2174us; 2182us; 2190us; 2198us; 2207us; 2219us; 2227us; 2229us; 2231us; 2233us; 2236us; 2239us; 2241us; 2243us; 2245us; 2247us; 2249us; 2251us; 2253us; 2255us; 2257us; 2259us; 2262us; 2264us; 2267us; 2269us; 2273us; 2275us; 2277us; 2280us; 2282us; 2285us; 2288us; 2290us; 2292us; 2294us; 2296us; 2298us; 2300us; 2326us; 2329us; 2331us; 2334us; 2336us; 2338us; 2368us; 2400us; 2432us; 2435us; 2437us; 2439us; 2441us; 2443us; 2445us; 2447us; 2449us; 2455us; 2457us; 2460us; 2462us; 2465us; 2468us; 2470us; 2472us; 2477us; 2479us; 2481us; 2484us; 2486us; 2488us; 2490us; 2492us; 2494us; 2497us; 2500us; 2502us; 2504us; 2508us; 2512us; 2514us; 2516us; 2518us; 2520us; 2524us; 2551us; 2553us; 2555us; 2557us; 2559us; 2585us; 2588us; 2614us; 2616us; 2618us; 2621us; 2623us; 2629us; 2658us; 2662us; 2665us; 2667us; 2669us; 2671us; 2673us; 2675us; 2677us; 2679us; 2689us; 2694us; 2697us; 2699us; 2701us; 2703us; 2705us; 2707us; 2711us; 2715us; 2718us; 2720us; 2722us; 2724us; 2726us; 2728us; 2730us; 2732us; 2734us; 2736us; 2738us; 2740us; 2766us; 2768us; 2794us; 2796us; 2798us; 2800us; 2802us; 2804us; 2806us; 2809us; 2812us; 2815us; 2818us; 2821us; 2823us; 2825us; 2827us; 2829us; 2831us; 2833us; 2835us; 2837us; 2839us; 2841us; 2843us; 2845us; 2847us; 2849us; 2875us; 2901us; 2927us; 2953us; 2979us; 3005us; 3031us; 3057us; 3083us; 3109us; 3135us; 3161us; 3187us; 3213us; 3239us; 3265us; 3291us; 3317us; 3343us; 3369us; 3395us; 3421us; 3447us; 3474us; 3500us; 3526us; 3553us; 3579us; 3605us; 3633us; 3660us; 3686us; 3712us; 3738us; 3740us; 3742us; 3744us; 3746us; 3748us; 3750us; 3752us; 3755us; 3757us; 3759us; 3762us; 3764us; 3766us; 3768us; 3770us; 3772us; 3774us; 3776us; 3778us; 3780us; 3782us; 3784us; 3786us; 3788us; 3790us; 3792us; 3794us; 3796us; 3798us; 3800us; 3802us; 3804us; 3806us; 3808us; 3810us; 3812us; 3815us; 3818us; 3820us; 3822us; 3824us; 3827us; 3829us; 3831us; 3833us; 3835us; 3840us; 3845us; 3848us; 3850us; 3852us; 3854us; 3856us; 3858us; 3860us; 3862us; 3864us; 3866us; 3869us; 3872us; 3875us; 3877us; 3879us; 3881us; 3884us; 3887us; 3890us; 3892us; 3894us; 3897us; 3899us; 3901us; 3903us; 3905us; 3907us; 3910us; 3912us; 3914us; 3917us; 3919us; 3921us; 3924us; 3926us; 3928us; 3931us; 3933us; 3935us; 3938us; 3940us; 3942us; 3945us; 3947us; 3951us; 3959us; 3962us; 3969us; 3972us; 3977us; 3979us; 3983us; 3985us; 3987us; 3989us; 3991us; 3993us; 3995us; 3998us; 4004us; 4006us; 4013us; 4015us; 4022us; 4029us; 4036us; 4043us; 4050us; 4052us; 4054us; 4056us; 4058us; 4060us; 4063us; 4065us; 4067us; 4069us; 4071us; 4073us; 4075us; 4078us; 4080us; 4082us; 4084us; 4086us; 4088us; 4092us; 4095us; 4097us; 4099us; 4101us; 4103us; 4105us; 4107us; 4109us; 4115us; 4117us; 4119us; 4121us; 4123us; 4125us; 4127us; 4133us; 4135us; 4137us; 4142us; 4144us; 4148us; 4152us; 4154us; 4157us; 4160us; 4162us; 4164us; 4166us; 4168us; 4171us; 4173us; 4175us; 4177us; 4179us; 4181us; 4183us; 4185us; 4187us; 4189us; 4191us; 4193us; 4198us; 4201us; 4203us; 4205us; 4207us; 4209us; 4211us; 4215us; 4220us; 4223us; 4225us; 4227us; 4229us; 4231us; 4235us; 4238us; 4240us; 4242us; 4244us; 4246us; 4251us; 4260us; 4268us; 4271us; 4273us; 4275us; 4277us; 4279us; 4281us; 4283us; 4285us; 4287us; 4289us; 4291us; 4293us; 4295us; 4297us; 4299us; 4302us; 4304us; 4306us; 4308us; 4312us; 4315us; 4317us; 4319us; 4321us; 4323us; 4325us; 4327us; 4329us; 4331us; 4333us; 4335us; 4338us; 4340us; 4342us; 4344us; 4348us; 4350us; 4352us; 4354us; 4356us; 4358us; 4360us; 4362us; 4364us; 4366us; 4369us; 4371us; 4373us; 4375us; 4378us; 4380us; 4382us; 4386us; 4388us; 4390us; 4393us; 4395us; 4397us; 4401us; 4403us; 4405us; 4408us; 4410us; 4412us; 4415us; 4419us; 4421us; 4423us; 4426us; 4428us; 4430us; 4432us; 4434us; 4436us; 4438us; 4440us; 4443us; 4445us; 4447us; 4449us; 4451us; 4453us; 4455us; 4457us; 4459us; 4461us; 4463us; 4465us; 4467us; 4469us; 4474us; 4476us; 4478us; 4480us; 4482us; 4484us; 4487us; 4490us; 4493us; 4495us; 4497us; 4501us; 4505us; 4509us; 4511us; 4513us; 4515us; 4517us; 4519us; 4521us; 4523us; 4525us; 4528us; 4531us; 4534us; 4536us; 4538us; 4540us; 4543us; 4545us; 4548us; 4550us; 4552us; 4554us; 4557us; 4559us; 4561us; 4564us; 4566us; 4568us; 4571us; 4573us; 4575us; 4579us; 4585us; 4587us; 4592us; 4594us; 4596us; 4598us; 4603us; 4609us; 4611us; 4616us; 4618us; 4620us; 4622us; 4627us; 4630us; 4632us; 4634us; 4641us; 4643us; 4645us; 4647us; 4649us; 4651us; 4653us; 4660us; 4662us; 4664us; 4666us; 4668us; 4674us; 4676us; 4678us; 4682us; 4684us; 4687us; 4691us; 4694us; 4698us; 4700us; 4702us; 4709us; 4711us; 4714us; 4716us; 4719us; 4721us; 4724us; 4726us; 4729us; 4735us; 4740us; 4742us; 4745us; 4747us; 4750us; 4752us; 4755us; 4757us; 4759us; 4762us; 4764us; 4767us; 4771us; 4774us; 4776us; 4779us; 4781us; 4784us; 4789us; 4791us; 4795us; 4797us; 4800us; 4802us; 4804us; 4806us; 4810us; 4812us; 4814us; 4817us; 4820us; 4822us; 4824us; 4833us; 4839us; 4842us; 4847us; 4849us; 4852us; 4854us; 4857us; 4859us; 4862us; 4864us; 4866us; 4870us; 4872us; 4874us; 4878us; 4881us; 4883us; 4885us; 4887us; 4889us; 4891us; 4893us; 4896us; 4901us; 4903us; 4905us; 4907us; 4909us; 4913us; 4915us; 4918us; 4920us; 4922us; 4924us; 4926us; 4929us; 4933us; 4935us; 4937us; 4939us; 4943us; 4945us; 4947us; 4951us; 4953us; 4957us; 4960us; 4962us; 4964us; 4966us; 4968us; 4971us; 4973us; 4975us; 4979us; 4983us; 4987us; 4989us; 4991us; 4993us; 4995us; 4997us; 4999us; 5001us; 5004us; 5006us; 5008us; 5010us; 5012us; 5015us; 5017us; 5019us; 5023us; 5025us; 5027us; 5029us; 5033us; 5037us; 5039us; 5041us; 5043us; 5045us; 5047us; 5049us; 5051us; 5053us; 5055us; 5057us; 5059us; 5061us; 5063us; 5065us; 5067us; 5069us; 5071us; 5073us; 5075us; 5077us; 5079us; 5081us; 5083us; 5085us; 5087us; 5089us; 5091us; 5094us; 5096us; 5098us; 5100us; 5102us; 5104us; 5106us; 5108us; 5110us; 5112us; 5116us; 5118us; 5121us; 5123us; 5125us; 5127us; 5129us; 5131us; 5133us; 5136us; 5138us; 5140us; 5142us; 5145us; 5147us; 5149us; 5151us; 5154us; 5157us; 5159us; 5161us; 5163us; 5165us; 5167us; 5169us; 5171us; 5173us; 5175us; 5177us; 5179us; 5181us; 5183us; 5185us; 5187us; 5189us; 5191us; 5193us; 5195us; 5197us; 5199us; 5201us; 5203us; 5205us; 5207us; 5209us; 5211us; 5213us; |]
let _fsyacc_action_rows = 1572
let _fsyacc_actionTableElements = [|12us; 16437us; 19us; 81us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 41us; 0us; 49152us; 78us; 16446us; 19us; 96us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 47us; 0us; 49152us; 7us; 16493us; 10us; 17us; 18us; 8us; 59us; 16us; 64us; 195us; 75us; 7us; 79us; 9us; 90us; 609us; 0us; 49152us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 176us; 10us; 0us; 16394us; 2us; 16390us; 177us; 13us; 178us; 12us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 0us; 16398us; 4us; 32768us; 10us; 17us; 18us; 1536us; 59us; 16us; 75us; 1535us; 0us; 16399us; 4us; 32768us; 10us; 17us; 18us; 1536us; 59us; 16us; 75us; 1535us; 0us; 16400us; 4us; 32768us; 10us; 17us; 18us; 1536us; 59us; 16us; 75us; 1535us; 0us; 16401us; 5us; 16493us; 10us; 17us; 59us; 16us; 64us; 195us; 79us; 9us; 90us; 609us; 0us; 16402us; 5us; 16493us; 10us; 17us; 59us; 16us; 64us; 195us; 79us; 9us; 90us; 609us; 0us; 16403us; 5us; 16493us; 10us; 17us; 59us; 16us; 64us; 195us; 79us; 9us; 90us; 609us; 0us; 16404us; 12us; 16405us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 90us; 609us; 97us; 16493us; 108us; 16493us; 123us; 16493us; 135us; 16493us; 147us; 16493us; 0us; 16406us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 70us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 97us; 130us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 108us; 598us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 123us; 615us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 135us; 49us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 24us; 16407us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 0us; 16408us; 2us; 32768us; 10us; 38us; 180us; 39us; 0us; 16409us; 1us; 32768us; 10us; 40us; 0us; 16410us; 4us; 16436us; 10us; 42us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 16411us; 2us; 32768us; 10us; 44us; 180us; 45us; 0us; 16412us; 1us; 32768us; 10us; 46us; 0us; 16413us; 4us; 16451us; 10us; 48us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 16414us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16415us; 68us; 1478us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16416us; 68us; 1478us; 2us; 16417us; 64us; 195us; 136us; 16493us; 0us; 16418us; 2us; 16420us; 64us; 195us; 136us; 16493us; 0us; 16419us; 1us; 32768us; 136us; 52us; 1us; 17248us; 61us; 1552us; 12us; 16437us; 19us; 81us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 89us; 0us; 16421us; 2us; 16422us; 64us; 195us; 136us; 16493us; 0us; 16423us; 2us; 16425us; 64us; 195us; 136us; 16493us; 0us; 16424us; 1us; 32768us; 136us; 52us; 1us; 17248us; 61us; 1552us; 78us; 16446us; 19us; 96us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 111us; 0us; 16426us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 4us; 32768us; 97us; 215us; 98us; 171us; 108us; 598us; 135us; 49us; 14us; 16437us; 19us; 81us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 61us; 1568us; 64us; 195us; 69us; 1567us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 89us; 0us; 16427us; 0us; 16428us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 70us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 97us; 130us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 108us; 598us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 123us; 615us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 135us; 49us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 79us; 16446us; 19us; 96us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 61us; 135us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 111us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 11us; 16437us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 86us; 3us; 32768us; 10us; 860us; 14us; 83us; 180us; 858us; 1us; 17250us; 18us; 1553us; 0us; 16432us; 0us; 16433us; 4us; 16436us; 14us; 87us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 16434us; 0us; 16435us; 3us; 16436us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 3us; 17233us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 11us; 16440us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 93us; 0us; 16438us; 3us; 32768us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 4us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 180us; 93us; 0us; 16439us; 77us; 16446us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 101us; 3us; 32768us; 10us; 860us; 14us; 98us; 180us; 858us; 1us; 17250us; 18us; 1553us; 0us; 16441us; 0us; 16442us; 4us; 16451us; 14us; 102us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 70us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 97us; 130us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 108us; 598us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 123us; 615us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 135us; 49us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 27us; 16449us; 18us; 1532us; 53us; 1018us; 54us; 1011us; 59us; 1531us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 75us; 1530us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 77us; 16448us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 111us; 0us; 16447us; 0us; 16450us; 3us; 16451us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 4us; 16451us; 14us; 148us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 4us; 16451us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 128us; 155us; 17us; 16454us; 18us; 1532us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 59us; 1531us; 64us; 195us; 75us; 1530us; 79us; 9us; 90us; 609us; 97us; 16493us; 108us; 16493us; 123us; 16493us; 135us; 16493us; 147us; 16493us; 180us; 118us; 0us; 16452us; 77us; 16455us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 111us; 0us; 16453us; 3us; 32768us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 4us; 16493us; 64us; 195us; 79us; 9us; 90us; 609us; 180us; 111us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 7us; 32768us; 29us; 617us; 33us; 630us; 97us; 130us; 108us; 598us; 123us; 615us; 135us; 49us; 147us; 611us; 0us; 16459us; 1us; 16459us; 114us; 862us; 0us; 16460us; 67us; 16460us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 867us; 0us; 16461us; 1us; 16493us; 64us; 195us; 1us; 16550us; 117us; 308us; 0us; 16462us; 0us; 16463us; 1us; 32768us; 61us; 135us; 5us; 32768us; 19us; 142us; 38us; 1476us; 48us; 1563us; 122us; 1564us; 176us; 1475us; 0us; 16464us; 0us; 16465us; 8us; 16493us; 38us; 1476us; 49us; 1565us; 64us; 195us; 79us; 9us; 90us; 169us; 122us; 1566us; 176us; 1475us; 180us; 93us; 2us; 32768us; 14us; 140us; 68us; 1478us; 0us; 16466us; 1us; 16467us; 68us; 1478us; 6us; 16493us; 48us; 1563us; 64us; 195us; 79us; 9us; 90us; 609us; 122us; 1564us; 180us; 112us; 1us; 32768us; 14us; 144us; 0us; 16468us; 3us; 32768us; 10us; 860us; 14us; 146us; 180us; 858us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 1us; 16473us; 68us; 1478us; 77us; 16446us; 21us; 16493us; 22us; 16493us; 26us; 16493us; 27us; 16493us; 28us; 16493us; 29us; 16493us; 33us; 16493us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 38us; 16493us; 53us; 16493us; 62us; 16493us; 63us; 16493us; 64us; 195us; 65us; 16493us; 66us; 16493us; 77us; 16493us; 79us; 9us; 80us; 16493us; 81us; 16493us; 83us; 16493us; 87us; 16493us; 89us; 16493us; 90us; 609us; 95us; 16493us; 96us; 16493us; 97us; 16493us; 102us; 16493us; 103us; 16493us; 104us; 16493us; 106us; 16493us; 108us; 16493us; 109us; 16493us; 110us; 16493us; 111us; 16493us; 112us; 16493us; 113us; 16493us; 116us; 16493us; 119us; 16493us; 120us; 16493us; 122us; 16493us; 123us; 16493us; 131us; 16493us; 132us; 16493us; 133us; 16493us; 135us; 16493us; 139us; 16493us; 140us; 16493us; 143us; 16493us; 144us; 16493us; 147us; 16493us; 148us; 16493us; 149us; 16493us; 150us; 16493us; 151us; 16493us; 152us; 16493us; 153us; 16493us; 154us; 16493us; 155us; 16493us; 156us; 16493us; 157us; 16493us; 158us; 16493us; 159us; 16493us; 160us; 16493us; 161us; 16493us; 162us; 16493us; 164us; 16493us; 165us; 16493us; 167us; 16493us; 168us; 16493us; 171us; 16493us; 176us; 16493us; 177us; 16493us; 178us; 16493us; 179us; 16493us; 180us; 113us; 3us; 32768us; 10us; 860us; 128us; 153us; 180us; 858us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 6us; 16493us; 16us; 16571us; 17us; 16571us; 19us; 347us; 64us; 195us; 128us; 16571us; 180us; 355us; 3us; 32768us; 16us; 1545us; 17us; 1546us; 128us; 1547us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 4us; 32768us; 97us; 215us; 98us; 171us; 108us; 598us; 135us; 49us; 2us; 32768us; 61us; 1568us; 69us; 1567us; 5us; 32768us; 19us; 138us; 38us; 1476us; 49us; 1565us; 122us; 1566us; 176us; 1475us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16485us; 68us; 1478us; 1us; 16493us; 64us; 195us; 1us; 17258us; 99us; 1557us; 1us; 17260us; 105us; 1558us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 2us; 16651us; 30us; 1571us; 145us; 17276us; 1us; 32768us; 69us; 178us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 1us; 16487us; 61us; 181us; 0us; 16486us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 24us; 16488us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 1us; 32768us; 14us; 184us; 0us; 16489us; 11us; 16437us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 89us; 1us; 32768us; 128us; 187us; 1us; 32768us; 14us; 188us; 0us; 16490us; 11us; 16437us; 35us; 16493us; 36us; 16493us; 37us; 16493us; 64us; 195us; 79us; 9us; 90us; 169us; 97us; 16493us; 98us; 16493us; 108us; 16493us; 135us; 16493us; 180us; 89us; 1us; 32768us; 128us; 191us; 0us; 16491us; 0us; 16492us; 1us; 16494us; 64us; 195us; 0us; 16495us; 5us; 32768us; 38us; 1476us; 97us; 212us; 135us; 211us; 148us; 214us; 176us; 1475us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 1us; 32768us; 47us; 198us; 1us; 17250us; 18us; 1553us; 0us; 16496us; 0us; 16497us; 5us; 17251us; 38us; 1476us; 97us; 212us; 135us; 211us; 148us; 214us; 176us; 1475us; 0us; 16498us; 3us; 17274us; 31us; 1570us; 32us; 1569us; 68us; 1478us; 26us; 17043us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16499us; 1us; 32768us; 69us; 207us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 3us; 17274us; 31us; 1570us; 32us; 1569us; 68us; 1478us; 26us; 17043us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16500us; 0us; 16501us; 0us; 16502us; 32us; 16503us; 18us; 17178us; 31us; 17178us; 32us; 17178us; 47us; 17178us; 63us; 17178us; 65us; 17178us; 68us; 17178us; 75us; 17178us; 83us; 17178us; 95us; 17178us; 109us; 17178us; 122us; 17178us; 133us; 17178us; 140us; 17178us; 150us; 17178us; 151us; 17178us; 152us; 17178us; 153us; 17178us; 154us; 17178us; 155us; 17178us; 156us; 17178us; 157us; 17178us; 158us; 17178us; 159us; 17178us; 160us; 17178us; 161us; 17178us; 162us; 17178us; 164us; 17178us; 165us; 17178us; 177us; 17178us; 178us; 17178us; 179us; 17178us; 0us; 16504us; 1us; 16493us; 64us; 195us; 0us; 16505us; 1us; 16507us; 117us; 218us; 1us; 16493us; 64us; 195us; 0us; 16506us; 2us; 16607us; 61us; 221us; 78us; 430us; 7us; 16493us; 19us; 224us; 41us; 473us; 48us; 475us; 64us; 195us; 100us; 474us; 122us; 249us; 137us; 235us; 0us; 16508us; 0us; 16509us; 10us; 16493us; 10us; 16527us; 14us; 16527us; 19us; 245us; 41us; 473us; 48us; 475us; 64us; 195us; 100us; 474us; 122us; 249us; 137us; 235us; 180us; 16527us; 1us; 17250us; 18us; 1553us; 3us; 16493us; 14us; 16527us; 64us; 195us; 78us; 16527us; 1us; 16607us; 78us; 430us; 1us; 32768us; 14us; 229us; 1us; 16607us; 78us; 430us; 0us; 16510us; 1us; 16607us; 78us; 430us; 0us; 16511us; 0us; 16512us; 0us; 16513us; 1us; 32768us; 107us; 236us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16514us; 0us; 16515us; 5us; 16493us; 10us; 16527us; 19us; 253us; 64us; 195us; 128us; 16527us; 180us; 243us; 3us; 32768us; 10us; 860us; 128us; 241us; 180us; 858us; 0us; 16516us; 0us; 16517us; 1us; 32768us; 128us; 244us; 0us; 16518us; 4us; 16493us; 10us; 16527us; 14us; 16527us; 64us; 195us; 180us; 16527us; 3us; 32768us; 10us; 860us; 14us; 247us; 180us; 858us; 0us; 16519us; 0us; 16520us; 5us; 16493us; 10us; 16527us; 19us; 253us; 64us; 195us; 128us; 16527us; 180us; 16527us; 3us; 32768us; 10us; 860us; 128us; 251us; 180us; 858us; 0us; 16521us; 0us; 16522us; 4us; 16493us; 10us; 16527us; 14us; 16527us; 64us; 195us; 180us; 16527us; 3us; 32768us; 10us; 860us; 14us; 255us; 180us; 858us; 0us; 16523us; 0us; 16524us; 0us; 16525us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 8us; 16493us; 10us; 16527us; 14us; 16527us; 16us; 16527us; 17us; 16527us; 64us; 195us; 78us; 16527us; 128us; 16527us; 180us; 16527us; 0us; 16526us; 3us; 32768us; 40us; 263us; 97us; 300us; 98us; 298us; 8us; 32768us; 27us; 621us; 29us; 617us; 33us; 630us; 40us; 263us; 97us; 411us; 98us; 403us; 123us; 615us; 147us; 611us; 0us; 16528us; 0us; 16529us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 1us; 16533us; 40us; 269us; 0us; 16534us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 0us; 16536us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 2us; 32768us; 17us; 274us; 180us; 275us; 0us; 16537us; 0us; 16538us; 1us; 16539us; 86us; 277us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 0us; 16540us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 10us; 32768us; 13us; 477us; 39us; 261us; 40us; 264us; 42us; 268us; 43us; 265us; 44us; 266us; 46us; 294us; 98us; 296us; 100us; 476us; 106us; 302us; 21us; 32768us; 13us; 477us; 38us; 1476us; 39us; 261us; 40us; 264us; 42us; 268us; 43us; 265us; 44us; 266us; 46us; 294us; 50us; 547us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 98us; 296us; 100us; 476us; 106us; 302us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 1us; 17258us; 99us; 1557us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 2us; 16651us; 30us; 1571us; 145us; 17276us; 1us; 32768us; 69us; 288us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 2us; 16535us; 23us; 272us; 78us; 270us; 1us; 16487us; 61us; 181us; 0us; 16541us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 16542us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 16543us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 1us; 17260us; 105us; 1558us; 0us; 16544us; 1us; 17260us; 105us; 1558us; 0us; 16545us; 1us; 16493us; 64us; 195us; 0us; 16546us; 1us; 32768us; 69us; 303us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16547us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 1us; 16654us; 76us; 507us; 0us; 16548us; 1us; 16493us; 64us; 195us; 1us; 16550us; 117us; 308us; 0us; 16549us; 34us; 16493us; 10us; 16551us; 13us; 16551us; 14us; 16551us; 16us; 16551us; 17us; 16551us; 18us; 16551us; 27us; 16551us; 29us; 16551us; 33us; 16551us; 39us; 16551us; 40us; 16551us; 42us; 16551us; 43us; 16551us; 44us; 16551us; 46us; 16551us; 59us; 16551us; 61us; 312us; 64us; 195us; 75us; 16551us; 78us; 156us; 79us; 16551us; 90us; 16551us; 97us; 16551us; 98us; 16551us; 100us; 16551us; 106us; 16551us; 108us; 16551us; 117us; 16551us; 123us; 16551us; 128us; 16551us; 135us; 16551us; 136us; 16551us; 147us; 16551us; 180us; 16551us; 6us; 16493us; 19us; 322us; 41us; 473us; 48us; 475us; 64us; 195us; 100us; 474us; 137us; 333us; 0us; 16552us; 0us; 16553us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 2us; 17274us; 31us; 1570us; 32us; 1569us; 1us; 32768us; 83us; 725us; 1us; 16611us; 118us; 440us; 1us; 32768us; 61us; 320us; 6us; 16493us; 19us; 322us; 41us; 473us; 48us; 475us; 64us; 195us; 100us; 474us; 137us; 333us; 0us; 16554us; 9us; 16493us; 10us; 16571us; 14us; 16571us; 19us; 343us; 41us; 473us; 48us; 475us; 64us; 195us; 100us; 474us; 137us; 333us; 180us; 355us; 1us; 17250us; 18us; 1553us; 4us; 16493us; 14us; 16571us; 64us; 195us; 78us; 16571us; 180us; 355us; 1us; 16605us; 78us; 427us; 1us; 32768us; 14us; 327us; 1us; 16605us; 78us; 427us; 0us; 16555us; 1us; 16605us; 78us; 427us; 0us; 16556us; 0us; 16557us; 0us; 16558us; 1us; 32768us; 107us; 334us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16559us; 0us; 16560us; 5us; 16493us; 10us; 16571us; 19us; 347us; 64us; 195us; 128us; 16571us; 180us; 341us; 3us; 32768us; 10us; 860us; 128us; 339us; 180us; 858us; 0us; 16561us; 0us; 16562us; 4us; 16493us; 10us; 16571us; 64us; 195us; 128us; 342us; 180us; 355us; 0us; 16563us; 4us; 16493us; 10us; 16571us; 14us; 16571us; 64us; 195us; 180us; 355us; 3us; 32768us; 10us; 860us; 14us; 346us; 180us; 858us; 0us; 16564us; 0us; 16565us; 4us; 16493us; 10us; 16571us; 14us; 16571us; 64us; 195us; 180us; 355us; 3us; 32768us; 10us; 860us; 14us; 350us; 180us; 858us; 0us; 16566us; 0us; 16567us; 0us; 16568us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 8us; 16493us; 10us; 16571us; 14us; 16571us; 16us; 16571us; 17us; 16571us; 64us; 195us; 78us; 16571us; 128us; 16571us; 180us; 355us; 0us; 16569us; 8us; 16493us; 10us; 16571us; 14us; 16571us; 16us; 16571us; 17us; 16571us; 64us; 195us; 78us; 16571us; 128us; 16571us; 180us; 355us; 0us; 16570us; 1us; 17258us; 99us; 1557us; 0us; 16572us; 1us; 17258us; 99us; 1557us; 2us; 32768us; 17us; 361us; 180us; 362us; 0us; 16573us; 0us; 16574us; 1us; 16575us; 117us; 364us; 1us; 17258us; 99us; 1557us; 0us; 16576us; 1us; 16493us; 64us; 195us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17087us; 69us; 1313us; 1us; 32768us; 61us; 370us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16577us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17087us; 69us; 1313us; 3us; 32768us; 23us; 359us; 61us; 375us; 78us; 357us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16578us; 0us; 16579us; 1us; 16580us; 40us; 379us; 0us; 16581us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 15us; 32768us; 13us; 477us; 27us; 621us; 29us; 617us; 33us; 630us; 39us; 262us; 40us; 264us; 42us; 378us; 43us; 265us; 44us; 266us; 46us; 433us; 98us; 401us; 100us; 476us; 106us; 405us; 123us; 615us; 147us; 611us; 26us; 32768us; 13us; 477us; 27us; 621us; 29us; 617us; 33us; 630us; 38us; 1476us; 39us; 262us; 40us; 264us; 42us; 378us; 43us; 265us; 44us; 266us; 46us; 433us; 50us; 547us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 98us; 401us; 100us; 476us; 106us; 405us; 123us; 615us; 147us; 611us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16582us; 0us; 16583us; 1us; 17258us; 99us; 1557us; 1us; 17246us; 16us; 1551us; 0us; 16584us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 7us; 16603us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 78us; 424us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 0us; 16585us; 1us; 17258us; 99us; 1557us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 2us; 16651us; 30us; 1571us; 145us; 17276us; 1us; 32768us; 69us; 396us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 2us; 16535us; 23us; 272us; 78us; 270us; 1us; 17246us; 16us; 1551us; 0us; 16586us; 0us; 16587us; 1us; 17260us; 105us; 1558us; 0us; 16588us; 1us; 17260us; 105us; 1558us; 0us; 16589us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 16611us; 118us; 440us; 1us; 32768us; 61us; 408us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17246us; 16us; 1551us; 0us; 16590us; 1us; 16493us; 64us; 195us; 0us; 16591us; 1us; 32768us; 68us; 414us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 0us; 16592us; 0us; 16593us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 0us; 16594us; 0us; 16596us; 0us; 16597us; 0us; 16598us; 0us; 16599us; 0us; 16600us; 2us; 16493us; 19us; 446us; 64us; 195us; 3us; 32768us; 16us; 1545us; 17us; 1546us; 128us; 1547us; 0us; 16602us; 6us; 16493us; 16us; 16571us; 17us; 16571us; 19us; 347us; 64us; 195us; 128us; 16571us; 180us; 355us; 3us; 32768us; 16us; 1545us; 17us; 1546us; 128us; 1547us; 0us; 16604us; 5us; 16493us; 16us; 16527us; 17us; 16527us; 19us; 253us; 64us; 195us; 128us; 16527us; 3us; 32768us; 16us; 1545us; 17us; 1546us; 128us; 1547us; 0us; 16606us; 8us; 32768us; 38us; 1476us; 58us; 1387us; 79us; 1419us; 82us; 1469us; 83us; 1374us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 29us; 16614us; 31us; 1570us; 32us; 1569us; 63us; 17274us; 65us; 17274us; 83us; 17274us; 95us; 17274us; 109us; 17274us; 118us; 443us; 122us; 17274us; 133us; 17274us; 140us; 17274us; 150us; 17274us; 151us; 17274us; 152us; 17274us; 153us; 17274us; 154us; 17274us; 155us; 17274us; 156us; 17274us; 157us; 17274us; 158us; 17274us; 159us; 17274us; 160us; 17274us; 161us; 17274us; 162us; 17274us; 164us; 17274us; 165us; 17274us; 177us; 17274us; 178us; 17274us; 179us; 17274us; 0us; 16608us; 26us; 32768us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 16614us; 118us; 443us; 0us; 16609us; 0us; 16610us; 1us; 32768us; 176us; 1475us; 0us; 16612us; 0us; 16613us; 2us; 32768us; 139us; 445us; 176us; 1475us; 0us; 16615us; 0us; 16616us; 1us; 16493us; 64us; 195us; 3us; 32768us; 10us; 860us; 14us; 448us; 180us; 858us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 11us; 16493us; 10us; 16621us; 13us; 16621us; 14us; 16621us; 16us; 16621us; 17us; 16621us; 18us; 16621us; 52us; 16621us; 64us; 195us; 100us; 16621us; 128us; 16621us; 180us; 16621us; 0us; 16620us; 2us; 32768us; 40us; 460us; 43us; 461us; 3us; 17258us; 40us; 460us; 43us; 461us; 99us; 1557us; 2us; 17258us; 99us; 1557us; 180us; 459us; 1us; 17246us; 16us; 1551us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 3us; 16601us; 35us; 421us; 36us; 420us; 37us; 422us; 11us; 32768us; 38us; 1476us; 50us; 547us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16626us; 0us; 16627us; 0us; 16628us; 2us; 16493us; 64us; 195us; 180us; 471us; 3us; 32768us; 10us; 860us; 52us; 469us; 180us; 858us; 0us; 16629us; 0us; 16630us; 1us; 32768us; 52us; 472us; 0us; 16631us; 0us; 16632us; 0us; 16633us; 0us; 16634us; 0us; 16635us; 0us; 16636us; 5us; 32768us; 38us; 1476us; 82us; 1469us; 83us; 484us; 173us; 1472us; 176us; 1475us; 3us; 16637us; 30us; 1571us; 68us; 1478us; 145us; 17276us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16638us; 68us; 1478us; 0us; 16639us; 0us; 16640us; 1us; 16493us; 64us; 195us; 2us; 32768us; 84us; 486us; 86us; 489us; 0us; 16641us; 2us; 16654us; 76us; 507us; 86us; 489us; 1us; 16647us; 86us; 490us; 1us; 16493us; 64us; 195us; 2us; 16493us; 64us; 195us; 129us; 499us; 0us; 16642us; 0us; 16643us; 2us; 32768us; 82us; 1469us; 173us; 1472us; 0us; 16644us; 1us; 32768us; 145us; 496us; 1us; 16493us; 64us; 195us; 1us; 32768us; 146us; 498us; 0us; 16645us; 0us; 16646us; 1us; 32768us; 145us; 501us; 3us; 16493us; 64us; 195us; 76us; 16648us; 146us; 16648us; 1us; 16654us; 76us; 507us; 1us; 32768us; 146us; 504us; 0us; 16649us; 0us; 16650us; 20us; 16652us; 10us; 16788us; 18us; 16788us; 23us; 16788us; 50us; 16788us; 51us; 16788us; 52us; 16788us; 56us; 16788us; 61us; 16788us; 69us; 16788us; 70us; 16788us; 75us; 16788us; 76us; 16788us; 78us; 16788us; 80us; 16788us; 84us; 16788us; 86us; 16788us; 87us; 16788us; 114us; 16788us; 118us; 16788us; 180us; 16788us; 4us; 32768us; 44us; 514us; 82us; 1469us; 83us; 529us; 173us; 1472us; 1us; 16655us; 117us; 511us; 1us; 17084us; 117us; 511us; 1us; 17086us; 117us; 511us; 4us; 32768us; 44us; 514us; 82us; 1469us; 83us; 529us; 173us; 1472us; 0us; 16656us; 0us; 16657us; 2us; 32768us; 82us; 1469us; 173us; 1472us; 1us; 32768us; 69us; 516us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16658us; 2us; 32768us; 69us; 521us; 71us; 519us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16659us; 5us; 32768us; 48us; 522us; 83us; 526us; 133us; 525us; 137us; 538us; 176us; 523us; 0us; 16660us; 3us; 16667us; 30us; 1435us; 48us; 524us; 145us; 1437us; 0us; 16661us; 0us; 16662us; 1us; 16493us; 64us; 195us; 1us; 32768us; 84us; 528us; 0us; 16663us; 2us; 32768us; 82us; 1469us; 173us; 1472us; 1us; 32768us; 91us; 531us; 2us; 32768us; 82us; 1469us; 173us; 1472us; 1us; 32768us; 84us; 533us; 1us; 32768us; 69us; 534us; 1us; 32768us; 83us; 535us; 1us; 16493us; 64us; 195us; 1us; 32768us; 84us; 537us; 0us; 16664us; 2us; 32768us; 30us; 1435us; 145us; 1437us; 0us; 16665us; 0us; 16666us; 1us; 16493us; 64us; 195us; 0us; 16668us; 1us; 32768us; 50us; 547us; 1us; 16493us; 64us; 195us; 0us; 16669us; 2us; 16670us; 18us; 1553us; 50us; 17250us; 0us; 16671us; 1us; 16673us; 50us; 547us; 1us; 16493us; 64us; 195us; 0us; 16672us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 3us; 32768us; 83us; 565us; 89us; 1484us; 176us; 1475us; 4us; 17250us; 18us; 1553us; 61us; 561us; 69us; 558us; 107us; 555us; 0us; 16674us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 1us; 17250us; 18us; 1553us; 0us; 16675us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 1us; 17250us; 18us; 1553us; 0us; 16676us; 18us; 32768us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17250us; 18us; 1553us; 0us; 16677us; 0us; 16678us; 28us; 32768us; 50us; 1519us; 53us; 1501us; 54us; 1499us; 61us; 1503us; 62us; 568us; 66us; 1507us; 70us; 566us; 74us; 1511us; 80us; 1508us; 81us; 1509us; 85us; 1502us; 91us; 1504us; 129us; 1514us; 130us; 1510us; 140us; 1516us; 143us; 1513us; 145us; 1505us; 146us; 1506us; 166us; 1512us; 167us; 1500us; 168us; 1497us; 169us; 1496us; 170us; 1498us; 171us; 1491us; 172us; 1495us; 173us; 1494us; 174us; 1493us; 175us; 1492us; 1us; 32768us; 84us; 567us; 0us; 16679us; 1us; 32768us; 51us; 569us; 1us; 32768us; 84us; 570us; 0us; 16680us; 4us; 17178us; 18us; 1553us; 50us; 17250us; 61us; 573us; 107us; 577us; 0us; 16681us; 18us; 32768us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17250us; 18us; 1553us; 37us; 16682us; 10us; 16685us; 13us; 16685us; 14us; 16685us; 16us; 16685us; 17us; 16685us; 18us; 16685us; 27us; 16685us; 29us; 16685us; 33us; 16685us; 35us; 16685us; 36us; 16685us; 37us; 16685us; 39us; 16685us; 40us; 16685us; 42us; 16685us; 43us; 16685us; 44us; 16685us; 46us; 16685us; 59us; 16685us; 64us; 16685us; 75us; 16685us; 78us; 16685us; 79us; 16685us; 84us; 16685us; 90us; 16685us; 97us; 16685us; 98us; 16685us; 100us; 16685us; 106us; 16685us; 108us; 16685us; 117us; 16685us; 123us; 16685us; 128us; 16685us; 135us; 16685us; 136us; 16685us; 147us; 16685us; 180us; 16685us; 0us; 16683us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16684us; 0us; 16686us; 7us; 16688us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 85us; 581us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16687us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 4us; 16493us; 10us; 17251us; 52us; 17251us; 64us; 195us; 180us; 17251us; 0us; 16689us; 0us; 16690us; 1us; 17260us; 105us; 1558us; 0us; 16691us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 1us; 32768us; 176us; 1475us; 1us; 32768us; 69us; 592us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16692us; 1us; 16605us; 78us; 427us; 0us; 16693us; 1us; 16607us; 78us; 430us; 0us; 16694us; 0us; 16695us; 1us; 16493us; 64us; 195us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 1us; 32768us; 176us; 1475us; 1us; 16699us; 61us; 607us; 0us; 16696us; 1us; 16697us; 107us; 605us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 65us; 467us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 16698us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16700us; 68us; 1478us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 16701us; 68us; 1478us; 1us; 17254us; 92us; 1555us; 2us; 16493us; 64us; 195us; 180us; 665us; 0us; 16702us; 0us; 16703us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16704us; 1us; 17254us; 92us; 1555us; 2us; 16493us; 64us; 195us; 180us; 665us; 3us; 32768us; 10us; 860us; 16us; 628us; 180us; 858us; 0us; 16705us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 16us; 628us; 180us; 858us; 0us; 16706us; 0us; 16707us; 0us; 16708us; 0us; 16709us; 0us; 16710us; 0us; 16711us; 0us; 16712us; 1us; 16493us; 64us; 195us; 3us; 16595us; 35us; 421us; 36us; 420us; 37us; 422us; 1us; 32768us; 176us; 1475us; 2us; 17274us; 31us; 1570us; 32us; 1569us; 1us; 32768us; 83us; 635us; 2us; 16493us; 64us; 195us; 84us; 16716us; 1us; 32768us; 84us; 637us; 0us; 16713us; 1us; 16714us; 86us; 640us; 1us; 16715us; 86us; 642us; 1us; 16493us; 64us; 195us; 0us; 16717us; 1us; 16493us; 64us; 195us; 0us; 16718us; 3us; 32768us; 34us; 654us; 38us; 1476us; 176us; 1475us; 6us; 16719us; 31us; 1570us; 32us; 1569us; 62us; 17274us; 80us; 653us; 85us; 652us; 176us; 1475us; 0us; 16720us; 1us; 16721us; 68us; 1478us; 5us; 16726us; 31us; 1570us; 32us; 1569us; 62us; 17274us; 80us; 653us; 85us; 652us; 1us; 32768us; 62us; 650us; 1us; 32768us; 51us; 651us; 0us; 16722us; 0us; 16723us; 0us; 16724us; 1us; 32768us; 85us; 656us; 1us; 16727us; 85us; 656us; 0us; 16725us; 3us; 32768us; 34us; 655us; 38us; 1476us; 176us; 1475us; 1us; 16730us; 117us; 660us; 0us; 16728us; 2us; 16493us; 64us; 195us; 180us; 665us; 1us; 16730us; 117us; 660us; 0us; 16729us; 1us; 17258us; 99us; 1557us; 0us; 16731us; 0us; 16732us; 1us; 17260us; 105us; 1558us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 17087us; 69us; 1313us; 1us; 32768us; 61us; 670us; 68us; 32768us; 19us; 673us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 672us; 0us; 16733us; 0us; 16734us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 14us; 675us; 180us; 858us; 0us; 16735us; 0us; 16736us; 0us; 16737us; 0us; 16740us; 1us; 16738us; 76us; 681us; 0us; 16739us; 3us; 32768us; 82us; 1469us; 95us; 692us; 173us; 1472us; 2us; 32768us; 61us; 683us; 117us; 685us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16741us; 3us; 32768us; 82us; 1469us; 95us; 692us; 173us; 1472us; 0us; 16742us; 0us; 16743us; 2us; 32768us; 48us; 691us; 69us; 689us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16744us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 0us; 16754us; 0us; 16755us; 0us; 16756us; 0us; 16757us; 0us; 16758us; 0us; 16759us; 1us; 16759us; 129us; 769us; 0us; 16760us; 0us; 16761us; 0us; 16762us; 0us; 16763us; 1us; 16764us; 30us; 712us; 1us; 32768us; 145us; 1444us; 0us; 16765us; 5us; 16766us; 50us; 743us; 70us; 744us; 80us; 751us; 86us; 749us; 118us; 741us; 0us; 16767us; 1us; 32768us; 176us; 1475us; 0us; 16768us; 1us; 16770us; 69us; 720us; 2us; 16771us; 69us; 720us; 86us; 723us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16769us; 3us; 32768us; 64us; 195us; 66us; 716us; 176us; 1475us; 3us; 32768us; 64us; 195us; 66us; 716us; 176us; 1475us; 0us; 16772us; 6us; 32768us; 10us; 860us; 64us; 195us; 66us; 716us; 84us; 728us; 176us; 1475us; 180us; 730us; 3us; 32768us; 10us; 860us; 84us; 727us; 180us; 858us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 1us; 16850us; 84us; 731us; 0us; 16776us; 0us; 16777us; 3us; 16779us; 70us; 744us; 80us; 751us; 86us; 749us; 1us; 16780us; 70us; 744us; 2us; 16784us; 70us; 744us; 80us; 751us; 2us; 16785us; 70us; 744us; 80us; 751us; 1us; 16786us; 70us; 744us; 1us; 16787us; 70us; 744us; 6us; 32768us; 50us; 743us; 61us; 934us; 70us; 744us; 80us; 751us; 86us; 749us; 118us; 741us; 6us; 32768us; 50us; 743us; 61us; 940us; 70us; 744us; 80us; 751us; 86us; 749us; 118us; 741us; 1us; 32768us; 176us; 1475us; 0us; 16778us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 16781us; 86us; 748us; 0us; 16782us; 0us; 16783us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 22us; 16653us; 10us; 16805us; 18us; 16805us; 23us; 16805us; 30us; 1571us; 50us; 16805us; 51us; 16805us; 52us; 16805us; 56us; 16805us; 61us; 16805us; 69us; 16805us; 70us; 16805us; 75us; 16805us; 76us; 16805us; 78us; 16805us; 80us; 16805us; 84us; 16805us; 86us; 16805us; 87us; 16805us; 114us; 16805us; 118us; 16805us; 145us; 17276us; 180us; 16805us; 36us; 32768us; 31us; 755us; 32us; 757us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16789us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16790us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16791us; 8us; 32768us; 38us; 1476us; 58us; 1422us; 79us; 1419us; 82us; 1469us; 83us; 1423us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 1us; 16792us; 68us; 1431us; 0us; 16793us; 36us; 16797us; 31us; 766us; 32us; 764us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16794us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16795us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16796us; 0us; 16798us; 1us; 32768us; 152us; 770us; 0us; 16799us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 1us; 32768us; 52us; 773us; 0us; 16800us; 36us; 16832us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 51us; 776us; 0us; 16801us; 36us; 16832us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 56us; 779us; 0us; 16802us; 0us; 16803us; 1us; 32768us; 176us; 1475us; 1us; 17201us; 176us; 1475us; 0us; 16804us; 0us; 16805us; 0us; 16806us; 0us; 16807us; 0us; 16808us; 0us; 16809us; 62us; 16815us; 10us; 860us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 50us; 1519us; 53us; 1501us; 54us; 1499us; 58us; 780us; 61us; 1503us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 782us; 73us; 759us; 74us; 1511us; 80us; 1508us; 81us; 1509us; 83us; 789us; 85us; 1502us; 89us; 1484us; 91us; 1504us; 95us; 787us; 109us; 786us; 129us; 1514us; 130us; 1510us; 133us; 788us; 140us; 1176us; 143us; 1513us; 145us; 1505us; 146us; 1506us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 166us; 1512us; 167us; 1500us; 168us; 1497us; 169us; 1496us; 170us; 1498us; 171us; 1491us; 172us; 1495us; 173us; 1494us; 174us; 1493us; 175us; 1492us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 793us; 3us; 32768us; 10us; 860us; 84us; 791us; 180us; 858us; 0us; 16810us; 0us; 16811us; 1us; 16850us; 84us; 794us; 0us; 16812us; 0us; 16813us; 6us; 16814us; 50us; 810us; 69us; 813us; 70us; 816us; 80us; 821us; 86us; 819us; 118us; 808us; 4us; 16817us; 69us; 813us; 70us; 816us; 80us; 821us; 86us; 819us; 3us; 16821us; 69us; 813us; 70us; 816us; 80us; 821us; 2us; 16822us; 69us; 813us; 70us; 816us; 3us; 16824us; 69us; 813us; 70us; 816us; 80us; 821us; 3us; 16825us; 69us; 813us; 70us; 816us; 80us; 821us; 2us; 16826us; 69us; 813us; 70us; 816us; 2us; 16827us; 69us; 813us; 70us; 816us; 6us; 16831us; 50us; 810us; 69us; 813us; 70us; 816us; 80us; 821us; 86us; 819us; 118us; 808us; 8us; 17252us; 18us; 1541us; 50us; 810us; 69us; 813us; 70us; 816us; 75us; 1542us; 80us; 821us; 86us; 819us; 118us; 808us; 9us; 32768us; 50us; 810us; 61us; 1229us; 69us; 813us; 70us; 816us; 80us; 821us; 86us; 819us; 114us; 1226us; 118us; 808us; 180us; 927us; 7us; 16938us; 50us; 810us; 69us; 813us; 70us; 816us; 76us; 1044us; 80us; 821us; 86us; 819us; 118us; 808us; 1us; 32768us; 176us; 1475us; 0us; 16816us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 16818us; 86us; 818us; 1us; 16819us; 80us; 820us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16820us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16823us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16828us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 0us; 16829us; 2us; 17251us; 38us; 1476us; 176us; 1475us; 0us; 16830us; 2us; 32768us; 61us; 828us; 68us; 1478us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16833us; 36us; 16832us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16834us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 14us; 834us; 180us; 858us; 0us; 16835us; 0us; 16836us; 0us; 16837us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 14us; 839us; 0us; 16838us; 24us; 16839us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 1us; 16841us; 15us; 842us; 0us; 16840us; 1us; 16843us; 69us; 844us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16842us; 28us; 16846us; 18us; 1541us; 25us; 853us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 75us; 1542us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 93us; 851us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 29us; 16846us; 18us; 1541us; 25us; 853us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 75us; 1542us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 93us; 851us; 129us; 1156us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 29us; 16846us; 18us; 1541us; 25us; 853us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 75us; 1542us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 93us; 851us; 129us; 1222us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 66us; 16845us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16844us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16847us; 1us; 32768us; 19us; 854us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 14us; 856us; 0us; 16848us; 69us; 16849us; 18us; 868us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 867us; 0us; 16850us; 1us; 16850us; 84us; 1194us; 0us; 16851us; 1us; 32768us; 114us; 862us; 67us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 864us; 0us; 16852us; 0us; 16853us; 69us; 32768us; 18us; 868us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 867us; 0us; 16854us; 0us; 16855us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 870us; 0us; 16856us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 0us; 16860us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 4us; 32768us; 10us; 860us; 23us; 1028us; 78us; 1026us; 180us; 858us; 0us; 16861us; 0us; 16862us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 5us; 32768us; 10us; 860us; 23us; 1028us; 78us; 1026us; 115us; 882us; 180us; 858us; 0us; 16863us; 0us; 16864us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16865us; 68us; 32768us; 10us; 860us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 858us; 28us; 32768us; 10us; 860us; 25us; 1050us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 93us; 1049us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 180us; 858us; 0us; 16866us; 0us; 16867us; 0us; 16868us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16869us; 58us; 16871us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 144us; 933us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16870us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16872us; 59us; 16874us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 144us; 933us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16873us; 67us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 906us; 28us; 32768us; 10us; 860us; 27us; 1560us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 123us; 1559us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 180us; 858us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 903us; 4us; 32768us; 10us; 860us; 16us; 1562us; 124us; 1561us; 180us; 858us; 0us; 16875us; 0us; 16876us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16877us; 0us; 16878us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16879us; 37us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 923us; 5us; 17250us; 10us; 860us; 18us; 1553us; 27us; 1560us; 123us; 1559us; 180us; 858us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 914us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16880us; 0us; 16881us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16882us; 2us; 32768us; 27us; 1560us; 123us; 1559us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 921us; 4us; 32768us; 10us; 860us; 16us; 1562us; 124us; 1561us; 180us; 858us; 0us; 16883us; 0us; 16884us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16885us; 2us; 32768us; 27us; 1560us; 123us; 1559us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16886us; 2us; 32768us; 16us; 1562us; 124us; 1561us; 0us; 16887us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 24us; 16888us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 24us; 16889us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 114us; 936us; 1us; 17250us; 18us; 1553us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16890us; 35us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 16us; 628us; 180us; 858us; 1us; 17250us; 18us; 1553us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 945us; 0us; 16891us; 0us; 16892us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 114us; 948us; 1us; 17250us; 18us; 1553us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16893us; 67us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 16us; 628us; 180us; 858us; 0us; 16894us; 1us; 32768us; 87us; 1224us; 0us; 16895us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16896us; 24us; 16900us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 20us; 16903us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 9us; 16904us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 20us; 16905us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 18us; 16906us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 85us; 1019us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 18us; 16907us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 85us; 1019us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 9us; 16908us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16909us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16910us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16911us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16912us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16913us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 9us; 16914us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 173us; 1014us; 175us; 1021us; 1us; 16915us; 175us; 1021us; 8us; 16916us; 53us; 1018us; 70us; 1016us; 73us; 992us; 85us; 1019us; 143us; 1015us; 168us; 1017us; 170us; 1020us; 175us; 1021us; 4us; 16917us; 85us; 1019us; 143us; 1015us; 170us; 1020us; 175us; 1021us; 4us; 16918us; 85us; 1019us; 143us; 1015us; 170us; 1020us; 175us; 1021us; 1us; 16919us; 175us; 1021us; 1us; 16920us; 175us; 1021us; 1us; 16921us; 175us; 1021us; 24us; 16937us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 24us; 16941us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 24us; 16945us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 28us; 32768us; 10us; 860us; 25us; 1050us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 93us; 1049us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 180us; 858us; 22us; 16950us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 22us; 16951us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 25us; 32768us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 129us; 1156us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 23us; 16991us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 23us; 16993us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 25us; 17037us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 129us; 1222us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 25us; 17034us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 129us; 1223us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 24us; 17035us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 26us; 32768us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 94us; 1285us; 125us; 1286us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 24us; 17040us; 53us; 1018us; 54us; 1011us; 61us; 1009us; 70us; 1016us; 71us; 994us; 72us; 996us; 73us; 992us; 74us; 998us; 80us; 1006us; 81us; 1007us; 85us; 1019us; 86us; 1065us; 91us; 1005us; 130us; 1003us; 143us; 1015us; 145us; 1012us; 146us; 1013us; 168us; 1017us; 169us; 1008us; 170us; 1020us; 172us; 1004us; 173us; 1014us; 174us; 1010us; 175us; 1021us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16897us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16898us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 16899us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 16922us; 60us; 1000us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16901us; 1us; 16902us; 86us; 1064us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16923us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 84us; 1025us; 0us; 16924us; 38us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 50us; 1033us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1036us; 0us; 16925us; 38us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 50us; 1033us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1036us; 3us; 32768us; 10us; 860us; 17us; 1030us; 180us; 858us; 0us; 16926us; 0us; 16927us; 0us; 16928us; 37us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1035us; 0us; 16929us; 0us; 16930us; 0us; 16931us; 0us; 16932us; 1us; 32768us; 87us; 1045us; 2us; 16933us; 50us; 1040us; 180us; 1043us; 37us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1042us; 0us; 16934us; 0us; 16935us; 0us; 16936us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16939us; 3us; 16944us; 24us; 1056us; 126us; 1055us; 127us; 1061us; 0us; 16940us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 19us; 1051us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 14us; 1053us; 180us; 858us; 0us; 16942us; 0us; 16943us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 19us; 1057us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 3us; 32768us; 10us; 860us; 14us; 1059us; 180us; 858us; 0us; 16946us; 0us; 16947us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16948us; 0us; 16949us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17195us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16952us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17191us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16953us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17194us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16954us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17207us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16955us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17202us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16956us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 42us; 17203us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16957us; 9us; 32768us; 38us; 1476us; 58us; 1387us; 79us; 1419us; 82us; 1469us; 83us; 1374us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 180us; 1093us; 9us; 32768us; 38us; 1476us; 58us; 1387us; 79us; 1419us; 82us; 1469us; 83us; 1374us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 180us; 1093us; 2us; 17274us; 31us; 1570us; 32us; 1569us; 33us; 17059us; 13us; 17062us; 18us; 17062us; 23us; 17062us; 31us; 1570us; 32us; 1569us; 63us; 17274us; 65us; 17274us; 78us; 17062us; 83us; 17274us; 95us; 17274us; 100us; 17062us; 109us; 17274us; 122us; 17274us; 133us; 17274us; 140us; 17274us; 150us; 17274us; 151us; 17274us; 152us; 17274us; 153us; 17274us; 154us; 17274us; 155us; 17274us; 156us; 17274us; 157us; 17274us; 158us; 17274us; 159us; 17274us; 160us; 17274us; 161us; 17274us; 162us; 17274us; 164us; 17274us; 165us; 17274us; 177us; 17274us; 178us; 17274us; 179us; 17274us; 27us; 32768us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1092us; 27us; 32768us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1092us; 0us; 16958us; 5us; 16958us; 13us; 17061us; 23us; 17061us; 78us; 17061us; 100us; 17061us; 118us; 443us; 0us; 16959us; 0us; 16960us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16961us; 42us; 32768us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 106us; 1084us; 109us; 1163us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16962us; 34us; 16963us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1102us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 37us; 16963us; 23us; 1248us; 38us; 1124us; 61us; 1238us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 78us; 1242us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1102us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16964us; 5us; 16965us; 30us; 1110us; 31us; 1109us; 32us; 1108us; 66us; 1122us; 68us; 1114us; 33us; 32768us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 5us; 16966us; 30us; 1110us; 31us; 1109us; 32us; 1108us; 66us; 1122us; 68us; 1114us; 5us; 16967us; 30us; 1110us; 31us; 1109us; 32us; 1108us; 66us; 1122us; 68us; 1114us; 2us; 16968us; 30us; 1110us; 31us; 1109us; 1us; 16969us; 30us; 1110us; 5us; 16971us; 30us; 1110us; 31us; 1109us; 32us; 1108us; 66us; 1122us; 68us; 1114us; 33us; 32768us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 33us; 32768us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 145us; 1437us; 0us; 16970us; 33us; 32768us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 33us; 17185us; 38us; 1124us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 83us; 1190us; 89us; 1484us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 6us; 32768us; 10us; 860us; 62us; 1142us; 83us; 1135us; 89us; 1484us; 176us; 1475us; 180us; 858us; 0us; 16972us; 1us; 32768us; 68us; 1117us; 6us; 32768us; 10us; 860us; 62us; 1142us; 83us; 1135us; 89us; 1484us; 176us; 1475us; 180us; 858us; 0us; 16973us; 3us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 3us; 17201us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 0us; 16974us; 2us; 32768us; 83us; 1023us; 176us; 1022us; 0us; 16975us; 0us; 16976us; 0us; 16977us; 67us; 17031us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1130us; 3us; 32768us; 10us; 860us; 51us; 1128us; 180us; 858us; 0us; 16978us; 0us; 16979us; 1us; 32768us; 51us; 1131us; 0us; 16980us; 0us; 16981us; 0us; 16982us; 0us; 16983us; 84us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 50us; 1519us; 53us; 1067us; 54us; 1499us; 61us; 1503us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1120us; 70us; 1136us; 74us; 1511us; 77us; 897us; 80us; 1079us; 81us; 1082us; 83us; 1190us; 85us; 1502us; 87us; 956us; 89us; 1484us; 91us; 1504us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1514us; 130us; 1510us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1176us; 143us; 1076us; 144us; 933us; 145us; 1505us; 146us; 1506us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 166us; 1512us; 167us; 1073us; 168us; 1070us; 169us; 1496us; 170us; 1498us; 171us; 1113us; 172us; 1495us; 173us; 1494us; 174us; 1493us; 175us; 1492us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 84us; 1137us; 1us; 32768us; 68us; 1138us; 1us; 32768us; 162us; 1139us; 0us; 16984us; 1us; 32768us; 84us; 1141us; 0us; 16985us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 85us; 1158us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1157us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 51us; 1144us; 0us; 16986us; 2us; 32768us; 51us; 1146us; 86us; 1147us; 0us; 16987us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 85us; 1158us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1157us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 2us; 32768us; 51us; 1149us; 86us; 1150us; 0us; 16988us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 85us; 1158us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1157us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 2us; 32768us; 51us; 1152us; 86us; 1153us; 0us; 16989us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 85us; 1158us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1157us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 51us; 1155us; 0us; 16990us; 66us; 16992us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 128us; 1174us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1172us; 3us; 32768us; 10us; 860us; 128us; 1170us; 180us; 858us; 0us; 17004us; 0us; 17005us; 1us; 32768us; 128us; 1173us; 0us; 17006us; 0us; 17007us; 67us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1180us; 68us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 141us; 1517us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1180us; 3us; 32768us; 10us; 860us; 141us; 1178us; 180us; 858us; 0us; 17008us; 0us; 17009us; 1us; 32768us; 141us; 1181us; 0us; 17010us; 67us; 17031us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1186us; 3us; 32768us; 10us; 860us; 56us; 1184us; 180us; 858us; 0us; 17011us; 0us; 17012us; 1us; 32768us; 56us; 1187us; 0us; 17013us; 70us; 17018us; 10us; 860us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1189us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 97us; 1196us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 173us; 1472us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 859us; 86us; 17018us; 10us; 860us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 50us; 1519us; 53us; 1067us; 54us; 1499us; 61us; 1503us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1120us; 74us; 1511us; 77us; 897us; 80us; 1079us; 81us; 1082us; 83us; 1189us; 85us; 1502us; 87us; 956us; 89us; 1484us; 91us; 1504us; 95us; 1164us; 96us; 878us; 97us; 1196us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1514us; 130us; 1510us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1176us; 143us; 1076us; 144us; 933us; 145us; 1505us; 146us; 1506us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 166us; 1512us; 167us; 1073us; 168us; 1070us; 169us; 1496us; 170us; 1498us; 171us; 1113us; 172us; 1495us; 173us; 1473us; 174us; 1493us; 175us; 1492us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 859us; 86us; 17018us; 10us; 860us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 50us; 1519us; 53us; 1067us; 54us; 1499us; 61us; 1503us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1120us; 74us; 1511us; 77us; 897us; 80us; 1079us; 81us; 1082us; 83us; 1189us; 85us; 1502us; 87us; 956us; 89us; 1484us; 91us; 1504us; 95us; 1164us; 96us; 878us; 97us; 1196us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 129us; 1514us; 130us; 1510us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1176us; 143us; 1076us; 144us; 933us; 145us; 1505us; 146us; 1506us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 166us; 1512us; 167us; 1073us; 168us; 1070us; 169us; 1496us; 170us; 1498us; 171us; 1113us; 172us; 1495us; 173us; 1473us; 174us; 1493us; 175us; 1492us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 859us; 3us; 32768us; 10us; 860us; 84us; 1192us; 180us; 858us; 0us; 17014us; 0us; 17015us; 0us; 17016us; 0us; 17017us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17019us; 1us; 32768us; 69us; 1199us; 1us; 32768us; 83us; 1200us; 1us; 16493us; 64us; 195us; 1us; 32768us; 84us; 1202us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 1us; 17022us; 91us; 1207us; 1us; 32768us; 173us; 1472us; 1us; 32768us; 84us; 1209us; 0us; 17023us; 68us; 17050us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 46us; 1232us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1085us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1214us; 3us; 32768us; 10us; 860us; 52us; 1212us; 180us; 858us; 0us; 17024us; 0us; 17025us; 1us; 32768us; 52us; 1215us; 0us; 17026us; 0us; 17027us; 0us; 17028us; 0us; 17029us; 0us; 17030us; 0us; 17032us; 0us; 17033us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17036us; 68us; 32768us; 10us; 860us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 858us; 0us; 17038us; 0us; 17039us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 66us; 32768us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17044us; 8us; 32768us; 38us; 1476us; 58us; 1387us; 79us; 1419us; 82us; 1469us; 83us; 1374us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 2us; 17274us; 31us; 1570us; 32us; 1569us; 26us; 17043us; 63us; 1182us; 65us; 1210us; 83us; 1188us; 95us; 1164us; 109us; 1163us; 122us; 1168us; 133us; 1162us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17056us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 0us; 17051us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17056us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 0us; 17052us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 2us; 32768us; 61us; 1244us; 68us; 1478us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17056us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 0us; 17053us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 2us; 32768us; 61us; 1250us; 68us; 1478us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17056us; 2us; 17252us; 18us; 1541us; 75us; 1542us; 1us; 32768us; 17us; 1254us; 0us; 17054us; 2us; 17251us; 38us; 1476us; 176us; 1475us; 2us; 32768us; 61us; 1257us; 68us; 1478us; 67us; 32768us; 19us; 837us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17055us; 3us; 17250us; 18us; 1553us; 23us; 1269us; 78us; 1267us; 1us; 17250us; 18us; 1553us; 3us; 17069us; 13us; 477us; 100us; 476us; 180us; 1278us; 0us; 17057us; 2us; 32768us; 13us; 477us; 100us; 476us; 0us; 17058us; 0us; 17060us; 0us; 17063us; 3us; 16493us; 19us; 446us; 64us; 195us; 180us; 665us; 0us; 17065us; 2us; 16493us; 64us; 195us; 180us; 665us; 1us; 32768us; 17us; 1271us; 0us; 17066us; 3us; 17244us; 16us; 1548us; 17us; 1549us; 128us; 1550us; 0us; 17067us; 3us; 17069us; 13us; 477us; 100us; 476us; 180us; 1278us; 0us; 17068us; 3us; 17069us; 13us; 477us; 100us; 476us; 180us; 1278us; 0us; 17070us; 3us; 17069us; 13us; 477us; 100us; 476us; 180us; 1278us; 0us; 17071us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 8us; 17064us; 23us; 1269us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 78us; 1267us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 3us; 17244us; 16us; 1548us; 17us; 1549us; 128us; 1550us; 1us; 17250us; 18us; 1553us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 87us; 1289us; 68us; 32768us; 19us; 832us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 1291us; 0us; 17075us; 0us; 17076us; 34us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 65us; 771us; 66us; 781us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 1us; 32768us; 87us; 1294us; 69us; 32768us; 10us; 860us; 15us; 1297us; 21us; 1292us; 22us; 1303us; 26us; 951us; 27us; 621us; 28us; 939us; 29us; 617us; 33us; 630us; 38us; 1124us; 53us; 1066us; 62us; 1126us; 63us; 1182us; 65us; 1210us; 66us; 1119us; 77us; 897us; 80us; 1078us; 81us; 1081us; 83us; 1190us; 87us; 956us; 89us; 1484us; 95us; 1164us; 96us; 878us; 102us; 889us; 103us; 893us; 104us; 874us; 106us; 1084us; 109us; 1163us; 110us; 908us; 111us; 1287us; 112us; 1300us; 113us; 884us; 116us; 946us; 119us; 891us; 120us; 895us; 122us; 1168us; 131us; 1094us; 132us; 1096us; 133us; 1162us; 139us; 1116us; 140us; 1175us; 143us; 1075us; 144us; 933us; 147us; 611us; 148us; 929us; 149us; 931us; 150us; 708us; 151us; 707us; 152us; 705us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 167us; 1072us; 168us; 1069us; 171us; 1112us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 180us; 858us; 1us; 32768us; 17us; 1296us; 0us; 17077us; 1us; 32768us; 17us; 1298us; 0us; 17078us; 0us; 17079us; 1us; 17256us; 50us; 1556us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 0us; 17080us; 1us; 17256us; 50us; 1556us; 36us; 32768us; 35us; 421us; 36us; 420us; 37us; 422us; 38us; 413us; 58us; 780us; 62us; 774us; 63us; 777us; 64us; 195us; 65us; 771us; 66us; 781us; 73us; 759us; 83us; 789us; 89us; 1484us; 95us; 787us; 109us; 786us; 133us; 788us; 140us; 1175us; 150us; 708us; 151us; 707us; 152us; 706us; 153us; 704us; 154us; 703us; 155us; 701us; 156us; 702us; 157us; 700us; 158us; 698us; 159us; 696us; 160us; 694us; 161us; 699us; 162us; 697us; 164us; 695us; 165us; 693us; 176us; 1475us; 177us; 13us; 178us; 12us; 179us; 710us; 2us; 32768us; 17us; 1306us; 180us; 1307us; 0us; 17081us; 1us; 32768us; 17us; 1308us; 0us; 17082us; 1us; 17083us; 76us; 1310us; 4us; 32768us; 44us; 514us; 82us; 1469us; 83us; 529us; 173us; 1472us; 1us; 17085us; 76us; 1312us; 4us; 32768us; 44us; 514us; 82us; 1469us; 83us; 529us; 173us; 1472us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17088us; 1us; 17090us; 87us; 1316us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17089us; 1us; 17092us; 85us; 1319us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17091us; 1us; 17094us; 85us; 1322us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 64us; 195us; 66us; 1335us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17093us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 66us; 1328us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 7us; 17097us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 69us; 1326us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 17095us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 1us; 32768us; 176us; 1475us; 1us; 32768us; 69us; 1330us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 17096us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 7us; 17100us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 69us; 1333us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 17098us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 1us; 32768us; 176us; 1475us; 1us; 32768us; 69us; 1337us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 6us; 17099us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 1us; 17102us; 87us; 1340us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17101us; 8us; 17106us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 85us; 1343us; 170us; 1347us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17103us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17104us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17105us; 8us; 17109us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 85us; 1350us; 170us; 1352us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17107us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17108us; 7us; 17111us; 32us; 1368us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 85us; 1355us; 173us; 1472us; 176us; 1475us; 8us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 0us; 17110us; 1us; 17112us; 68us; 1478us; 0us; 17113us; 1us; 17113us; 71us; 1383us; 1us; 17113us; 71us; 1384us; 1us; 17115us; 173us; 1363us; 3us; 17115us; 30us; 1435us; 145us; 1437us; 173us; 1363us; 1us; 32768us; 162us; 1364us; 0us; 17114us; 6us; 32768us; 32us; 1369us; 38us; 1476us; 62us; 1393us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 0us; 17116us; 58us; 17116us; 10us; 17133us; 13us; 17133us; 14us; 17133us; 16us; 17133us; 17us; 17133us; 18us; 17133us; 23us; 17133us; 27us; 17133us; 29us; 17133us; 31us; 17133us; 33us; 17133us; 35us; 17133us; 36us; 17133us; 37us; 17133us; 39us; 17133us; 40us; 17133us; 42us; 17133us; 43us; 17133us; 44us; 17133us; 46us; 17133us; 52us; 17133us; 63us; 17133us; 64us; 17133us; 65us; 17133us; 75us; 17133us; 78us; 17133us; 83us; 17133us; 95us; 17133us; 98us; 17133us; 100us; 17133us; 106us; 17133us; 109us; 17133us; 118us; 17133us; 122us; 17133us; 123us; 17133us; 128us; 17133us; 133us; 17133us; 140us; 17133us; 147us; 17133us; 150us; 17133us; 151us; 17133us; 152us; 17133us; 153us; 17133us; 154us; 17133us; 155us; 17133us; 156us; 17133us; 157us; 17133us; 158us; 17133us; 159us; 17133us; 160us; 17133us; 161us; 17133us; 162us; 17133us; 164us; 17133us; 165us; 17133us; 177us; 17133us; 178us; 17133us; 179us; 17133us; 180us; 17133us; 1us; 32768us; 62us; 1393us; 1us; 32768us; 62us; 1393us; 0us; 17117us; 58us; 17117us; 10us; 17134us; 13us; 17134us; 14us; 17134us; 16us; 17134us; 17us; 17134us; 18us; 17134us; 23us; 17134us; 27us; 17134us; 29us; 17134us; 31us; 17134us; 33us; 17134us; 35us; 17134us; 36us; 17134us; 37us; 17134us; 39us; 17134us; 40us; 17134us; 42us; 17134us; 43us; 17134us; 44us; 17134us; 46us; 17134us; 52us; 17134us; 63us; 17134us; 64us; 17134us; 65us; 17134us; 75us; 17134us; 78us; 17134us; 83us; 17134us; 95us; 17134us; 98us; 17134us; 100us; 17134us; 106us; 17134us; 109us; 17134us; 118us; 17134us; 122us; 17134us; 123us; 17134us; 128us; 17134us; 133us; 17134us; 140us; 17134us; 147us; 17134us; 150us; 17134us; 151us; 17134us; 152us; 17134us; 153us; 17134us; 154us; 17134us; 155us; 17134us; 156us; 17134us; 157us; 17134us; 158us; 17134us; 159us; 17134us; 160us; 17134us; 161us; 17134us; 162us; 17134us; 164us; 17134us; 165us; 17134us; 177us; 17134us; 178us; 17134us; 179us; 17134us; 180us; 17134us; 0us; 17118us; 58us; 17118us; 10us; 17135us; 13us; 17135us; 14us; 17135us; 16us; 17135us; 17us; 17135us; 18us; 17135us; 23us; 17135us; 27us; 17135us; 29us; 17135us; 31us; 17135us; 33us; 17135us; 35us; 17135us; 36us; 17135us; 37us; 17135us; 39us; 17135us; 40us; 17135us; 42us; 17135us; 43us; 17135us; 44us; 17135us; 46us; 17135us; 52us; 17135us; 63us; 17135us; 64us; 17135us; 65us; 17135us; 75us; 17135us; 78us; 17135us; 83us; 17135us; 95us; 17135us; 98us; 17135us; 100us; 17135us; 106us; 17135us; 109us; 17135us; 118us; 17135us; 122us; 17135us; 123us; 17135us; 128us; 17135us; 133us; 17135us; 140us; 17135us; 147us; 17135us; 150us; 17135us; 151us; 17135us; 152us; 17135us; 153us; 17135us; 154us; 17135us; 155us; 17135us; 156us; 17135us; 157us; 17135us; 158us; 17135us; 159us; 17135us; 160us; 17135us; 161us; 17135us; 162us; 17135us; 164us; 17135us; 165us; 17135us; 177us; 17135us; 178us; 17135us; 179us; 17135us; 180us; 17135us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 180us; 1428us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 180us; 1428us; 1us; 32768us; 84us; 1378us; 1us; 32768us; 84us; 1379us; 4us; 32768us; 38us; 1476us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 4us; 32768us; 38us; 1476us; 82us; 1469us; 173us; 1472us; 176us; 1475us; 0us; 17119us; 58us; 17119us; 10us; 17136us; 13us; 17136us; 14us; 17136us; 16us; 17136us; 17us; 17136us; 18us; 17136us; 23us; 17136us; 27us; 17136us; 29us; 17136us; 31us; 17136us; 33us; 17136us; 35us; 17136us; 36us; 17136us; 37us; 17136us; 39us; 17136us; 40us; 17136us; 42us; 17136us; 43us; 17136us; 44us; 17136us; 46us; 17136us; 52us; 17136us; 63us; 17136us; 64us; 17136us; 65us; 17136us; 75us; 17136us; 78us; 17136us; 83us; 17136us; 95us; 17136us; 98us; 17136us; 100us; 17136us; 106us; 17136us; 109us; 17136us; 118us; 17136us; 122us; 17136us; 123us; 17136us; 128us; 17136us; 133us; 17136us; 140us; 17136us; 147us; 17136us; 150us; 17136us; 151us; 17136us; 152us; 17136us; 153us; 17136us; 154us; 17136us; 155us; 17136us; 156us; 17136us; 157us; 17136us; 158us; 17136us; 159us; 17136us; 160us; 17136us; 161us; 17136us; 162us; 17136us; 164us; 17136us; 165us; 17136us; 177us; 17136us; 178us; 17136us; 179us; 17136us; 180us; 17136us; 0us; 17120us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17121us; 58us; 17121us; 10us; 17138us; 13us; 17138us; 14us; 17138us; 16us; 17138us; 17us; 17138us; 18us; 17138us; 23us; 17138us; 27us; 17138us; 29us; 17138us; 31us; 17138us; 33us; 17138us; 35us; 17138us; 36us; 17138us; 37us; 17138us; 39us; 17138us; 40us; 17138us; 42us; 17138us; 43us; 17138us; 44us; 17138us; 46us; 17138us; 52us; 17138us; 63us; 17138us; 64us; 17138us; 65us; 17138us; 75us; 17138us; 78us; 17138us; 83us; 17138us; 95us; 17138us; 98us; 17138us; 100us; 17138us; 106us; 17138us; 109us; 17138us; 118us; 17138us; 122us; 17138us; 123us; 17138us; 128us; 17138us; 133us; 17138us; 140us; 17138us; 147us; 17138us; 150us; 17138us; 151us; 17138us; 152us; 17138us; 153us; 17138us; 154us; 17138us; 155us; 17138us; 156us; 17138us; 157us; 17138us; 158us; 17138us; 159us; 17138us; 160us; 17138us; 161us; 17138us; 162us; 17138us; 164us; 17138us; 165us; 17138us; 177us; 17138us; 178us; 17138us; 179us; 17138us; 180us; 17138us; 1us; 17145us; 71us; 1390us; 1us; 17145us; 71us; 1389us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17122us; 58us; 17122us; 10us; 17139us; 13us; 17139us; 14us; 17139us; 16us; 17139us; 17us; 17139us; 18us; 17139us; 23us; 17139us; 27us; 17139us; 29us; 17139us; 31us; 17139us; 33us; 17139us; 35us; 17139us; 36us; 17139us; 37us; 17139us; 39us; 17139us; 40us; 17139us; 42us; 17139us; 43us; 17139us; 44us; 17139us; 46us; 17139us; 52us; 17139us; 63us; 17139us; 64us; 17139us; 65us; 17139us; 75us; 17139us; 78us; 17139us; 83us; 17139us; 95us; 17139us; 98us; 17139us; 100us; 17139us; 106us; 17139us; 109us; 17139us; 118us; 17139us; 122us; 17139us; 123us; 17139us; 128us; 17139us; 133us; 17139us; 140us; 17139us; 147us; 17139us; 150us; 17139us; 151us; 17139us; 152us; 17139us; 153us; 17139us; 154us; 17139us; 155us; 17139us; 156us; 17139us; 157us; 17139us; 158us; 17139us; 159us; 17139us; 160us; 17139us; 161us; 17139us; 162us; 17139us; 164us; 17139us; 165us; 17139us; 177us; 17139us; 178us; 17139us; 179us; 17139us; 180us; 17139us; 2us; 32768us; 51us; 1394us; 86us; 1395us; 0us; 17123us; 2us; 32768us; 51us; 1396us; 86us; 1397us; 0us; 17124us; 2us; 32768us; 51us; 1398us; 86us; 1399us; 0us; 17125us; 1us; 32768us; 51us; 1400us; 0us; 17126us; 4us; 32768us; 10us; 860us; 84us; 1425us; 86us; 1402us; 180us; 858us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17129us; 1us; 17127us; 86us; 1406us; 2us; 32768us; 86us; 1406us; 146us; 1443us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17128us; 60us; 17130us; 10us; 17140us; 13us; 17140us; 14us; 17140us; 16us; 17140us; 17us; 17140us; 18us; 17140us; 23us; 17140us; 27us; 17140us; 29us; 17140us; 31us; 17140us; 33us; 17140us; 35us; 17140us; 36us; 17140us; 37us; 17140us; 39us; 17140us; 40us; 17140us; 42us; 17140us; 43us; 17140us; 44us; 17140us; 46us; 17140us; 52us; 17140us; 63us; 17140us; 64us; 17140us; 65us; 17140us; 68us; 1431us; 75us; 17140us; 78us; 17140us; 83us; 17140us; 95us; 17140us; 98us; 17140us; 100us; 17140us; 106us; 17140us; 109us; 17140us; 118us; 17140us; 122us; 17140us; 123us; 17140us; 128us; 17140us; 133us; 17140us; 140us; 17140us; 147us; 17140us; 150us; 17140us; 151us; 17140us; 152us; 17140us; 153us; 17140us; 154us; 17140us; 155us; 17140us; 156us; 17140us; 157us; 17140us; 158us; 17140us; 159us; 17140us; 160us; 17140us; 161us; 17140us; 162us; 17140us; 164us; 17140us; 165us; 17140us; 173us; 1411us; 177us; 17140us; 178us; 17140us; 179us; 17140us; 180us; 17140us; 2us; 17130us; 68us; 1431us; 173us; 1410us; 2us; 32768us; 53us; 1414us; 162us; 1412us; 2us; 32768us; 53us; 1415us; 162us; 1413us; 0us; 17131us; 58us; 17131us; 10us; 17141us; 13us; 17141us; 14us; 17141us; 16us; 17141us; 17us; 17141us; 18us; 17141us; 23us; 17141us; 27us; 17141us; 29us; 17141us; 31us; 17141us; 33us; 17141us; 35us; 17141us; 36us; 17141us; 37us; 17141us; 39us; 17141us; 40us; 17141us; 42us; 17141us; 43us; 17141us; 44us; 17141us; 46us; 17141us; 52us; 17141us; 63us; 17141us; 64us; 17141us; 65us; 17141us; 75us; 17141us; 78us; 17141us; 83us; 17141us; 95us; 17141us; 98us; 17141us; 100us; 17141us; 106us; 17141us; 109us; 17141us; 118us; 17141us; 122us; 17141us; 123us; 17141us; 128us; 17141us; 133us; 17141us; 140us; 17141us; 147us; 17141us; 150us; 17141us; 151us; 17141us; 152us; 17141us; 153us; 17141us; 154us; 17141us; 155us; 17141us; 156us; 17141us; 157us; 17141us; 158us; 17141us; 159us; 17141us; 160us; 17141us; 161us; 17141us; 162us; 17141us; 164us; 17141us; 165us; 17141us; 177us; 17141us; 178us; 17141us; 179us; 17141us; 180us; 17141us; 1us; 32768us; 162us; 1416us; 1us; 32768us; 162us; 1417us; 0us; 17132us; 58us; 17132us; 10us; 17142us; 13us; 17142us; 14us; 17142us; 16us; 17142us; 17us; 17142us; 18us; 17142us; 23us; 17142us; 27us; 17142us; 29us; 17142us; 31us; 17142us; 33us; 17142us; 35us; 17142us; 36us; 17142us; 37us; 17142us; 39us; 17142us; 40us; 17142us; 42us; 17142us; 43us; 17142us; 44us; 17142us; 46us; 17142us; 52us; 17142us; 63us; 17142us; 64us; 17142us; 65us; 17142us; 75us; 17142us; 78us; 17142us; 83us; 17142us; 95us; 17142us; 98us; 17142us; 100us; 17142us; 106us; 17142us; 109us; 17142us; 118us; 17142us; 122us; 17142us; 123us; 17142us; 128us; 17142us; 133us; 17142us; 140us; 17142us; 147us; 17142us; 150us; 17142us; 151us; 17142us; 152us; 17142us; 153us; 17142us; 154us; 17142us; 155us; 17142us; 156us; 17142us; 157us; 17142us; 158us; 17142us; 159us; 17142us; 160us; 17142us; 161us; 17142us; 162us; 17142us; 164us; 17142us; 165us; 17142us; 177us; 17142us; 178us; 17142us; 179us; 17142us; 180us; 17142us; 0us; 17137us; 8us; 32768us; 38us; 1476us; 58us; 1422us; 79us; 1419us; 82us; 1469us; 83us; 1423us; 162us; 1427us; 173us; 1472us; 176us; 1475us; 1us; 17143us; 68us; 1431us; 0us; 17144us; 0us; 17145us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 180us; 1428us; 3us; 32768us; 10us; 860us; 84us; 1425us; 180us; 858us; 0us; 17146us; 0us; 17147us; 0us; 17148us; 1us; 32768us; 84us; 1429us; 0us; 17149us; 0us; 17150us; 2us; 32768us; 38us; 1476us; 176us; 1475us; 3us; 17151us; 30us; 1435us; 68us; 1478us; 145us; 1437us; 0us; 17152us; 0us; 17153us; 1us; 32768us; 145us; 1437us; 0us; 17154us; 10us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 146us; 1438us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17155us; 2us; 32768us; 86us; 1441us; 146us; 1440us; 0us; 17156us; 9us; 32768us; 38us; 1476us; 58us; 1388us; 79us; 1419us; 82us; 1469us; 83us; 1375us; 162us; 1427us; 170us; 1345us; 173us; 1472us; 176us; 1475us; 0us; 17129us; 0us; 17157us; 8us; 32768us; 38us; 1476us; 58us; 1447us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 170us; 1468us; 173us; 1472us; 176us; 1475us; 3us; 32768us; 85us; 1466us; 146us; 1446us; 170us; 1467us; 0us; 17158us; 1us; 32768us; 146us; 1448us; 0us; 17159us; 1us; 17160us; 68us; 1478us; 0us; 17161us; 7us; 32768us; 38us; 1476us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 170us; 1468us; 173us; 1472us; 176us; 1475us; 3us; 32768us; 84us; 1453us; 85us; 1466us; 170us; 1467us; 0us; 17162us; 1us; 17163us; 173us; 1455us; 2us; 32768us; 53us; 1457us; 162us; 1456us; 0us; 17164us; 1us; 32768us; 162us; 1458us; 0us; 17165us; 0us; 17166us; 6us; 17167us; 38us; 1476us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 173us; 1472us; 176us; 1475us; 0us; 17168us; 0us; 17169us; 0us; 17170us; 0us; 17171us; 0us; 17172us; 7us; 32768us; 38us; 1476us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 170us; 1468us; 173us; 1472us; 176us; 1475us; 7us; 32768us; 38us; 1476us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 170us; 1468us; 173us; 1472us; 176us; 1475us; 7us; 32768us; 38us; 1476us; 82us; 1469us; 83us; 1451us; 162us; 1459us; 170us; 1468us; 173us; 1472us; 176us; 1475us; 1us; 32768us; 176us; 1475us; 0us; 17173us; 0us; 17174us; 1us; 32768us; 176us; 1475us; 1us; 17188us; 176us; 1475us; 0us; 17175us; 0us; 17176us; 0us; 17177us; 0us; 17178us; 2us; 32768us; 176us; 1475us; 180us; 1480us; 0us; 17179us; 0us; 17180us; 26us; 32768us; 50us; 1519us; 53us; 1501us; 54us; 1499us; 61us; 1503us; 66us; 1507us; 74us; 1511us; 80us; 1508us; 81us; 1509us; 85us; 1502us; 91us; 1504us; 129us; 1514us; 130us; 1510us; 140us; 1516us; 143us; 1513us; 145us; 1505us; 146us; 1506us; 166us; 1512us; 167us; 1500us; 168us; 1497us; 169us; 1496us; 170us; 1498us; 171us; 1491us; 172us; 1495us; 173us; 1494us; 174us; 1493us; 175us; 1492us; 1us; 32768us; 84us; 1483us; 0us; 17181us; 0us; 17182us; 1us; 32768us; 50us; 1486us; 3us; 32768us; 58us; 1488us; 84us; 1487us; 176us; 1518us; 0us; 17183us; 1us; 32768us; 50us; 1489us; 1us; 32768us; 84us; 1490us; 0us; 17184us; 0us; 17185us; 0us; 17186us; 0us; 17187us; 0us; 17188us; 0us; 17189us; 0us; 17190us; 0us; 17191us; 0us; 17192us; 0us; 17193us; 0us; 17194us; 0us; 17195us; 0us; 17196us; 0us; 17197us; 0us; 17198us; 0us; 17199us; 0us; 17200us; 0us; 17201us; 0us; 17202us; 0us; 17203us; 0us; 17204us; 0us; 17205us; 0us; 17206us; 0us; 17207us; 1us; 17208us; 129us; 1515us; 0us; 17209us; 1us; 32768us; 141us; 1517us; 0us; 17210us; 0us; 17211us; 1us; 32768us; 176us; 1518us; 0us; 17212us; 0us; 17213us; 0us; 17214us; 0us; 17215us; 1us; 17216us; 68us; 1526us; 0us; 17217us; 4us; 32768us; 83us; 1481us; 89us; 1484us; 176us; 1475us; 180us; 1528us; 0us; 17218us; 0us; 17219us; 0us; 17220us; 0us; 17221us; 0us; 17222us; 0us; 17223us; 3us; 17224us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 17225us; 0us; 17226us; 0us; 17227us; 2us; 17228us; 18us; 1536us; 75us; 1535us; 0us; 17229us; 3us; 17233us; 18us; 1532us; 59us; 1531us; 75us; 1530us; 0us; 17232us; 1us; 17234us; 75us; 1543us; 1us; 17235us; 18us; 1544us; 0us; 17236us; 0us; 17237us; 0us; 17238us; 0us; 17239us; 0us; 17240us; 0us; 17241us; 0us; 17242us; 0us; 17243us; 0us; 17245us; 0us; 17247us; 0us; 17249us; 0us; 17251us; 0us; 17253us; 0us; 17255us; 0us; 17257us; 0us; 17259us; 0us; 17261us; 0us; 17262us; 0us; 17263us; 0us; 17264us; 0us; 17265us; 0us; 17266us; 0us; 17267us; 0us; 17268us; 0us; 17269us; 0us; 17270us; 0us; 17272us; 0us; 17273us; 0us; 17275us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 13us; 14us; 93us; 94us; 102us; 103us; 104us; 105us; 106us; 108us; 109us; 112us; 113us; 114us; 115us; 116us; 117us; 118us; 119us; 124us; 125us; 130us; 131us; 136us; 137us; 143us; 144us; 150us; 151us; 157us; 158us; 171us; 172us; 176us; 247us; 272us; 273us; 276us; 277us; 279us; 280us; 285us; 286us; 289us; 290us; 292us; 293us; 298us; 299us; 303us; 306us; 308us; 311us; 313us; 316us; 317us; 320us; 321us; 323us; 325us; 338us; 339us; 342us; 343us; 346us; 347us; 349us; 351us; 430us; 431us; 435us; 440us; 455us; 456us; 457us; 461us; 532us; 612us; 613us; 614us; 615us; 627us; 631us; 633us; 634us; 635us; 640us; 641us; 642us; 646us; 650us; 662us; 663us; 667us; 672us; 673us; 751us; 755us; 757us; 758us; 759us; 764us; 765us; 766us; 767us; 771us; 842us; 870us; 948us; 949us; 950us; 954us; 959us; 964us; 982us; 983us; 1061us; 1062us; 1066us; 1071us; 1072us; 1073us; 1074us; 1078us; 1086us; 1087us; 1089us; 1090us; 1158us; 1159us; 1161us; 1163us; 1164us; 1165us; 1167us; 1173us; 1174us; 1175us; 1184us; 1187us; 1188us; 1190us; 1197us; 1199us; 1200us; 1204us; 1205us; 1206us; 1207us; 1208us; 1210us; 1288us; 1292us; 1293us; 1294us; 1295us; 1302us; 1306us; 1307us; 1308us; 1309us; 1313us; 1318us; 1321us; 1327us; 1328us; 1329us; 1330us; 1331us; 1334us; 1336us; 1338us; 1340us; 1342us; 1346us; 1350us; 1353us; 1355us; 1366us; 1368us; 1369us; 1436us; 1461us; 1463us; 1464us; 1476us; 1478us; 1480us; 1481us; 1493us; 1495us; 1496us; 1497us; 1499us; 1500us; 1506us; 1509us; 1511us; 1513us; 1514us; 1515us; 1521us; 1522us; 1526us; 1553us; 1554us; 1556us; 1559us; 1563us; 1590us; 1591us; 1592us; 1593us; 1626us; 1627us; 1629us; 1630us; 1632us; 1634us; 1635us; 1638us; 1646us; 1647us; 1648us; 1659us; 1661us; 1665us; 1667us; 1669us; 1671us; 1672us; 1674us; 1675us; 1676us; 1677us; 1679us; 1690us; 1691us; 1692us; 1698us; 1702us; 1703us; 1704us; 1706us; 1707us; 1712us; 1716us; 1717us; 1718us; 1724us; 1728us; 1729us; 1730us; 1735us; 1739us; 1740us; 1741us; 1742us; 1745us; 1754us; 1755us; 1759us; 1768us; 1769us; 1770us; 1771us; 1772us; 1773us; 1775us; 1776us; 1780us; 1781us; 1785us; 1788us; 1789us; 1790us; 1792us; 1796us; 1797us; 1801us; 1805us; 1816us; 1838us; 1840us; 1844us; 1848us; 1851us; 1853us; 1864us; 1867us; 1869us; 1870us; 1879us; 1886us; 1895us; 1902us; 1904us; 1905us; 1907us; 1908us; 1910us; 1911us; 1913us; 1924us; 1925us; 1929us; 1931us; 1932us; 1934us; 1936us; 1937us; 1972us; 1979us; 1980us; 1981us; 1985us; 1988us; 1990us; 1992us; 1994us; 2001us; 2002us; 2012us; 2014us; 2019us; 2021us; 2023us; 2025us; 2026us; 2028us; 2029us; 2030us; 2031us; 2033us; 2044us; 2045us; 2046us; 2052us; 2056us; 2057us; 2058us; 2063us; 2064us; 2069us; 2073us; 2074us; 2075us; 2080us; 2084us; 2085us; 2086us; 2087us; 2090us; 2099us; 2100us; 2109us; 2110us; 2112us; 2113us; 2115us; 2118us; 2119us; 2120us; 2122us; 2124us; 2125us; 2127us; 2163us; 2165us; 2167us; 2235us; 2236us; 2272us; 2274us; 2278us; 2346us; 2347us; 2348us; 2350us; 2351us; 2355us; 2359us; 2375us; 2402us; 2403us; 2404us; 2406us; 2408us; 2409us; 2418us; 2426us; 2427us; 2429us; 2433us; 2436us; 2438us; 2449us; 2452us; 2454us; 2455us; 2456us; 2458us; 2459us; 2461us; 2462us; 2497us; 2499us; 2501us; 2569us; 2571us; 2572us; 2574us; 2575us; 2577us; 2581us; 2582us; 2583us; 2587us; 2588us; 2589us; 2590us; 2591us; 2592us; 2593us; 2596us; 2600us; 2601us; 2608us; 2612us; 2613us; 2619us; 2623us; 2624us; 2633us; 2663us; 2664us; 2691us; 2693us; 2694us; 2695us; 2697us; 2698us; 2699us; 2702us; 2703us; 2704us; 2706us; 2710us; 2711us; 2712us; 2713us; 2716us; 2728us; 2729us; 2732us; 2736us; 2739us; 2741us; 2742us; 2743us; 2744us; 2745us; 2749us; 2761us; 2762us; 2763us; 2764us; 2767us; 2771us; 2772us; 2773us; 2775us; 2776us; 2777us; 2778us; 2779us; 2780us; 2781us; 2787us; 2791us; 2794us; 2796us; 2797us; 2798us; 2800us; 2803us; 2804us; 2807us; 2809us; 2811us; 2814us; 2815us; 2816us; 2819us; 2820us; 2822us; 2824us; 2826us; 2827us; 2828us; 2830us; 2834us; 2836us; 2838us; 2839us; 2840us; 2861us; 2866us; 2868us; 2870us; 2872us; 2877us; 2878us; 2879us; 2882us; 2884us; 2894us; 2895us; 2898us; 2908us; 2909us; 2915us; 2916us; 2920us; 2921us; 2922us; 2924us; 2926us; 2927us; 2930us; 2932us; 2935us; 2937us; 2939us; 2941us; 2943us; 2945us; 2946us; 2949us; 2950us; 2951us; 2953us; 2954us; 2956us; 2958us; 2959us; 2962us; 2963us; 2965us; 2967us; 2968us; 2972us; 2976us; 2981us; 2982us; 2992us; 2994us; 2995us; 3006us; 3008us; 3009us; 3028us; 3030us; 3031us; 3032us; 3061us; 3063us; 3064us; 3066us; 3068us; 3069us; 3074us; 3075us; 3094us; 3096us; 3134us; 3135us; 3145us; 3146us; 3147us; 3155us; 3164us; 3165us; 3168us; 3173us; 3174us; 3175us; 3177us; 3178us; 3182us; 3184us; 3186us; 3196us; 3197us; 3199us; 3200us; 3202us; 3203us; 3204us; 3206us; 3210us; 3212us; 3214us; 3215us; 3217us; 3227us; 3228us; 3231us; 3233us; 3236us; 3238us; 3240us; 3243us; 3244us; 3245us; 3313us; 3314us; 3316us; 3319us; 3323us; 3324us; 3392us; 3396us; 3397us; 3398us; 3399us; 3400us; 3401us; 3402us; 3403us; 3405us; 3409us; 3411us; 3414us; 3416us; 3419us; 3421us; 3422us; 3424us; 3426us; 3428us; 3429us; 3431us; 3432us; 3436us; 3443us; 3444us; 3446us; 3452us; 3454us; 3456us; 3457us; 3458us; 3459us; 3461us; 3463us; 3464us; 3468us; 3470us; 3471us; 3474us; 3476us; 3477us; 3479us; 3480us; 3481us; 3483us; 3519us; 3521us; 3523us; 3592us; 3593us; 3594us; 3661us; 3665us; 3666us; 3667us; 3668us; 3669us; 3671us; 3672us; 3676us; 3679us; 3747us; 3748us; 3752us; 3753us; 3754us; 3757us; 3767us; 3768us; 3769us; 3770us; 3771us; 3772us; 3773us; 3774us; 3775us; 3776us; 3777us; 3778us; 3779us; 3780us; 3781us; 3782us; 3783us; 3785us; 3786us; 3787us; 3788us; 3789us; 3791us; 3793us; 3794us; 3800us; 3801us; 3803us; 3804us; 3806us; 3809us; 3819us; 3820us; 3824us; 3828us; 3829us; 3836us; 3840us; 3841us; 3842us; 3843us; 3845us; 3846us; 3847us; 3851us; 3853us; 3856us; 3859us; 3861us; 3863us; 3870us; 3877us; 3879us; 3880us; 3916us; 3952us; 3954us; 3955us; 3956us; 3992us; 4028us; 4064us; 4100us; 4123us; 4160us; 4161us; 4196us; 4197us; 4232us; 4233us; 4242us; 4244us; 4245us; 4282us; 4283us; 4318us; 4319us; 4354us; 4355us; 4356us; 4358us; 4359us; 4362us; 4364us; 4365us; 4402us; 4404us; 4405us; 4442us; 4444us; 4445us; 4446us; 4448us; 4450us; 4451us; 4452us; 4453us; 4454us; 4455us; 4456us; 4519us; 4523us; 4524us; 4525us; 4527us; 4528us; 4529us; 4536us; 4541us; 4545us; 4548us; 4552us; 4556us; 4559us; 4562us; 4569us; 4578us; 4588us; 4596us; 4598us; 4599us; 4636us; 4638us; 4640us; 4650us; 4651us; 4688us; 4725us; 4726us; 4763us; 4800us; 4837us; 4874us; 4875us; 4878us; 4879us; 4882us; 4883us; 4886us; 4923us; 4924us; 4961us; 4962us; 5029us; 5033us; 5034us; 5035us; 5036us; 5103us; 5105us; 5106us; 5131us; 5133us; 5134us; 5136us; 5146us; 5147us; 5176us; 5206us; 5236us; 5303us; 5304us; 5371us; 5372us; 5374us; 5441us; 5443us; 5444us; 5514us; 5515us; 5517us; 5518us; 5520us; 5588us; 5589us; 5590us; 5660us; 5661us; 5662us; 5731us; 5732us; 5733us; 5734us; 5735us; 5736us; 5803us; 5808us; 5809us; 5810us; 5877us; 5883us; 5884us; 5885us; 5953us; 5954us; 6023us; 6052us; 6053us; 6054us; 6055us; 6122us; 6123us; 6182us; 6183us; 6251us; 6252us; 6312us; 6313us; 6381us; 6410us; 6479us; 6484us; 6485us; 6486us; 6489us; 6490us; 6491us; 6494us; 6495us; 6533us; 6539us; 6608us; 6611us; 6612us; 6613us; 6616us; 6617us; 6620us; 6689us; 6694us; 6695us; 6696us; 6699us; 6700us; 6703us; 6771us; 6774us; 6775us; 6778us; 6779us; 6846us; 6871us; 6938us; 6963us; 6999us; 7067us; 7069us; 7071us; 7139us; 7140us; 7176us; 7244us; 7248us; 7250us; 7319us; 7320us; 7321us; 7388us; 7390us; 7392us; 7460us; 7461us; 7529us; 7533us; 7534us; 7536us; 7537us; 7604us; 7605us; 7630us; 7651us; 7661us; 7682us; 7701us; 7720us; 7730us; 7740us; 7750us; 7760us; 7770us; 7780us; 7790us; 7792us; 7801us; 7806us; 7811us; 7813us; 7815us; 7817us; 7842us; 7867us; 7892us; 7921us; 7944us; 7967us; 7993us; 8017us; 8041us; 8067us; 8093us; 8118us; 8145us; 8170us; 8180us; 8181us; 8191us; 8192us; 8202us; 8203us; 8270us; 8272us; 8340us; 8341us; 8343us; 8410us; 8477us; 8544us; 8611us; 8678us; 8745us; 8812us; 8879us; 8946us; 9013us; 9080us; 9147us; 9214us; 9281us; 9348us; 9415us; 9482us; 9549us; 9616us; 9617us; 9684us; 9686us; 9687us; 9726us; 9727us; 9766us; 9770us; 9771us; 9772us; 9773us; 9811us; 9812us; 9813us; 9814us; 9815us; 9817us; 9820us; 9858us; 9859us; 9860us; 9861us; 9928us; 9995us; 9996us; 10000us; 10001us; 10068us; 10070us; 10137us; 10141us; 10142us; 10143us; 10210us; 10212us; 10279us; 10283us; 10284us; 10285us; 10352us; 10353us; 10354us; 10421us; 10488us; 10531us; 10574us; 10575us; 10618us; 10661us; 10662us; 10705us; 10748us; 10749us; 10792us; 10835us; 10836us; 10879us; 10922us; 10923us; 10966us; 11009us; 11010us; 11020us; 11030us; 11033us; 11067us; 11095us; 11123us; 11124us; 11130us; 11131us; 11132us; 11175us; 11176us; 11219us; 11220us; 11255us; 11293us; 11294us; 11300us; 11334us; 11340us; 11346us; 11349us; 11351us; 11357us; 11391us; 11425us; 11427us; 11428us; 11462us; 11496us; 11503us; 11504us; 11506us; 11513us; 11514us; 11518us; 11522us; 11523us; 11526us; 11527us; 11528us; 11529us; 11597us; 11601us; 11602us; 11603us; 11605us; 11606us; 11607us; 11608us; 11609us; 11694us; 11696us; 11698us; 11700us; 11701us; 11703us; 11704us; 11773us; 11775us; 11776us; 11779us; 11780us; 11849us; 11852us; 11853us; 11922us; 11925us; 11926us; 11995us; 11997us; 11998us; 12065us; 12132us; 12133us; 12134us; 12135us; 12136us; 12137us; 12138us; 12139us; 12140us; 12141us; 12142us; 12211us; 12215us; 12216us; 12217us; 12219us; 12220us; 12221us; 12289us; 12358us; 12362us; 12363us; 12364us; 12366us; 12367us; 12435us; 12439us; 12440us; 12441us; 12443us; 12444us; 12515us; 12602us; 12689us; 12693us; 12694us; 12695us; 12696us; 12697us; 12707us; 12708us; 12710us; 12712us; 12714us; 12716us; 12783us; 12784us; 12785us; 12786us; 12788us; 12790us; 12792us; 12793us; 12862us; 12866us; 12867us; 12868us; 12870us; 12871us; 12872us; 12873us; 12874us; 12875us; 12876us; 12877us; 12944us; 13011us; 13078us; 13079us; 13148us; 13149us; 13150us; 13217us; 13284us; 13285us; 13294us; 13297us; 13324us; 13325us; 13328us; 13329us; 13397us; 13398us; 13401us; 13402us; 13405us; 13408us; 13476us; 13477us; 13480us; 13481us; 13484us; 13487us; 13555us; 13556us; 13559us; 13561us; 13562us; 13565us; 13568us; 13636us; 13637us; 13641us; 13643us; 13647us; 13648us; 13651us; 13652us; 13653us; 13654us; 13658us; 13659us; 13662us; 13664us; 13665us; 13669us; 13670us; 13674us; 13675us; 13679us; 13680us; 13684us; 13685us; 13694us; 13703us; 13707us; 13709us; 13710us; 13711us; 13712us; 13747us; 13749us; 13818us; 13819us; 13820us; 13855us; 13857us; 13927us; 13929us; 13930us; 13932us; 13933us; 13934us; 13936us; 13973us; 13974us; 13976us; 14013us; 14016us; 14017us; 14019us; 14020us; 14022us; 14027us; 14029us; 14034us; 14045us; 14046us; 14048us; 14059us; 14060us; 14062us; 14073us; 14074us; 14076us; 14087us; 14088us; 14098us; 14106us; 14115us; 14122us; 14124us; 14126us; 14135us; 14142us; 14150us; 14159us; 14166us; 14168us; 14170us; 14179us; 14186us; 14188us; 14198us; 14199us; 14208us; 14217us; 14218us; 14227us; 14228us; 14237us; 14238us; 14247us; 14256us; 14257us; 14266us; 14267us; 14275us; 14284us; 14285us; 14287us; 14288us; 14290us; 14292us; 14294us; 14298us; 14300us; 14301us; 14308us; 14309us; 14368us; 14370us; 14372us; 14373us; 14432us; 14433us; 14492us; 14503us; 14514us; 14516us; 14518us; 14523us; 14528us; 14529us; 14588us; 14589us; 14599us; 14609us; 14610us; 14669us; 14671us; 14673us; 14683us; 14693us; 14694us; 14753us; 14756us; 14757us; 14760us; 14761us; 14764us; 14765us; 14767us; 14768us; 14773us; 14783us; 14784us; 14786us; 14789us; 14799us; 14800us; 14861us; 14864us; 14867us; 14870us; 14871us; 14930us; 14932us; 14934us; 14935us; 14994us; 14995us; 15004us; 15006us; 15007us; 15008us; 15019us; 15023us; 15024us; 15025us; 15026us; 15028us; 15029us; 15030us; 15033us; 15037us; 15038us; 15039us; 15041us; 15042us; 15053us; 15054us; 15057us; 15058us; 15068us; 15069us; 15070us; 15079us; 15083us; 15084us; 15086us; 15087us; 15089us; 15090us; 15098us; 15102us; 15103us; 15105us; 15108us; 15109us; 15111us; 15112us; 15113us; 15120us; 15121us; 15122us; 15123us; 15124us; 15125us; 15133us; 15141us; 15149us; 15151us; 15152us; 15153us; 15155us; 15157us; 15158us; 15159us; 15160us; 15161us; 15164us; 15165us; 15166us; 15193us; 15195us; 15196us; 15197us; 15199us; 15203us; 15204us; 15206us; 15208us; 15209us; 15210us; 15211us; 15212us; 15213us; 15214us; 15215us; 15216us; 15217us; 15218us; 15219us; 15220us; 15221us; 15222us; 15223us; 15224us; 15225us; 15226us; 15227us; 15228us; 15229us; 15230us; 15231us; 15232us; 15234us; 15235us; 15237us; 15238us; 15239us; 15241us; 15242us; 15243us; 15244us; 15245us; 15247us; 15248us; 15253us; 15254us; 15255us; 15256us; 15257us; 15258us; 15259us; 15263us; 15264us; 15265us; 15266us; 15269us; 15270us; 15274us; 15275us; 15277us; 15279us; 15280us; 15281us; 15282us; 15283us; 15284us; 15285us; 15286us; 15287us; 15288us; 15289us; 15290us; 15291us; 15292us; 15293us; 15294us; 15295us; 15296us; 15297us; 15298us; 15299us; 15300us; 15301us; 15302us; 15303us; 15304us; 15305us; 15306us; 15307us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 0us; 2us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 2us; 3us; 2us; 2us; 3us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 4us; 1us; 2us; 2us; 1us; 4us; 4us; 1us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 1us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 0us; 3us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 3us; 5us; 3us; 1us; 0us; 1us; 2us; 5us; 1us; 3us; 3us; 5us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 8us; 5us; 3us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 9us; 4us; 4us; 3us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 2us; 5us; 2us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 3us; 5us; 3us; 5us; 5us; 5us; 5us; 5us; 4us; 2us; 2us; 7us; 7us; 7us; 5us; 3us; 4us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 5us; 3us; 3us; 3us; 5us; 7us; 9us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 0us; 2us; 6us; 1us; 1us; 5us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 2us; 3us; 3us; 3us; 5us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 0us; 6us; 5us; 7us; 8us; 5us; 0us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 1us; 1us; 4us; 4us; 5us; 5us; 4us; 3us; 4us; 5us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 1us; 3us; 4us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 2us; 3us; 4us; 1us; 2us; 2us; 3us; 6us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 2us; 0us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 4us; 5us; 5us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 12us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 16us; 17us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 30us; 30us; 31us; 31us; 31us; 31us; 31us; 32us; 32us; 33us; 33us; 33us; 33us; 33us; 33us; 33us; 34us; 34us; 35us; 35us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 37us; 38us; 39us; 39us; 39us; 39us; 39us; 39us; 39us; 40us; 41us; 41us; 42us; 42us; 42us; 43us; 43us; 44us; 44us; 45us; 46us; 46us; 47us; 47us; 48us; 48us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 55us; 55us; 55us; 55us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 59us; 59us; 59us; 60us; 60us; 60us; 60us; 61us; 61us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 63us; 64us; 64us; 65us; 65us; 65us; 65us; 66us; 66us; 67us; 67us; 67us; 68us; 68us; 68us; 68us; 69us; 69us; 70us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 74us; 75us; 75us; 76us; 76us; 77us; 77us; 77us; 77us; 77us; 77us; 77us; 77us; 77us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 80us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 84us; 84us; 85us; 85us; 86us; 86us; 87us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 91us; 91us; 92us; 92us; 93us; 93us; 94us; 94us; 94us; 95us; 95us; 95us; 96us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 101us; 102us; 103us; 103us; 103us; 104us; 105us; 105us; 106us; 106us; 107us; 107us; 108us; 108us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 110us; 110us; 110us; 111us; 112us; 112us; 113us; 113us; 113us; 113us; 114us; 114us; 114us; 115us; 115us; 115us; 116us; 116us; 117us; 117us; 117us; 118us; 118us; 119us; 120us; 121us; 122us; 123us; 124us; 125us; 125us; 126us; 126us; 127us; 128us; 128us; 129us; 130us; 131us; 132us; 132us; 132us; 132us; 133us; 133us; 134us; 135us; 135us; 135us; 136us; 136us; 137us; 137us; 138us; 138us; 138us; 138us; 138us; 139us; 139us; 140us; 141us; 141us; 142us; 142us; 143us; 143us; 144us; 144us; 144us; 145us; 146us; 146us; 147us; 148us; 148us; 149us; 149us; 149us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 150us; 151us; 151us; 152us; 153us; 153us; 153us; 153us; 154us; 154us; 155us; 155us; 155us; 155us; 155us; 156us; 156us; 156us; 156us; 156us; 156us; 157us; 157us; 158us; 158us; 159us; 159us; 159us; 159us; 159us; 159us; 160us; 160us; 160us; 160us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 167us; 167us; 168us; 169us; 169us; 169us; 170us; 170us; 170us; 171us; 171us; 172us; 172us; 173us; 173us; 174us; 174us; 174us; 174us; 174us; 174us; 175us; 175us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 177us; 177us; 178us; 178us; 178us; 179us; 179us; 179us; 179us; 180us; 181us; 181us; 181us; 181us; 182us; 182us; 183us; 184us; 185us; 185us; 185us; 186us; 186us; 186us; 186us; 186us; 186us; 187us; 187us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 193us; 193us; 193us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 195us; 195us; 195us; 195us; 196us; 196us; 196us; 197us; 197us; 197us; 198us; 198us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 200us; 201us; 201us; 201us; 202us; 202us; 202us; 203us; 203us; 204us; 204us; 205us; 205us; 206us; 207us; 207us; 207us; 208us; 209us; 209us; 210us; 210us; 211us; 211us; 212us; 212us; 212us; 213us; 213us; 213us; 213us; 213us; 214us; 214us; 215us; 215us; 215us; 216us; 216us; 216us; 217us; 217us; 218us; 218us; 218us; 219us; 220us; 220us; 220us; 221us; 222us; 222us; 223us; 223us; 223us; 223us; 223us; 224us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 228us; 228us; 229us; 229us; 230us; 230us; 231us; 231us; 231us; 231us; 231us; 231us; 232us; 232us; 233us; 233us; 233us; 233us; 234us; 234us; 234us; 235us; 235us; 236us; 236us; 237us; 237us; 238us; 238us; 238us; 238us; 238us; 238us; 238us; 239us; 239us; 239us; 239us; 240us; 241us; 241us; 242us; 242us; 242us; 243us; 243us; 243us; 243us; 243us; 243us; 243us; 244us; 244us; 244us; 245us; 245us; 245us; 245us; 245us; 245us; 245us; 245us; 245us; 245us; 246us; 246us; 247us; 247us; 247us; 248us; 248us; 249us; 249us; 249us; 250us; 250us; 250us; 250us; 251us; 251us; 252us; 252us; 252us; 252us; 253us; 253us; 254us; 255us; 256us; 256us; 256us; 256us; 257us; 257us; 257us; 257us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 258us; 259us; 260us; 260us; 261us; 261us; 262us; 262us; 262us; 262us; 263us; 264us; 264us; 264us; 265us; 265us; 266us; 266us; 267us; 267us; 268us; 268us; 269us; 269us; 270us; 270us; 270us; 270us; 271us; 271us; 271us; 272us; 272us; 272us; 272us; 273us; 273us; 274us; 274us; 275us; 275us; 276us; 276us; 277us; 277us; 278us; 278us; 279us; 279us; 280us; 280us; 281us; 281us; 282us; 282us; 283us; 283us; 284us; 284us; 285us; 285us; 286us; 287us; 287us; 287us; 288us; 288us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 16392us; 16393us; 16395us; 16396us; 16397us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16401us; 65535us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 65535us; 16421us; 65535us; 16423us; 65535us; 16424us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 16427us; 16428us; 65535us; 65535us; 65535us; 16429us; 16430us; 16431us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 16434us; 16435us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 16439us; 65535us; 65535us; 65535us; 16441us; 16442us; 65535us; 16443us; 16444us; 16445us; 65535us; 65535us; 65535us; 65535us; 16447us; 16450us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16456us; 16457us; 16458us; 65535us; 65535us; 16459us; 65535us; 16460us; 65535us; 16461us; 65535us; 65535us; 16462us; 16463us; 65535us; 65535us; 16464us; 16465us; 65535us; 65535us; 16466us; 65535us; 65535us; 65535us; 16468us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 65535us; 65535us; 16474us; 16475us; 16476us; 65535us; 65535us; 16478us; 16479us; 16480us; 65535us; 65535us; 65535us; 65535us; 16481us; 16482us; 16483us; 16484us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16486us; 65535us; 65535us; 65535us; 16489us; 65535us; 65535us; 65535us; 16490us; 65535us; 65535us; 16491us; 16492us; 65535us; 16495us; 65535us; 65535us; 65535us; 65535us; 16496us; 16497us; 65535us; 16498us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 65535us; 16500us; 16501us; 16502us; 65535us; 16504us; 65535us; 16505us; 65535us; 65535us; 16506us; 65535us; 65535us; 16508us; 16509us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16510us; 65535us; 16511us; 16512us; 16513us; 65535us; 65535us; 16514us; 16515us; 65535us; 65535us; 16516us; 16517us; 65535us; 16518us; 65535us; 65535us; 16519us; 16520us; 65535us; 65535us; 16521us; 16522us; 65535us; 65535us; 16523us; 16524us; 16525us; 65535us; 65535us; 16526us; 65535us; 65535us; 16528us; 16529us; 16530us; 16531us; 16532us; 65535us; 16534us; 65535us; 16536us; 65535us; 65535us; 16537us; 16538us; 65535us; 65535us; 16540us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16541us; 65535us; 65535us; 65535us; 65535us; 65535us; 16544us; 65535us; 16545us; 65535us; 16546us; 65535us; 65535us; 16547us; 65535us; 65535us; 16548us; 65535us; 65535us; 16549us; 65535us; 65535us; 16552us; 16553us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16555us; 65535us; 16556us; 16557us; 16558us; 65535us; 65535us; 16559us; 16560us; 65535us; 65535us; 16561us; 16562us; 65535us; 16563us; 65535us; 65535us; 16564us; 16565us; 65535us; 65535us; 16566us; 16567us; 16568us; 65535us; 65535us; 16569us; 65535us; 16570us; 65535us; 16572us; 65535us; 65535us; 16573us; 16574us; 65535us; 65535us; 16576us; 65535us; 65535us; 65535us; 65535us; 65535us; 16577us; 65535us; 65535us; 65535us; 65535us; 16578us; 16579us; 65535us; 16581us; 65535us; 65535us; 65535us; 65535us; 16582us; 16583us; 65535us; 65535us; 16584us; 65535us; 65535us; 16585us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16586us; 16587us; 65535us; 16588us; 65535us; 16589us; 65535us; 65535us; 65535us; 65535us; 65535us; 16590us; 65535us; 16591us; 65535us; 65535us; 16592us; 16593us; 65535us; 16594us; 16596us; 16597us; 16598us; 16599us; 16600us; 65535us; 65535us; 16602us; 65535us; 65535us; 16604us; 65535us; 65535us; 16606us; 65535us; 65535us; 16608us; 65535us; 65535us; 16609us; 16610us; 65535us; 16612us; 16613us; 65535us; 16615us; 16616us; 65535us; 65535us; 16617us; 16618us; 16619us; 65535us; 65535us; 16620us; 65535us; 65535us; 65535us; 65535us; 16622us; 16623us; 16624us; 16625us; 65535us; 65535us; 16626us; 16627us; 16628us; 65535us; 65535us; 16629us; 16630us; 65535us; 16631us; 16632us; 16633us; 16634us; 16635us; 16636us; 65535us; 65535us; 65535us; 65535us; 16639us; 16640us; 65535us; 65535us; 16641us; 65535us; 65535us; 65535us; 65535us; 16642us; 16643us; 65535us; 16644us; 65535us; 65535us; 65535us; 16645us; 16646us; 65535us; 65535us; 65535us; 65535us; 16649us; 16650us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16656us; 16657us; 65535us; 65535us; 65535us; 16658us; 65535us; 65535us; 16659us; 65535us; 16660us; 65535us; 16661us; 16662us; 65535us; 65535us; 16663us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16664us; 65535us; 16665us; 16666us; 65535us; 16668us; 65535us; 65535us; 16669us; 65535us; 16671us; 65535us; 65535us; 16672us; 65535us; 65535us; 65535us; 16674us; 65535us; 65535us; 16675us; 65535us; 65535us; 16676us; 65535us; 65535us; 16677us; 16678us; 65535us; 65535us; 16679us; 65535us; 65535us; 16680us; 65535us; 16681us; 65535us; 65535us; 65535us; 16683us; 65535us; 16684us; 16686us; 65535us; 65535us; 16687us; 65535us; 65535us; 16689us; 16690us; 65535us; 16691us; 65535us; 65535us; 65535us; 65535us; 16692us; 65535us; 16693us; 65535us; 16694us; 16695us; 65535us; 65535us; 65535us; 65535us; 16696us; 65535us; 65535us; 16698us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16702us; 16703us; 65535us; 16704us; 65535us; 65535us; 65535us; 16705us; 65535us; 65535us; 16706us; 16707us; 16708us; 16709us; 16710us; 16711us; 16712us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16713us; 65535us; 65535us; 65535us; 16717us; 65535us; 16718us; 65535us; 65535us; 16720us; 65535us; 65535us; 65535us; 65535us; 16722us; 16723us; 16724us; 65535us; 65535us; 16725us; 65535us; 65535us; 16728us; 65535us; 65535us; 16729us; 65535us; 16731us; 16732us; 65535us; 65535us; 65535us; 65535us; 65535us; 16733us; 16734us; 65535us; 65535us; 16735us; 16736us; 16737us; 65535us; 65535us; 16739us; 65535us; 65535us; 65535us; 16741us; 65535us; 16742us; 16743us; 65535us; 65535us; 16744us; 16745us; 16746us; 16747us; 16748us; 16749us; 16750us; 16751us; 16752us; 16753us; 16754us; 16755us; 16756us; 16757us; 16758us; 16759us; 65535us; 16760us; 16761us; 16762us; 16763us; 65535us; 65535us; 16765us; 65535us; 16767us; 65535us; 16768us; 65535us; 65535us; 65535us; 16769us; 65535us; 65535us; 16772us; 65535us; 65535us; 16773us; 16774us; 16775us; 65535us; 16776us; 16777us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16778us; 65535us; 65535us; 65535us; 65535us; 16783us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16789us; 65535us; 16790us; 65535us; 16791us; 65535us; 65535us; 16793us; 65535us; 16794us; 65535us; 16795us; 65535us; 16796us; 16798us; 65535us; 16799us; 65535us; 65535us; 16800us; 65535us; 65535us; 16801us; 65535us; 65535us; 16802us; 16803us; 65535us; 65535us; 16804us; 16805us; 16806us; 16807us; 16808us; 16809us; 65535us; 65535us; 16810us; 16811us; 65535us; 16812us; 16813us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16816us; 65535us; 65535us; 65535us; 65535us; 16820us; 65535us; 65535us; 16823us; 65535us; 65535us; 65535us; 65535us; 16828us; 65535us; 16829us; 65535us; 16830us; 65535us; 65535us; 16833us; 65535us; 16834us; 65535us; 65535us; 16835us; 16836us; 16837us; 65535us; 65535us; 16838us; 65535us; 65535us; 16840us; 65535us; 65535us; 16842us; 65535us; 65535us; 65535us; 65535us; 16844us; 65535us; 16847us; 65535us; 65535us; 65535us; 16848us; 65535us; 16850us; 65535us; 16851us; 65535us; 65535us; 16852us; 16853us; 65535us; 16854us; 16855us; 65535us; 16856us; 16857us; 16858us; 16859us; 16860us; 65535us; 65535us; 16861us; 16862us; 65535us; 65535us; 16863us; 16864us; 65535us; 16865us; 65535us; 65535us; 16866us; 16867us; 16868us; 65535us; 65535us; 65535us; 65535us; 65535us; 16872us; 65535us; 16873us; 65535us; 65535us; 65535us; 65535us; 16875us; 16876us; 65535us; 16877us; 16878us; 65535us; 16879us; 65535us; 65535us; 65535us; 65535us; 16880us; 16881us; 65535us; 16882us; 65535us; 65535us; 65535us; 16883us; 16884us; 65535us; 16885us; 65535us; 65535us; 65535us; 16886us; 65535us; 16887us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16890us; 65535us; 65535us; 65535us; 65535us; 65535us; 16891us; 16892us; 65535us; 65535us; 65535us; 65535us; 16893us; 65535us; 65535us; 16894us; 65535us; 16895us; 65535us; 16896us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16897us; 65535us; 16898us; 65535us; 16899us; 65535us; 65535us; 65535us; 16901us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16923us; 65535us; 65535us; 16924us; 65535us; 16925us; 65535us; 65535us; 16926us; 16927us; 16928us; 65535us; 16929us; 16930us; 16931us; 16932us; 65535us; 65535us; 65535us; 16934us; 16935us; 16936us; 65535us; 65535us; 16939us; 65535us; 16940us; 65535us; 65535us; 65535us; 65535us; 16942us; 16943us; 65535us; 65535us; 65535us; 65535us; 16946us; 16947us; 65535us; 16948us; 16949us; 65535us; 65535us; 65535us; 65535us; 16952us; 65535us; 65535us; 16953us; 65535us; 65535us; 16954us; 65535us; 65535us; 16955us; 65535us; 65535us; 16956us; 65535us; 65535us; 16957us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16958us; 65535us; 16959us; 16960us; 65535us; 16961us; 65535us; 16962us; 65535us; 65535us; 16964us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16970us; 65535us; 65535us; 65535us; 16972us; 65535us; 65535us; 16973us; 65535us; 65535us; 16974us; 65535us; 16975us; 16976us; 16977us; 65535us; 65535us; 16978us; 16979us; 65535us; 16980us; 16981us; 16982us; 16983us; 65535us; 65535us; 65535us; 65535us; 16984us; 65535us; 16985us; 65535us; 65535us; 16986us; 65535us; 16987us; 65535us; 65535us; 16988us; 65535us; 65535us; 16989us; 65535us; 65535us; 16990us; 65535us; 65535us; 16994us; 16995us; 16996us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 17003us; 65535us; 65535us; 17004us; 17005us; 65535us; 17006us; 17007us; 65535us; 65535us; 65535us; 17008us; 17009us; 65535us; 17010us; 65535us; 65535us; 17011us; 17012us; 65535us; 17013us; 65535us; 65535us; 65535us; 65535us; 17014us; 17015us; 17016us; 17017us; 65535us; 17019us; 65535us; 65535us; 65535us; 65535us; 65535us; 17020us; 17021us; 17022us; 65535us; 65535us; 65535us; 17023us; 65535us; 65535us; 17024us; 17025us; 65535us; 17026us; 17027us; 17028us; 17029us; 17030us; 17032us; 17033us; 65535us; 65535us; 65535us; 17036us; 65535us; 17038us; 17039us; 65535us; 65535us; 17044us; 65535us; 65535us; 65535us; 65535us; 65535us; 17051us; 65535us; 65535us; 65535us; 17052us; 65535us; 65535us; 65535us; 65535us; 65535us; 17053us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17054us; 65535us; 65535us; 65535us; 17055us; 65535us; 65535us; 65535us; 17057us; 65535us; 17058us; 17060us; 17063us; 65535us; 17065us; 65535us; 65535us; 17066us; 65535us; 17067us; 65535us; 17068us; 65535us; 17070us; 65535us; 17071us; 65535us; 65535us; 65535us; 65535us; 17072us; 17073us; 17074us; 65535us; 65535us; 65535us; 17075us; 17076us; 65535us; 65535us; 65535us; 65535us; 17077us; 65535us; 17078us; 17079us; 65535us; 65535us; 17080us; 65535us; 65535us; 65535us; 17081us; 65535us; 17082us; 65535us; 65535us; 65535us; 65535us; 65535us; 17088us; 65535us; 65535us; 17089us; 65535us; 65535us; 17091us; 65535us; 65535us; 17093us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17101us; 65535us; 65535us; 17103us; 65535us; 17104us; 65535us; 17105us; 65535us; 65535us; 17107us; 65535us; 17108us; 65535us; 65535us; 17110us; 65535us; 17113us; 65535us; 65535us; 65535us; 65535us; 65535us; 17114us; 65535us; 17116us; 65535us; 65535us; 65535us; 17117us; 65535us; 17118us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17119us; 65535us; 17120us; 65535us; 65535us; 17121us; 65535us; 65535us; 65535us; 65535us; 65535us; 17122us; 65535us; 65535us; 17123us; 65535us; 17124us; 65535us; 17125us; 65535us; 17126us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17128us; 65535us; 65535us; 65535us; 65535us; 17131us; 65535us; 65535us; 65535us; 17132us; 65535us; 17137us; 65535us; 65535us; 17144us; 17145us; 65535us; 65535us; 17146us; 17147us; 17148us; 65535us; 17149us; 17150us; 65535us; 65535us; 17152us; 17153us; 65535us; 17154us; 65535us; 17155us; 65535us; 17156us; 65535us; 65535us; 17157us; 65535us; 65535us; 17158us; 65535us; 17159us; 65535us; 17161us; 65535us; 65535us; 17162us; 65535us; 65535us; 17164us; 65535us; 17165us; 17166us; 65535us; 17168us; 17169us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17173us; 17174us; 65535us; 65535us; 17175us; 17176us; 17177us; 17178us; 65535us; 17179us; 17180us; 65535us; 65535us; 17181us; 17182us; 65535us; 65535us; 17183us; 65535us; 65535us; 17184us; 17185us; 17186us; 17187us; 17188us; 17189us; 17190us; 17191us; 17192us; 17193us; 17194us; 17195us; 17196us; 17197us; 17198us; 17199us; 17200us; 17201us; 17202us; 17203us; 17204us; 17205us; 17206us; 17207us; 65535us; 17209us; 65535us; 17210us; 17211us; 65535us; 17212us; 17213us; 17214us; 17215us; 65535us; 17217us; 65535us; 17218us; 17219us; 17220us; 17221us; 17222us; 17223us; 65535us; 17225us; 17226us; 17227us; 65535us; 17229us; 65535us; 17232us; 65535us; 65535us; 17236us; 17237us; 17238us; 17239us; 17240us; 17241us; 17242us; 17243us; 17245us; 17247us; 17249us; 17251us; 17253us; 17255us; 17257us; 17259us; 17261us; 17262us; 17263us; 17264us; 17265us; 17266us; 17267us; 17268us; 17269us; 17270us; 17272us; 17273us; 17275us; |]
let _fsyacc_reductions ()  =    [| 
# 2434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 433 "pars.fsy"
                            IDefns (_1,lhs(parseState)) 
                   )
# 433 "pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 "pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(),rhs parseState 1));
                            IDefns ([],lhs(parseState)) 
                   )
# 435 "pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 "pars.fsy"
                            IDefns ([],lhs(parseState)) 
                   )
# 438 "pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 "pars.fsy"
                            ParsedHashDirective (_2,_3,lhs(parseState)) 
                   )
# 442 "pars.fsy"
                 : 'hashDirective));
# 2505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 "pars.fsy"
                                  _1 
                   )
# 445 "pars.fsy"
                 : 'stringOrKeywordString));
# 2516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 "pars.fsy"
                                          _1 
                   )
# 446 "pars.fsy"
                 : 'stringOrKeywordString));
# 2527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 449 "pars.fsy"
                                                 _1 
                   )
# 449 "pars.fsy"
                 : 'hashDirectiveArg));
# 2538 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 453 "pars.fsy"
                            [] 
                   )
# 453 "pars.fsy"
                 : 'hashDirectiveArgs));
# 2548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 "pars.fsy"
                            _1 @ [_2] 
                   )
# 455 "pars.fsy"
                 : 'hashDirectiveArgs));
# 2560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 "pars.fsy"
                                              
                   )
# 458 "pars.fsy"
                 : 'interactiveTerminator));
# 2570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 "pars.fsy"
                                  
                   )
# 459 "pars.fsy"
                 : 'interactiveTerminator));
# 2581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 "pars.fsy"
                                                  [] 
                   )
# 469 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 470 "pars.fsy"
                                                                        _1 
                   )
# 470 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 471 "pars.fsy"
                                                                        _1 
                   )
# 471 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 "pars.fsy"
                                                                        _1 
                   )
# 472 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 473 "pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 473 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 "pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 474 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 475 "pars.fsy"
                                                                                                   _1 @ _3 
                   )
# 475 "pars.fsy"
                 : 'interactiveItemsTerminator));
# 2667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 479 "pars.fsy"
                                                             _1 
                   )
# 479 "pars.fsy"
                 : 'interactiveModuleDefns));
# 2678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveModuleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 "pars.fsy"
                                                             _1 @ _2 
                   )
# 480 "pars.fsy"
                 : 'interactiveModuleDefns));
# 2690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1,rhs parseState 1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3,rhs parseState 3)] 
                   )
# 484 "pars.fsy"
                 : 'interactiveExpr));
# 2705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 489 "pars.fsy"
                                         [SynModuleDecl.HashDirective(_1,rhs parseState 1)] 
                   )
# 489 "pars.fsy"
                 : 'interactiveHash));
# 2716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 "pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 495 "pars.fsy"
                 : Ast.ParsedSigFile));
# 2728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 "pars.fsy"
                            _1 
                   )
# 497 "pars.fsy"
                 : Ast.ParsedSigFile));
# 2740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 "pars.fsy"
                            let emptySigFileFrag = AnonTopModuleSig([],rhs parseState 1) in 
                            ParsedSigFile([],[emptySigFileFrag]) 
                   )
# 503 "pars.fsy"
                 : Ast.ParsedSigFile));
# 2752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 "pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 508 "pars.fsy"
                 : Ast.ParsedImplFile));
# 2764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 "pars.fsy"
                            _1 
                   )
# 510 "pars.fsy"
                 : Ast.ParsedImplFile));
# 2776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 "pars.fsy"
                            let emptyImplFileFrag = AnonTopModule([],rhs parseState 1) in 
                            ParsedImplFile([],[emptyImplFileFrag]) 
                   )
# 516 "pars.fsy"
                 : Ast.ParsedImplFile));
# 2788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 "pars.fsy"
                                                  _3,grabXmlDoc(parseState,1),_2 
                   )
# 520 "pars.fsy"
                 : 'moduleIntro));
# 2800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 "pars.fsy"
                                          _2,grabXmlDoc(parseState,1)  
                   )
# 523 "pars.fsy"
                 : 'namespaceIntro));
# 2811 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "pars.fsy"
                             ParsedSigFile([],[ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 527 "pars.fsy"
                 : 'fileNamespaceSpecs));
# 2822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 "pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | AnonTopModuleSig(decls,m) -> decls  
                                 | NamespaceFragmentSig(_,_, decls, _,_,_) -> decls 
                                 | NamedTopModuleSig(ModuleOrNamespaceSig(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedSigFile(decls, _2) 
                   )
# 529 "pars.fsy"
                 : 'fileNamespaceSpecs));
# 2847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 545 "pars.fsy"
                                                                   _1 :: _2 
                   )
# 545 "pars.fsy"
                 : 'fileNamespaceSpecList));
# 2859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "pars.fsy"
                                             [_1] 
                   )
# 546 "pars.fsy"
                 : 'fileNamespaceSpecList));
# 2870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 "pars.fsy"
                            let path,xml = _2 in (_4 (path,xml)) 
                   )
# 550 "pars.fsy"
                 : 'fileNamespaceSpec));
# 2884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 554 "pars.fsy"
                             ParsedImplFile([], [ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 554 "pars.fsy"
                 : 'fileNamespaceImpls));
# 2895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 "pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | AnonTopModule(decls,m) -> decls  
                                 | NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | NamedTopModule(ModuleOrNamespace(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedImplFile(decls, _2) 
                   )
# 556 "pars.fsy"
                 : 'fileNamespaceImpls));
# 2920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "pars.fsy"
                                                                   _1 :: _2 
                   )
# 573 "pars.fsy"
                 : 'fileNamespaceImplList));
# 2932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 "pars.fsy"
                                             [_1] 
                   )
# 574 "pars.fsy"
                 : 'fileNamespaceImplList));
# 2943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 578 "pars.fsy"
                            let path,xml = _2 in (_4 (path,xml)) 
                   )
# 578 "pars.fsy"
                 : 'fileNamespaceImpl));
# 2957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 "pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             NamedTopModuleSig(ModuleOrNamespaceSig(lid,true, _4, xml,_1,vis,m)))  
                   )
# 582 "pars.fsy"
                 : 'fileModuleSpec));
# 2978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 591 "pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> AnonTopModuleSig(_1, m)  
                             | _ -> NamespaceFragmentSig(path,false, _1, xml,[],m))  
                   )
# 591 "pars.fsy"
                 : 'fileModuleSpec));
# 2993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmptyOrBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 599 "pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4) 
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             NamedTopModule(ModuleOrNamespace(lid,true, _4, xml,_1,vis,m))) 
                   )
# 599 "pars.fsy"
                 : 'fileModuleImpl));
# 3014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmptyOrBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 608 "pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> AnonTopModule(_1,m)  
                             | _ -> NamespaceFragment(path,false, _1, xml,[],m)) 
                   )
# 608 "pars.fsy"
                 : 'fileModuleImpl));
# 3029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 616 "pars.fsy"
                             _1 
                   )
# 616 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 618 "pars.fsy"
                             _2 
                   )
# 618 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 620 "pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 620 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 625 "pars.fsy"
                              
                              [] 
                            
                   )
# 625 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 631 "pars.fsy"
                             _1 
                   )
# 631 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 633 "pars.fsy"
                             [] 
                   )
# 633 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3100 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 635 "pars.fsy"
                             [] 
                   )
# 635 "pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 639 "pars.fsy"
                             _1 :: _3 
                   )
# 639 "pars.fsy"
                 : 'moduleSpfns));
# 3123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 641 "pars.fsy"
                             (* silent recovery *) _3 
                   )
# 641 "pars.fsy"
                 : 'moduleSpfns));
# 3135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 643 "pars.fsy"
                             [_1] 
                   )
# 643 "pars.fsy"
                 : 'moduleSpfns));
# 3147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 648 "pars.fsy"
                            _2 
                   )
# 648 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmptyOrBlock));
# 3159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 650 "pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 650 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmptyOrBlock));
# 3174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 655 "pars.fsy"
                              
                              [] 
                            
                   )
# 655 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmptyOrBlock));
# 3186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 659 "pars.fsy"
                            _1 
                   )
# 659 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmptyOrBlock));
# 3197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 663 "pars.fsy"
                            _1 
                   )
# 663 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 3208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 665 "pars.fsy"
                            [] 
                   )
# 665 "pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 3218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 670 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1,rhs parseState 1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3,rhs parseState 3) :: _5 
                   )
# 670 "pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 674 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1,rhs parseState 1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3,rhs parseState 3) ] 
                   )
# 674 "pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 678 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1,rhs parseState 1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3,rhs parseState 3) ] 
                   )
# 678 "pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 682 "pars.fsy"
                             _1 
                   )
# 682 "pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3277 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 684 "pars.fsy"
                            [] 
                   )
# 684 "pars.fsy"
                 : 'moduleDefnsOrExpr));
# 3287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 688 "pars.fsy"
                             _1 @ _2 
                   )
# 688 "pars.fsy"
                 : 'moduleDefns));
# 3299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 690 "pars.fsy"
                              _1 @ _3 
                   )
# 690 "pars.fsy"
                 : 'moduleDefns));
# 3312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 692 "pars.fsy"
                             _1 
                   )
# 692 "pars.fsy"
                 : 'moduleDefns));
# 3323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 694 "pars.fsy"
                             _1 
                   )
# 694 "pars.fsy"
                 : 'moduleDefns));
# 3335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 696 "pars.fsy"
                             _3 
                   )
# 696 "pars.fsy"
                 : 'moduleDefns));
# 3347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 700 "pars.fsy"
                             _1  
                   )
# 700 "pars.fsy"
                 : 'moduleDefnOrDirective));
# 3358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 702 "pars.fsy"
                             [ SynModuleDecl.HashDirective (_1,rhs2 parseState 1 1) ] 
                   )
# 702 "pars.fsy"
                 : 'moduleDefnOrDirective));
# 3369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 711 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             GlobalSynArgNameGenerator.Reset();
                             mkDefnBindings (rhs parseState 3,_3,_1,_2,rhs parseState 3)  
                   )
# 711 "pars.fsy"
                 : 'moduleDefn));
# 3384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 716 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             GlobalSynArgNameGenerator.Reset();
                             mkDefnBindings (rhs parseState 3,_3,_1,_2,rhs parseState 3)  
                   )
# 716 "pars.fsy"
                 : 'moduleDefn));
# 3399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 721 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let letm = rhs parseState 3 
                             mkDefnBindings (letm,_3,_1,_2,rhs parseState 3) 
                   )
# 721 "pars.fsy"
                 : 'moduleDefn));
# 3414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 726 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let      (TypeDefn(ComponentInfo(cas   ,a,cs,b,c,d,d2,d3),e,f,g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))
                             [ SynModuleDecl.Types(tc :: _5,rhs2 parseState 3 5) ] 
                   )
# 726 "pars.fsy"
                 : 'moduleDefn));
# 3431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 732 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionDefn(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (ExceptionDefn(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             [ SynModuleDecl.Exception(ec, rhs2 parseState 3 3) ] 
                   )
# 732 "pars.fsy"
                 : 'moduleDefn));
# 3447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 739 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attribs,(path,xml,vis) = _1,_3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                                 if isSome vis            then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate());
                                 [ SynModuleDecl.ModuleAbbrev(List.head path,eqn,rhs2 parseState 3 5) ]
                             | Choice2Of2 def -> 
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 let info = ComponentInfo(attribs,[],[],path,xml,false,vis,rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info,def,false,rhs2 parseState 3 5) ] 
                   )
# 739 "pars.fsy"
                 : 'moduleDefn));
# 3473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 754 "pars.fsy"
                             [SynModuleDecl.Open(_1,rhs parseState 1)] 
                   )
# 754 "pars.fsy"
                 : 'moduleDefn));
# 3484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 760 "pars.fsy"
                              _2 
                   )
# 760 "pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 3495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 762 "pars.fsy"
                              _1 
                   )
# 762 "pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 3506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 766 "pars.fsy"
                              
                              Choice2Of2 _2 
                            
                   )
# 766 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 770 "pars.fsy"
                              // BUG 2644 FSharp 1.0: 
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation , the first a module containing a single expression.
                              // This is a bit unfortunate. For F# v1 the resolution is in favour of 
                              // the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              // In a later version (Dev11) we could actually try resolving the names 
                              // to both expressions and module identifiers and base the resolution of that semantic lookup
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_,LongOrSingleIdent(false,path,_),_) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 770 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 799 "pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              Choice2Of2 _2 
                            
                   )
# 799 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 804 "pars.fsy"
                              
                              Choice2Of2 [] 
                            
                   )
# 804 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 808 "pars.fsy"
                             
                              Choice2Of2 _1 
                             
                   )
# 808 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 812 "pars.fsy"
                              
                              Choice1Of2 _1 
                             
                   )
# 812 "pars.fsy"
                 : 'namedModuleDefnBlock));
# 3608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 818 "pars.fsy"
                              _2 
                   )
# 818 "pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 820 "pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                              _2 
                   )
# 820 "pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 823 "pars.fsy"
                              [] 
                   )
# 823 "pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 3645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 827 "pars.fsy"
                              None 
                   )
# 827 "pars.fsy"
                 : 'opt_signature));
# 3655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 831 "pars.fsy"
                            _2 
                   )
# 831 "pars.fsy"
                 : 'tyconDefnAugmentation));
# 3667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 836 "pars.fsy"
                             SynModuleSigDecl.HashDirective (_1,rhs2 parseState 1 1)  
                   )
# 836 "pars.fsy"
                 : 'moduleSpfn));
# 3678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 838 "pars.fsy"
                             _1 
                   )
# 838 "pars.fsy"
                 : 'moduleSpfn));
# 3689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 841 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                             if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                             if isSome(vis)           then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate());
                             SynModuleSigDecl.ModuleAbbrev(List.head path,_5,rhs2 parseState 3 5) 
                   )
# 841 "pars.fsy"
                 : 'moduleSpfn));
# 3709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 849 "pars.fsy"
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName());
                             let info = ComponentInfo(_1,[],[],path,xml,false,vis,rhs parseState 3)
                             if isSome(_2) then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             SynModuleSigDecl.NestedModule(info,_5,rhs2 parseState 3 5) 
                   )
# 849 "pars.fsy"
                 : 'moduleSpfn));
# 3728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 856 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (TypeDefnSig(ComponentInfo(cas,a,cs,b,c,d,d2,d3),e,f,g)),rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h::t -> h,t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))in 
                             SynModuleSigDecl.Types (tc::rest,rhs parseState 3) 
                   )
# 856 "pars.fsy"
                 : 'moduleSpfn));
# 3747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 865 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionSig(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (ExceptionSig(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 865 "pars.fsy"
                 : 'moduleSpfn));
# 3763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 870 "pars.fsy"
                                     SynModuleSigDecl.Open (_2, rhs2 parseState 1 2) 
                   )
# 870 "pars.fsy"
                 : 'moduleSpfn));
# 3774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_literalValue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 874 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attr1,attr2,inlineFlag,mutableFlag,vis2,id,doc,explicitValTyparDecls,(ty,arity),konst = (_1),(_4),(_5),(_6),(_7),(_8),grabXmlDoc(parseState,3),(_9),(_11),(_12) 
                             if nonNil attr2 then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(),rhs parseState 4));
                             let m = rhs2 parseState 3 11 
                             let valSpfn = ValSpfn((attr1@attr2),id,explicitValTyparDecls,ty,arity,inlineFlag,mutableFlag,doc, vis2,konst,m) 
                             SynModuleSigDecl.Val(valSpfn,m)
                           
                   )
# 874 "pars.fsy"
                 : 'valSpfn));
# 3800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 883 "pars.fsy"
                           None 
                   )
# 883 "pars.fsy"
                 : 'opt_literalValue));
# 3810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 884 "pars.fsy"
                                           Some(_2) 
                   )
# 884 "pars.fsy"
                 : 'opt_literalValue));
# 3821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 888 "pars.fsy"
                                                                            _2 
                   )
# 888 "pars.fsy"
                 : 'moduleSpecBlock));
# 3832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 889 "pars.fsy"
                                                                                         _3 
                   )
# 889 "pars.fsy"
                 : 'moduleSpecBlock));
# 3844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 890 "pars.fsy"
                                                                               _2 
                   )
# 890 "pars.fsy"
                 : 'moduleSpecBlock));
# 3856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 893 "pars.fsy"
                                                                     _1 
                   )
# 893 "pars.fsy"
                 : 'opt_attributes));
# 3867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 894 "pars.fsy"
                                                                     [] 
                   )
# 894 "pars.fsy"
                 : 'opt_attributes));
# 3877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 898 "pars.fsy"
                            _1 
                   )
# 898 "pars.fsy"
                 : 'attributes));
# 3888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 900 "pars.fsy"
                            _1 @ _2 
                   )
# 900 "pars.fsy"
                 : 'attributes));
# 3900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 903 "pars.fsy"
                                                                                                     _2 
                   )
# 903 "pars.fsy"
                 : 'attributeList));
# 3913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 907 "pars.fsy"
                            [_1] 
                   )
# 907 "pars.fsy"
                 : 'attributeListElements));
# 3924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 909 "pars.fsy"
                            _1 @ [_3] 
                   )
# 909 "pars.fsy"
                 : 'attributeListElements));
# 3937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 913 "pars.fsy"
                            let arg = match _3 with None -> mkSynUnit (rangeOfLid _1) | Some e -> e 
                            { TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=rangeOfLid _1 } 
                   )
# 913 "pars.fsy"
                 : 'attribute));
# 3951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 916 "pars.fsy"
                            let arg = match _5 with None -> mkSynUnit (rangeOfLid _3) | Some e -> e 
                            { TypeName=_3; ArgExpr=arg; Target=Some _1; AppliesToGetterAndSetter=false; Range=rangeOfLid _3 } 
                   )
# 916 "pars.fsy"
                 : 'attribute));
# 3966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "pars.fsy"
                                  ident("module",lhs(parseState)) 
                   )
# 920 "pars.fsy"
                 : 'attributeTarget));
# 3976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 921 "pars.fsy"
                                ident("type",lhs(parseState)) 
                   )
# 921 "pars.fsy"
                 : 'attributeTarget));
# 3986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 922 "pars.fsy"
                                 _1 
                   )
# 922 "pars.fsy"
                 : 'attributeTarget));
# 3997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 923 "pars.fsy"
                                              if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError());
                                              ident("return",lhs(parseState)) 
                   )
# 923 "pars.fsy"
                 : 'attributeTarget));
# 4009 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 929 "pars.fsy"
                            _2 
                   )
# 929 "pars.fsy"
                 : Ast.SynTypeDefnSig list));
# 4020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 933 "pars.fsy"
                            _1 :: _3 
                   )
# 933 "pars.fsy"
                 : 'tyconSpfnList));
# 4032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 935 "pars.fsy"
                            [_1] 
                   )
# 935 "pars.fsy"
                 : 'tyconSpfnList));
# 4043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 939 "pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 939 "pars.fsy"
                 : 'tyconSpfn));
# 4056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 942 "pars.fsy"
                             TypeDefnSig(_1,SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs(parseState)),lhs(parseState)),_2,lhs(parseState)) 
                   )
# 942 "pars.fsy"
                 : 'tyconSpfn));
# 4068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 954 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 954 "pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 4085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 958 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 958 "pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 4099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnOrSpfnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 964 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.Simple (_1,m),augmentation,m)) 
                   )
# 964 "pars.fsy"
                 : 'tyconSpfnRhs));
# 4112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 968 "pars.fsy"
                            let m = lhs(parseState) 
                            let needsCheck,(kind,decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then 
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (kind,decls,m),augmentation,m)) 
                   )
# 968 "pars.fsy"
                 : 'tyconSpfnRhs));
# 4128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 975 "pars.fsy"
                            let m = lhs(parseState) 
                            let ty,arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m),AbstractMemberFlags MemberKind.Member,m) 
                            (fun nameRange nameInfo augmentation -> 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[],m)) 
                   )
# 975 "pars.fsy"
                 : 'tyconSpfnRhs));
# 4144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 984 "pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 984 "pars.fsy"
                 : 'tyconClassSpfn));
# 4156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 987 "pars.fsy"
                            false,(_1,_2) 
                   )
# 987 "pars.fsy"
                 : 'tyconClassSpfn));
# 4168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 989 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct());
                            false,(_1,_2) 
                   )
# 989 "pars.fsy"
                 : 'tyconClassSpfn));
# 4182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 992 "pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 992 "pars.fsy"
                 : 'tyconClassSpfn));
# 4194 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 997 "pars.fsy"
                            true, _2 
                   )
# 997 "pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 999 "pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                            false, _2 
                   )
# 999 "pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1003 "pars.fsy"
                            false, _2 
                   )
# 1003 "pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1005 "pars.fsy"
                            false, _2 
                   )
# 1005 "pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 4241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1010 "pars.fsy"
                             _2 
                   )
# 1010 "pars.fsy"
                 : 'classSpfnBlock));
# 4252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1012 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 1012 "pars.fsy"
                 : 'classSpfnBlock));
# 4265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1015 "pars.fsy"
                             _1 
                   )
# 1015 "pars.fsy"
                 : 'classSpfnBlock));
# 4276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1019 "pars.fsy"
                            _1 :: _3 
                   )
# 1019 "pars.fsy"
                 : 'classSpfnMembers));
# 4289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1021 "pars.fsy"
                            []  
                   )
# 1021 "pars.fsy"
                 : 'classSpfnMembers));
# 4299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1024 "pars.fsy"
                                           StaticMemberFlags 
                   )
# 1024 "pars.fsy"
                 : 'memberFlags));
# 4309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1025 "pars.fsy"
                                           NonVirtualMemberFlags 
                   )
# 1025 "pars.fsy"
                 : 'memberFlags));
# 4319 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1026 "pars.fsy"
                                           OverrideMemberFlags 
                   )
# 1026 "pars.fsy"
                 : 'memberFlags));
# 4329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1027 "pars.fsy"
                                          OverrideMemberFlags 
                   )
# 1027 "pars.fsy"
                 : 'memberFlags));
# 4339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1030 "pars.fsy"
                                       _1 
                   )
# 1030 "pars.fsy"
                 : 'memberSpecFlags));
# 4350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1031 "pars.fsy"
                                           AbstractMemberFlags 
                   )
# 1031 "pars.fsy"
                 : 'memberSpecFlags));
# 4360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1032 "pars.fsy"
                                           AbstractMemberFlags 
                   )
# 1032 "pars.fsy"
                 : 'memberSpecFlags));
# 4370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1036 "pars.fsy"
                           (fun arity -> (match arity with SynValInfo([],_) -> MemberKind.PropertyGet | _ -> MemberKind.Member)) 
                   )
# 1036 "pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1038 "pars.fsy"
                           (fun arity -> _2) 
                   )
# 1038 "pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1040 "pars.fsy"
                           (fun arity -> _2) 
                   )
# 1040 "pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1042 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            (fun arity -> _2) 
                   )
# 1042 "pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1048 "pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 1048 "pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1053 "pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 1053 "pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_literalValue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1061 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let inlineFlag,doc,vis2,id,explicitValTyparDecls,(ty,arity),optLiteralValue = _4,grabXmlDoc(parseState,3),_5,_6,_7,_9,_11
                            let m = rhs2 parseState 3 10 
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, inlineFlag,false,doc, vis2,optLiteralValue,m) 
                            SynMemberSig.Member(valSpfn, _3 (_10 arity),m) 
                   )
# 1061 "pars.fsy"
                 : 'classMemberSpfn));
# 4468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1067 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Interface (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 1067 "pars.fsy"
                 : 'classMemberSpfn));
# 4483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1070 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Inherit (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 1070 "pars.fsy"
                 : 'classMemberSpfn));
# 4497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1073 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let fld = _4 _1 false 
                            SynMemberSig.ValField(fld,rhs2 parseState 3 4) 
                   )
# 1073 "pars.fsy"
                 : 'classMemberSpfn));
# 4512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1077 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.ValField(_5 _1 true,rhs2 parseState 3 5) 
                   )
# 1077 "pars.fsy"
                 : 'classMemberSpfn));
# 4526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1080 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.NestedType(_5,rhs2 parseState 3 5) 
                   )
# 1080 "pars.fsy"
                 : 'classMemberSpfn));
# 4540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1083 "pars.fsy"
                            let vis,doc,(ty,valSynInfo) = _2,grabXmlDoc(parseState,3),_5 
                            let m = unionRanges (rhs parseState 3) ty.Range 
                            let inlineFlag = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, inlineFlag, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags,m) 
                   )
# 1083 "pars.fsy"
                 : 'classMemberSpfn));
# 4557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1091 "pars.fsy"
                            let typars,lid,fixity,tpcs1,vis,xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1,typars,(tpcs1 @ tpcs2),lid,xmlDoc,fixity,vis,rangeOfLid lid)  
                   )
# 1091 "pars.fsy"
                 : 'typeNameInfo));
# 4572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1097 "pars.fsy"
                            _2 :: _3 
                   )
# 1097 "pars.fsy"
                 : 'tyconDefnList));
# 4584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1099 "pars.fsy"
                            [] 
                   )
# 1099 "pars.fsy"
                 : 'tyconDefnList));
# 4594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1103 "pars.fsy"
                            TypeDefn(_1,SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(lhs(parseState)),lhs(parseState)),[],lhs(parseState)) 
                   )
# 1103 "pars.fsy"
                 : 'tyconDefn));
# 4605 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1105 "pars.fsy"
                            let nameRange = rhs parseState 1
                            let tcDefRepr,members = _3 nameRange
                            TypeDefn(_1,tcDefRepr,members,lhs(parseState)) 
                   )
# 1105 "pars.fsy"
                 : 'tyconDefn));
# 4619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnAugmentation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1109 "pars.fsy"
                            let m = lhs(parseState)
                            TypeDefn(_1,SynTypeDefnRepr.ObjectModel(TyconAugmentation,[],m),_2,m) 
                   )
# 1109 "pars.fsy"
                 : 'tyconDefn));
# 4632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1113 "pars.fsy"
                            let vis,spats, az = _3,_5,_6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr,members) = _8 nameRange
                            let (ComponentInfo(_,_,_,lid,_,_,_,_)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis,_2,spats,az,rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k,cspec,m) -> SynTypeDefnRepr.ObjectModel (k,memberCtorPattern::cspec,m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                           
                            TypeDefn(_1,tcDefRepr,members,lhs(parseState))  
                   )
# 1113 "pars.fsy"
                 : 'tyconDefn));
# 4659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1135 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1135 "pars.fsy"
                 : 'tyconDefnRhsBlock));
# 4675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1138 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1138 "pars.fsy"
                 : 'tyconDefnRhsBlock));
# 4688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnOrSpfnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1143 "pars.fsy"
                            let m = lhs(parseState) 
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation) 
                   )
# 1143 "pars.fsy"
                 : 'tyconDefnRhs));
# 4700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1146 "pars.fsy"
                            let needsCheck,(kind,decls) = _1 
                            let m = lhs(parseState) 
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                SynTypeDefnRepr.ObjectModel (kind,decls,m),augmentation) 
                   )
# 1146 "pars.fsy"
                 : 'tyconDefnRhs));
# 4716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1153 "pars.fsy"
                            let m = lhs(parseState) 
                            let ty,arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags MemberKind.Member,m) 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[]) 
                   )
# 1153 "pars.fsy"
                 : 'tyconDefnRhs));
# 4733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1163 "pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 1163 "pars.fsy"
                 : 'tyconClassDefn));
# 4745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1166 "pars.fsy"
                            false,(_1,_2) 
                   )
# 1166 "pars.fsy"
                 : 'tyconClassDefn));
# 4757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1168 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct());
                            false,(_1,_2) 
                   )
# 1168 "pars.fsy"
                 : 'tyconClassDefn));
# 4771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1171 "pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 1171 "pars.fsy"
                 : 'tyconClassDefn));
# 4783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1176 "pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                            false,_2 
                   )
# 1176 "pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 4796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1179 "pars.fsy"
                            true, _2 
                   )
# 1179 "pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 4807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1194 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 1194 "pars.fsy"
                 : 'classDefnBlock));
# 4820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1197 "pars.fsy"
                             _2 
                   )
# 1197 "pars.fsy"
                 : 'classDefnBlock));
# 4831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1199 "pars.fsy"
                             _1 
                   )
# 1199 "pars.fsy"
                 : 'classDefnBlock));
# 4842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1203 "pars.fsy"
                            _1 @  _3 
                   )
# 1203 "pars.fsy"
                 : 'classDefnMembers));
# 4855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1205 "pars.fsy"
                            _2 
                   )
# 1205 "pars.fsy"
                 : 'classDefnMembers));
# 4866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1207 "pars.fsy"
                            [] 
                   )
# 1207 "pars.fsy"
                 : 'classDefnMembers));
# 4876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1211 "pars.fsy"
                            _2  
                   )
# 1211 "pars.fsy"
                 : 'classDefnMemberGetSet));
# 4887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1213 "pars.fsy"
                            _2  
                   )
# 1213 "pars.fsy"
                 : 'classDefnMemberGetSet));
# 4898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1215 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            _2  
                   )
# 1215 "pars.fsy"
                 : 'classDefnMemberGetSet));
# 4910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1220 "pars.fsy"
                            [_1]  
                   )
# 1220 "pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 4921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1222 "pars.fsy"
                            [_1;_3] 
                   )
# 1222 "pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 4933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1226 "pars.fsy"
                            let rhsm = (_6 : SynExpr).Range 
                            (_1,_2,_3,_4,_6,rhsm) 
                   )
# 1226 "pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 4949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1232 "pars.fsy"
                             let rhsm = _5.Range 
                             let wholem = unionRanges (rhs2 parseState 3 4) rhsm 
                             let mpat = rhs parseState 2 
                             let optReturnType = _3 
                             let bindingBuilder,bindm = _2 
                             (fun vis memFlagsBuilder attrs -> 
                                  [ SynMemberDefn.Member (bindingBuilder (vis,_1,false,bindm,NoSequencePointAtInvisibleBinding,wholem,optReturnType,_5,rhsm,[],attrs,Some(memFlagsBuilder MemberKind.Member)),bindm) ]) 
                   )
# 1232 "pars.fsy"
                 : 'memberCore));
# 4969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1242 "pars.fsy"
                            let wholem = rhs2 parseState 2 4 
                            let propertyNameBindingBuilder,_ = _2 
                            let optPropertyType = _3 
                            let mutableFlag = false
                            (fun visNoLongerUsed memFlagsBuilder attrs -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.map (fun (optInline,optAttrs,(bindingBuilder,bindm),optReturnType,expr,exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs = optAttrs |> List.map (fun (a:SynAttribute) -> { a with AppliesToGetterAndSetter=true })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed,optInline,mutableFlag,bindm,NoSequencePointAtInvisibleBinding,wholem,optReturnType,expr,exprm,[],attrs,Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, pseudo, _, attrs, doc, valSynData, pv, _, _, bindm, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent ([id],_,_,_,_,_) ->  id.idText
                                                        | SynPat.Named (_,nm,_,_,_) ->  nm.idText
                                                        | SynPat.Typed (p,_,_) ->  go p
                                                        | SynPat.Attrib (p,_,_) ->  go p
                                                        | _ -> raiseParseErrorAt bindm (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then (
                                                  if !hasGet then raiseParseErrorAt bindm (FSComp.SR.parsGetAndOrSetRequired());
                                                  hasGet := true;
                                                  MemberKind.PropertyGet 
                                              ) else if getset = "set" then (
                                                  if !hasSet then raiseParseErrorAt bindm (FSComp.SR.parsGetAndOrSetRequired());
                                                  hasSet := true;
                                                  MemberKind.PropertySet 
                                              ) else 
                                                  raiseParseErrorAt bindm (FSComp.SR.parsGetAndOrSetRequired())
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(),bindm))
                                        | None -> ()
                                        end;
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet,_ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis,pseudo,mutableFlag,bindm,NoSequencePointAtInvisibleBinding,wholem,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, pseudo, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, bindm, spBind)) = binding 
                                     
                                        let (SynValData(_,valSynInfo,_)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = if List.length valueArg = 1 then valueArg else SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo with 
                                            | MemberKind.PropertyGet,SynValInfo ([],ret)          when not memFlags.IsInstance  -> raiseParseErrorAt bindm (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo ([thisArg],ret)   when memFlags.IsInstance      -> raiseParseErrorAt bindm (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo ([thisArg;indexOrUnitArgs],ret)   when memFlags.IsInstance      -> SynValInfo ([thisArg; indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo ([indexOrUnitArgs],ret)   when not memFlags.IsInstance      -> SynValInfo ([indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo _ -> raiseParseErrorAt bindm (FSComp.SR.parsGetterAtMostOneArgument()) 
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;valueArg],ret)   when memFlags.IsInstance      ->  SynValInfo ([thisArg; adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;indexArgs;valueArg],ret)   when memFlags.IsInstance -> SynValInfo ([thisArg;indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([valueArg],ret)   when not memFlags.IsInstance      -> SynValInfo ([adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([indexArgs;valueArg],ret)   when not memFlags.IsInstance      -> SynValInfo ([indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo _ -> raiseParseErrorAt bindm (FSComp.SR.parsSetterAtMostTwoArguments()) 
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt bindm (FSComp.SR.parsInvalidProperty())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo,None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding, 
                                        // replacing the get/set identifier. A little unpleasant. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis,optInline,mutableFlag,bindm,spBind,bindm,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_,_,_,_,_,doc2,_,bindingPatOuter,_,_,_,_)) = bindingOuter 
                                            
                                        
                                            let lidOuter,lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid,None,None,[],lidVisOuter,m) ->  lid,lidVisOuter
                                                | SynPat.Named (_,id,_,visOuter,m) -> [id],visOuter
                                                | p -> raiseParseErrorAt bindm (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner,lidVisOuter with 
                                                | None,None -> None
                                                | Some lidVisInner,None | None,Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(),bindm));
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent ([id],_,tyargs,args,lidVisInner,m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (indexPats,_),indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(indexPats@[valuePat],unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(args,unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText,id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter,Some(id),tyargs,args,mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Named (_,nm,_,lidVisInner,m) ->  SynPat.LongIdent (lidOuter,None,None,[],mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Typed (p,ty,m) ->  SynPat.Typed(go p,ty,m)
                                                | SynPat.Attrib (p,attribs,m) ->  SynPat.Attrib(go p,attribs,m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt bindm (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv,PreXmlDoc.Merge doc2 doc
                                        SynMemberDefn.Member (Binding (vis, NormalBinding, pseudo, mutableFlag, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, bindm, spBind),bindm)))
                            
                   )
# 1242 "pars.fsy"
                 : 'memberCore));
# 5107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1387 "pars.fsy"
                                   
                   )
# 1387 "pars.fsy"
                 : 'abstractMemberFlags));
# 5117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1388 "pars.fsy"
                                          
                   )
# 1388 "pars.fsy"
                 : 'abstractMemberFlags));
# 5127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1392 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(false,rhs2 parseState 3 3,_1,_2,_3)] 
                   )
# 1392 "pars.fsy"
                 : 'classDefnMember));
# 5141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1396 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(true,rhs2 parseState 3 4,_1,_2,_4)] 
                   )
# 1396 "pars.fsy"
                 : 'classDefnMember));
# 5155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1400 "pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            _4 _2 _3 _1 
                   )
# 1400 "pars.fsy"
                 : 'classDefnMember));
# 5171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1404 "pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(),rhs parseState 3));
                             [ SynMemberDefn.Interface (_4, _5,rhs2 parseState 3 4) ] 
                   )
# 1404 "pars.fsy"
                 : 'classDefnMember));
# 5188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1409 "pars.fsy"
                            let ty,arity = _8
                            let inlineFlag,doc,id,explicitValTyparDecls = _4,grabXmlDoc(parseState,3),_5,_6
                            let m = rhs2 parseState 3 9
                            if isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(),m));
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, inlineFlag,false,doc, None,None,m)
                            [ SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags (_9 arity), m) ] 
                   )
# 1409 "pars.fsy"
                 : 'classDefnMember));
# 5212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1417 "pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(),rhs parseState 1));
                             [ _3 ] 
                   )
# 1417 "pars.fsy"
                 : 'classDefnMember));
# 5227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1422 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.ValField(_4 _1 false,rhs2 parseState 3 4) ] 
                   )
# 1422 "pars.fsy"
                 : 'classDefnMember));
# 5241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1426 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.ValField(_5 _1 true,rhs2 parseState 3 5) ] 
                   )
# 1426 "pars.fsy"
                 : 'classDefnMember));
# 5255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1430 "pars.fsy"
                             let m = unionRanges (rhs2 parseState 3 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferArgSynInfoFromPat _4],SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent ([mkSynId (rhs parseState 3) "new"],None,Some noInferredTypars,[_4],vis,rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false);
                             [ SynMemberDefn.Member(Binding (None,NormalBinding,false,false,_1,grabXmlDoc(parseState,3),valSynData, declPat,None,expr,m,NoSequencePointAtInvisibleBinding),m) ] 
                   )
# 1430 "pars.fsy"
                 : 'classDefnMember));
# 5278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1440 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.NestedType(_5,None,rhs2 parseState 3 5) ] 
                   )
# 1440 "pars.fsy"
                 : 'classDefnMember));
# 5292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1444 "pars.fsy"
                                              (None,[ident(MangledGlobalName,rhs parseState 1)] @ _3) 
                   )
# 1444 "pars.fsy"
                 : 'atomicPatternLongIdent));
# 5303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1445 "pars.fsy"
                                  (None,_1) 
                   )
# 1445 "pars.fsy"
                 : 'atomicPatternLongIdent));
# 5314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1446 "pars.fsy"
                                         (Some(_1), _2) 
                   )
# 1446 "pars.fsy"
                 : 'atomicPatternLongIdent));
# 5326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1449 "pars.fsy"
                                  None 
                   )
# 1449 "pars.fsy"
                 : 'opt_access));
# 5336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1450 "pars.fsy"
                                  Some(_1) 
                   )
# 1450 "pars.fsy"
                 : 'opt_access));
# 5347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1453 "pars.fsy"
                                    SynAccess.Private 
                   )
# 1453 "pars.fsy"
                 : 'access));
# 5357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1454 "pars.fsy"
                                    SynAccess.Public 
                   )
# 1454 "pars.fsy"
                 : 'access));
# 5367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1455 "pars.fsy"
                                    SynAccess.Internal 
                   )
# 1455 "pars.fsy"
                 : 'access));
# 5377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1459 "pars.fsy"
                                  Some(_1) 
                   )
# 1459 "pars.fsy"
                 : 'opt_declVisibility));
# 5388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1460 "pars.fsy"
                            None 
                   )
# 1460 "pars.fsy"
                 : 'opt_declVisibility));
# 5398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1463 "pars.fsy"
                                                                  Some(_2) 
                   )
# 1463 "pars.fsy"
                 : 'opt_interfaceImplDefn));
# 5410 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1464 "pars.fsy"
                                                      None 
                   )
# 1464 "pars.fsy"
                 : 'opt_interfaceImplDefn));
# 5420 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1467 "pars.fsy"
                                                       _2 
                   )
# 1467 "pars.fsy"
                 : 'opt_classDefn));
# 5432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1468 "pars.fsy"
                                                     [] 
                   )
# 1468 "pars.fsy"
                 : 'opt_classDefn));
# 5442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1471 "pars.fsy"
                                                       _2 
                   )
# 1471 "pars.fsy"
                 : 'opt_classSpfn));
# 5454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1472 "pars.fsy"
                                              [] 
                   )
# 1472 "pars.fsy"
                 : 'opt_classSpfn));
# 5464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1477 "pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2,_3,mDecl) 
                   )
# 1477 "pars.fsy"
                 : 'inheritsDefn));
# 5477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1480 "pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2,_4,_5,mDecl) 
                   )
# 1480 "pars.fsy"
                 : 'inheritsDefn));
# 5492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1484 "pars.fsy"
                                  Some(_1) 
                   )
# 1484 "pars.fsy"
                 : 'optAsSpec));
# 5503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1485 "pars.fsy"
                                  None 
                   )
# 1485 "pars.fsy"
                 : 'optAsSpec));
# 5513 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1488 "pars.fsy"
                                    _2 
                   )
# 1488 "pars.fsy"
                 : 'asSpec));
# 5524 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1491 "pars.fsy"
                                    Some(_1) 
                   )
# 1491 "pars.fsy"
                 : 'optBaseSpec));
# 5535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1492 "pars.fsy"
                                  None 
                   )
# 1492 "pars.fsy"
                 : 'optBaseSpec));
# 5545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1496 "pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1496 "pars.fsy"
                 : 'baseSpec));
# 5558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1501 "pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1501 "pars.fsy"
                 : 'baseSpec));
# 5569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1507 "pars.fsy"
                             _2 
                   )
# 1507 "pars.fsy"
                 : 'objectImplementationBlock));
# 5580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1509 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 1509 "pars.fsy"
                 : 'objectImplementationBlock));
# 5593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1512 "pars.fsy"
                             _1 
                   )
# 1512 "pars.fsy"
                 : 'objectImplementationBlock));
# 5604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1515 "pars.fsy"
                                                                                           _1 @  _3 
                   )
# 1515 "pars.fsy"
                 : 'objectImplementationMembers));
# 5617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1516 "pars.fsy"
                                                               _1 
                   )
# 1516 "pars.fsy"
                 : 'objectImplementationMembers));
# 5629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1520 "pars.fsy"
                            _3 None OverrideMemberFlags _1 
                   )
# 1520 "pars.fsy"
                 : 'objectImplementationMember));
# 5643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1521 "pars.fsy"
                                                                 [] 
                   )
# 1521 "pars.fsy"
                 : 'objectImplementationMember));
# 5655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1524 "pars.fsy"
                                 
                   )
# 1524 "pars.fsy"
                 : 'memberOrOverride));
# 5665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1525 "pars.fsy"
                                   
                   )
# 1525 "pars.fsy"
                 : 'memberOrOverride));
# 5675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1530 "pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            if isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            SynTypeDefnSimpleRepr.TypeAbbrev (_3, lhs(parseState)) 
                   )
# 1530 "pars.fsy"
                 : 'tyconDefnOrSpfnSimpleRepr));
# 5690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1534 "pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_,_,_,_,_,m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(),m)); None),
                                                lhs(parseState))
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2, 
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 lhs(parseState)) 
                   )
# 1534 "pars.fsy"
                 : 'tyconDefnOrSpfnSimpleRepr));
# 5715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1548 "pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            SynTypeDefnSimpleRepr.Record (_2,_3,lhs(parseState)) 
                   )
# 1548 "pars.fsy"
                 : 'tyconDefnOrSpfnSimpleRepr));
# 5729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1554 "pars.fsy"
                            _2 
                   )
# 1554 "pars.fsy"
                 : 'braceFieldDeclList));
# 5740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1556 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 1556 "pars.fsy"
                 : 'braceFieldDeclList));
# 5753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1559 "pars.fsy"
                            [] 
                   )
# 1559 "pars.fsy"
                 : 'braceFieldDeclList));
# 5763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1562 "pars.fsy"
                                     TyconClass 
                   )
# 1562 "pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 5773 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1563 "pars.fsy"
                                     TyconInterface 
                   )
# 1563 "pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 5783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1564 "pars.fsy"
                                     TyconStruct 
                   )
# 1564 "pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 5793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1567 "pars.fsy"
                                     
                   )
# 1567 "pars.fsy"
                 : 'interfaceMember));
# 5803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1568 "pars.fsy"
                                                
                   )
# 1568 "pars.fsy"
                 : 'interfaceMember));
# 5813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1572 "pars.fsy"
                             [], _2,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 1572 "pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 5825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1574 "pars.fsy"
                             _2, _3,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 1574 "pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 5838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1576 "pars.fsy"
                             let tps,tpcs = _3 
                             tps, _2,true,tpcs,_1,grabXmlDoc(parseState,2) 
                   )
# 1576 "pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 5852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1580 "pars.fsy"
                                 [ TyparDecl([],_1) ] 
                   )
# 1580 "pars.fsy"
                 : 'prefixTyparDecls));
# 5863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1581 "pars.fsy"
                                                              List.rev _2 
                   )
# 1581 "pars.fsy"
                 : 'prefixTyparDecls));
# 5874 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1584 "pars.fsy"
                                                               _3 :: _1 
                   )
# 1584 "pars.fsy"
                 : 'prefixTyparDeclList));
# 5886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1585 "pars.fsy"
                                     [_1] 
                   )
# 1585 "pars.fsy"
                 : 'prefixTyparDeclList));
# 5897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1589 "pars.fsy"
                             TyparDecl(_1,_2) 
                   )
# 1589 "pars.fsy"
                 : 'typarDecl));
# 5909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1595 "pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             List.rev _3, _4 
                   )
# 1595 "pars.fsy"
                 : 'postfixTyparDecls));
# 5925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1602 "pars.fsy"
                             (List.rev _1,true) 
                   )
# 1602 "pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 5936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1604 "pars.fsy"
                             (List.rev _1,false) 
                   )
# 1604 "pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 5947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1606 "pars.fsy"
                             ([],false) 
                   )
# 1606 "pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 5957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1610 "pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             let tps,flex = _3 
                             SynValTyparDecls(tps,flex,_4) 
                   )
# 1610 "pars.fsy"
                 : 'explicitValTyparDecls));
# 5974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1616 "pars.fsy"
                             _1 
                   )
# 1616 "pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 5985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1618 "pars.fsy"
                             SynValTyparDecls([],true,[]) 
                   )
# 1618 "pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 5995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1622 "pars.fsy"
                             Some _1 
                   )
# 1622 "pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1624 "pars.fsy"
                             None 
                   )
# 1624 "pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1630 "pars.fsy"
                            [] 
                   )
# 1630 "pars.fsy"
                 : 'opt_typeConstraints));
# 6026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1632 "pars.fsy"
                            List.rev _2 
                   )
# 1632 "pars.fsy"
                 : 'opt_typeConstraints));
# 6037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1637 "pars.fsy"
                                                              _3 :: _1 
                   )
# 1637 "pars.fsy"
                 : 'typeConstraints));
# 6049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1638 "pars.fsy"
                                          [_1] 
                   )
# 1638 "pars.fsy"
                 : 'typeConstraints));
# 6060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1644 "pars.fsy"
                             libraryOnlyError (lhs(parseState)); WhereTyparDefaultsToType(_2,_4,lhs(parseState)) 
                   )
# 1644 "pars.fsy"
                 : 'typeConstraint));
# 6072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1646 "pars.fsy"
                             WhereTyparSubtypeOfType(_1,_3,lhs(parseState)) 
                   )
# 1646 "pars.fsy"
                 : 'typeConstraint));
# 6084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1648 "pars.fsy"
                             WhereTyparIsValueType(_1,lhs(parseState)) 
                   )
# 1648 "pars.fsy"
                 : 'typeConstraint));
# 6095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1650 "pars.fsy"
                             if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3));  
                             WhereTyparIsReferenceType(_1,lhs(parseState)) 
                   )
# 1650 "pars.fsy"
                 : 'typeConstraint));
# 6108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1653 "pars.fsy"
                             WhereTyparSupportsNull(_1,lhs(parseState)) 
                   )
# 1653 "pars.fsy"
                 : 'typeConstraint));
# 6119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1655 "pars.fsy"
                             WhereTyparSupportsMember([ _1 ],_4,lhs(parseState)) 
                   )
# 1655 "pars.fsy"
                 : 'typeConstraint));
# 6131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1657 "pars.fsy"
                             WhereTyparSupportsMember([ _2 ; _4 ],_8,lhs(parseState)) 
                   )
# 1657 "pars.fsy"
                 : 'typeConstraint));
# 6144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsNoHpaDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1659 "pars.fsy"
                             WhereTyparIsDelegate(_1,_4,lhs(parseState)) 
                   )
# 1659 "pars.fsy"
                 : 'typeConstraint));
# 6156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsNoHpaDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1661 "pars.fsy"
                             match _3 with 
                             | "enum" -> WhereTyparIsEnum(_1,_4,lhs(parseState))
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 1661 "pars.fsy"
                 : 'typeConstraint));
# 6171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1665 "pars.fsy"
                             match _3 with 
                             | "comparison" -> WhereTyparIsComparable(_1,lhs(parseState))
                             | "equality" -> WhereTyparIsEquatable(_1,lhs(parseState))
                             | "unmanaged" -> WhereTyparIsUnmanaged(_1,lhs(parseState))
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 1665 "pars.fsy"
                 : 'typeConstraint));
# 6187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1675 "pars.fsy"
                            _2 _1 
                   )
# 1675 "pars.fsy"
                 : 'unionRepr));
# 6199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1677 "pars.fsy"
                            _1 :: _3 _2 
                   )
# 1677 "pars.fsy"
                 : 'unionRepr));
# 6212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1679 "pars.fsy"
                            [_1] 
                   )
# 1679 "pars.fsy"
                 : 'unionRepr));
# 6223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1682 "pars.fsy"
                               grabXmlDoc(parseState,1) 
                   )
# 1682 "pars.fsy"
                 : 'barAndgrabXmlDoc));
# 6233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1685 "pars.fsy"
                                                                                  (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 1685 "pars.fsy"
                 : 'attrUnionCaseDecls));
# 6246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1686 "pars.fsy"
                                             (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 1686 "pars.fsy"
                 : 'attrUnionCaseDecls));
# 6257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1690 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields [],xmlDoc,None,mDecl))) 
                           
                   )
# 1690 "pars.fsy"
                 : 'attrUnionCaseDecl));
# 6274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1695 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields _5,xmlDoc,None,mDecl))) 
                           
                   )
# 1695 "pars.fsy"
                 : 'attrUnionCaseDecl));
# 6292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1700 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             libraryOnlyWarning(lhs(parseState));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFullType _5,xmlDoc,None,mDecl))) 
                           
                   )
# 1700 "pars.fsy"
                 : 'attrUnionCaseDecl));
# 6311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1706 "pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3,_5,xmlDoc,mDecl))) 
                           
                   )
# 1706 "pars.fsy"
                 : 'attrUnionCaseDecl));
# 6329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1713 "pars.fsy"
                             _1 
                   )
# 1713 "pars.fsy"
                 : 'unionCaseName));
# 6340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1715 "pars.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 1715 "pars.fsy"
                 : 'unionCaseName));
# 6350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1717 "pars.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 1717 "pars.fsy"
                 : 'unionCaseName));
# 6360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1721 "pars.fsy"
                             
                             Choice2Of2 (UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,rhs parseState 1)) 
                           
                   )
# 1721 "pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 6374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1725 "pars.fsy"
                             
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                           
                   )
# 1725 "pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 6389 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1729 "pars.fsy"
                             _1 
                   )
# 1729 "pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 6401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1733 "pars.fsy"
                            
                            Choice2Of2 (UnionCase ( [],_1,UnionCaseFields _3,PreXmlDoc.Empty,None,rhs2 parseState 1 3)) 
                         
                   )
# 1733 "pars.fsy"
                 : 'firstUnionCaseDecl));
# 6415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1737 "pars.fsy"
                             
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                           
                   )
# 1737 "pars.fsy"
                 : 'firstUnionCaseDecl));
# 6430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1743 "pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs(parseState))); 
                            _1 
                   )
# 1743 "pars.fsy"
                 : 'unionCaseRepr));
# 6442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1746 "pars.fsy"
                            List.map mkAnonField (_1 :: _3) 
                   )
# 1746 "pars.fsy"
                 : 'unionCaseRepr));
# 6454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1748 "pars.fsy"
                            [mkAnonField _1] 
                   )
# 1748 "pars.fsy"
                 : 'unionCaseRepr));
# 6465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1752 "pars.fsy"
                            _1 :: _3 
                   )
# 1752 "pars.fsy"
                 : 'recdFieldDeclList));
# 6478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1754 "pars.fsy"
                            [_1] 
                   )
# 1754 "pars.fsy"
                 : 'recdFieldDeclList));
# 6490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1758 "pars.fsy"
                            let fld = _2 _1 false 
                            let (Field(a,b,c,d,e,f,vis,g)) = fld 
                            if isSome vis then errorR(Error(FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            Field(a,b,c,d,e,f,None,g)  
                   )
# 1758 "pars.fsy"
                 : 'recdFieldDecl));
# 6505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1765 "pars.fsy"
                            let rhsm = rhs2 parseState 3 5 
                            (fun attrs stat -> Field(attrs, stat,Some _3,_5,_1,grabXmlDoc(parseState,3),_2,rhsm)) 
                   )
# 1765 "pars.fsy"
                 : 'fieldDecl));
# 6520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconCore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1771 "pars.fsy"
                            ExceptionDefn(_1,_2, lhs(parseState)) 
                   )
# 1771 "pars.fsy"
                 : 'exconDefn));
# 6532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconCore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1775 "pars.fsy"
                            ExceptionSig(_1,_2,lhs(parseState)) 
                   )
# 1775 "pars.fsy"
                 : 'exconSpfn));
# 6544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1778 "pars.fsy"
                                     grabXmlDoc(parseState,1) 
                   )
# 1778 "pars.fsy"
                 : 'exceptionAndGrabDoc));
# 6554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1782 "pars.fsy"
                            ExceptionDefnRepr(_2,_4, _5,_1,_3,lhs(parseState)) 
                   )
# 1782 "pars.fsy"
                 : 'exconCore));
# 6569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1786 "pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,lhs(parseState)) 
                   )
# 1786 "pars.fsy"
                 : 'exconIntro));
# 6580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1788 "pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields _3,PreXmlDoc.Empty,None,lhs(parseState)) 
                   )
# 1788 "pars.fsy"
                 : 'exconIntro));
# 6592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1791 "pars.fsy"
                                       None 
                   )
# 1791 "pars.fsy"
                 : 'exconRepr));
# 6602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1792 "pars.fsy"
                                       Some (_2) 
                   )
# 1792 "pars.fsy"
                 : 'exconRepr));
# 6613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1795 "pars.fsy"
                                      _2 
                   )
# 1795 "pars.fsy"
                 : 'openDecl));
# 6624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1799 "pars.fsy"
                             let letm = rhs parseState 1 
                             let isUse,isRec,bindingsPreAttrs = _1,_2,_3 
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(rhs parseState 1,isRec,isUse,(fun attrs vis -> 
                                 let binds = bindingsPreAttrs attrs vis letm 
                                 if not isRec && List.length binds > 1 then 
                                       reportParseErrorAt letm (FSComp.SR.parsLetAndForNonRecBindings()); 
                                 [],binds)) 
                   )
# 1799 "pars.fsy"
                 : 'defnBindings));
# 6644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1808 "pars.fsy"
                             BindingSetPreAttrs(lhs(parseState), false,false,_1)  
                   )
# 1808 "pars.fsy"
                 : 'defnBindings));
# 6655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1812 "pars.fsy"
                             let letm = rhs parseState 1 
                             let wholem = rhs2 parseState 1 2 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(letm,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,wholem)])) 
                   )
# 1812 "pars.fsy"
                 : 'doBinding));
# 6670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1821 "pars.fsy"
                             _4 (rhs parseState 1);  // report unterminated error 
                             let letm = rhs parseState 1 
                             let isUse,isRec,bindingsPreAttrs = _1,_2,_3 
                                
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(letm,isRec,isUse,(fun attrs vis -> 
                                 let binds = bindingsPreAttrs attrs vis letm 
                                 if not isRec && List.length binds > 1 then 
                                         reportParseErrorAt letm (FSComp.SR.parsLetAndForNonRecBindings()); 
                                 [],bindingsPreAttrs attrs vis letm)) 
                   )
# 1821 "pars.fsy"
                 : 'hardwhiteLetBindings));
# 6693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1834 "pars.fsy"
                             _3 (rhs parseState 1);  // report unterminated error 
                             let letm = rhs parseState 1 
                             let wholem = unionRanges letm _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(letm,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,wholem)])), _2 
                   )
# 1834 "pars.fsy"
                 : 'hardwhiteDoBinding));
# 6711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1843 "pars.fsy"
                                        _1 
                   )
# 1843 "pars.fsy"
                 : 'classDefnBindings));
# 6722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1844 "pars.fsy"
                                     _1 
                   )
# 1844 "pars.fsy"
                 : 'classDefnBindings));
# 6733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1845 "pars.fsy"
                                                _1 
                   )
# 1845 "pars.fsy"
                 : 'classDefnBindings));
# 6744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1846 "pars.fsy"
                                               fst _1 
                   )
# 1846 "pars.fsy"
                 : 'classDefnBindings));
# 6755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1851 "pars.fsy"
                            (fun m -> ()) 
                   )
# 1851 "pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 6765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1853 "pars.fsy"
                            (fun m -> reportParseErrorAt m (FSComp.SR.parsUnmatchedLetOrDo())) 
                   )
# 1853 "pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 6776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1857 "pars.fsy"
                             let rty,vis,nm,args  = _2,_3,_4,_7 
                             let xmlDoc = grabXmlDoc(parseState,1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let bindm = lhs(parseState)
                             let wholem = lhs(parseState)
                             let rhsm = lhs(parseState) 
                             let rhsExpr = SynExpr.App(ExprAtomicFlag.NonAtomic, SynExpr.Ident(ident("failwith",rhsm)),SynExpr.Const(SynConst.String("extern was not given a DllImport attribute",rhsm),rhsm),rhsm)
                             (fun attrs vis -> 
                                 let binding = mkSynBinding (xmlDoc,SynPat.LongIdent ([nm],None,Some(noInferredTypars),[SynPat.Tuple(args,argsm)],vis,nmm)) (vis,false,false,bindm,NoSequencePointAtInvisibleBinding,wholem,Some(rty),rhsExpr,rhsm,[],attrs,None)
                                 [], [binding]) 
                   )
# 1857 "pars.fsy"
                 : 'cPrototype));
# 6801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1871 "pars.fsy"
                            List.rev _1 
                   )
# 1871 "pars.fsy"
                 : 'cArgs));
# 6812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1873 "pars.fsy"
                            [_1] 
                   )
# 1873 "pars.fsy"
                 : 'cArgs));
# 6823 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1875 "pars.fsy"
                            [] 
                   )
# 1875 "pars.fsy"
                 : 'cArgs));
# 6833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1879 "pars.fsy"
                            _3 :: _1 
                   )
# 1879 "pars.fsy"
                 : 'cMoreArgs));
# 6845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1881 "pars.fsy"
                            [_3; _1] 
                   )
# 1881 "pars.fsy"
                 : 'cMoreArgs));
# 6857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1885 "pars.fsy"
                            let m = lhs(parseState) in SynPat.Typed(SynPat.Wild m,_2,m) |> addAttribs _1 
                   )
# 1885 "pars.fsy"
                 : 'cArg));
# 6869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1887 "pars.fsy"
                            let m = lhs(parseState) in SynPat.Typed(SynPat.Named (SynPat.Wild m,_3,false,None,m),_2,m) |> addAttribs _1 
                   )
# 1887 "pars.fsy"
                 : 'cArg));
# 6882 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1891 "pars.fsy"
                            let m = lhs(parseState) 
                            SynType.App(SynType.LongIdent(_1,m),[],false,m) 
                   )
# 1891 "pars.fsy"
                 : 'cType));
# 6894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1895 "pars.fsy"
                            let m = lhs(parseState) 
                            SynType.App(SynType.LongIdent([ident("[]",m)],m),[_1],true,m) 
                   )
# 1895 "pars.fsy"
                 : 'cType));
# 6907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1899 "pars.fsy"
                            let m = lhs(parseState) 
                            SynType.App(SynType.LongIdent([ident("nativeptr",m)],m),[_1],true,m) 
                   )
# 1899 "pars.fsy"
                 : 'cType));
# 6919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1903 "pars.fsy"
                            let m = lhs(parseState) 
                            SynType.App(SynType.LongIdent([ident("byref",m)],m),[_1],true,m) 
                   )
# 1903 "pars.fsy"
                 : 'cType));
# 6931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1907 "pars.fsy"
                            let m = lhs(parseState) 
                            SynType.App(SynType.LongIdent([ident("nativeint",m)],m),[],true,m) 
                   )
# 1907 "pars.fsy"
                 : 'cType));
# 6942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "pars.fsy"
                            (_2,SynArgInfo(_1,false,None)),rhs parseState 2 
                   )
# 1912 "pars.fsy"
                 : 'cRetType));
# 6954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1914 "pars.fsy"
                            let m = rhs parseState 2 
                            (SynType.App(SynType.LongIdent([ident("unit",m)],m),[],false,m),SynArgInfo(_1,false,None)),m 
                   )
# 1914 "pars.fsy"
                 : 'cRetType));
# 6966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1920 "pars.fsy"
                             (fun attrs vis letm -> 
                                match _1 with 
                                | Some f -> (f attrs vis letm true ::  _2) 
                                | None -> _2) 
                   )
# 1920 "pars.fsy"
                 : 'localBindings));
# 6981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "pars.fsy"
                             let letm = (rhs parseState 1)
                             (match _2 with 
                              | Some f -> f [] None letm false :: _3 
                              | None -> _3) 
                   )
# 1927 "pars.fsy"
                 : 'moreLocalBindings));
# 6996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1932 "pars.fsy"
                             [] 
                   )
# 1932 "pars.fsy"
                 : 'moreLocalBindings));
# 7006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1936 "pars.fsy"
                             Some(fun attrs vis letm _ -> 
                               _2 (attrs@_1) vis letm) 
                   )
# 1936 "pars.fsy"
                 : 'attr_localBinding));
# 7019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1939 "pars.fsy"
                             None 
                   )
# 1939 "pars.fsy"
                 : 'attr_localBinding));
# 7029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1943 "pars.fsy"
                             let (expr:SynExpr),opts = _6
                             let eqm = rhs parseState 5 
                             let rhsm = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, bindm = _3 
                             (fun attrs vis letm -> 
                                 let wholem = unionRanges letm rhsm
                                 let spBind = if IsControlFlowExpression expr then NoSequencePointAtLetBinding else SequencePointAtBinding(wholem)
                                 bindingBuilder (vis,_1,_2,bindm,spBind,wholem,optReturnType,expr,rhsm,opts,attrs,None)) 
                   )
# 1943 "pars.fsy"
                 : 'localBinding));
# 7052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1953 "pars.fsy"
                             let wholem = rhs2 parseState 3 5 
                             let rhsm = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder,bindm = _3 
                             (fun attrs vis letm -> 
                                 let spBind = SequencePointAtBinding(unionRanges letm rhsm)
                                 bindingBuilder (vis,_1,_2,bindm,spBind,wholem,optReturnType,arbExpr(parseState),rhsm,[],attrs,None))  
                   )
# 1953 "pars.fsy"
                 : 'localBinding));
# 7072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1963 "pars.fsy"
                             _2 
                   )
# 1963 "pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1965 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 1965 "pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1968 "pars.fsy"
                             _1 
                   )
# 1968 "pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "pars.fsy"
                                                                _1, List.rev _2 
                   )
# 1971 "pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 7119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1974 "pars.fsy"
                                                                      _2 :: _1 
                   )
# 1974 "pars.fsy"
                 : 'opt_staticOptimizations));
# 7131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "pars.fsy"
                           [] 
                   )
# 1975 "pars.fsy"
                 : 'opt_staticOptimizations));
# 7141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1978 "pars.fsy"
                                                                                      (_2,_4) 
                   )
# 1978 "pars.fsy"
                 : 'staticOptimization));
# 7153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1981 "pars.fsy"
                                                                                        _3 :: _1 
                   )
# 1981 "pars.fsy"
                 : 'staticOptimizationConditions));
# 7165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1982 "pars.fsy"
                                                       [_1 ] 
                   )
# 1982 "pars.fsy"
                 : 'staticOptimizationConditions));
# 7176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1985 "pars.fsy"
                                           WhenTyparTyconEqualsTycon(_1,_3,lhs(parseState)) 
                   )
# 1985 "pars.fsy"
                 : 'staticOptimizationCondition));
# 7188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1986 "pars.fsy"
                                        WhenTyparIsStruct(_1,lhs(parseState)) 
                   )
# 1986 "pars.fsy"
                 : 'staticOptimizationCondition));
# 7199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1987 "pars.fsy"
                                WhenInlined(rhs parseState 1) 
                   )
# 1987 "pars.fsy"
                 : 'staticOptimizationCondition));
# 7209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1990 "pars.fsy"
                                if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs(parseState)));
                                SynConst.SByte (fst _1) 
                   )
# 1990 "pars.fsy"
                 : 'rawConstant));
# 7221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1992 "pars.fsy"
                                 SynConst.Byte _1 
                   )
# 1992 "pars.fsy"
                 : 'rawConstant));
# 7232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1993 "pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs(parseState)));
                                 SynConst.Int16 (fst _1) 
                   )
# 1993 "pars.fsy"
                 : 'rawConstant));
# 7244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1995 "pars.fsy"
                                  SynConst.UInt16 _1 
                   )
# 1995 "pars.fsy"
                 : 'rawConstant));
# 7255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1996 "pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs(parseState)));
                                 SynConst.Int32 (fst _1) 
                   )
# 1996 "pars.fsy"
                 : 'rawConstant));
# 7267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1998 "pars.fsy"
                                  SynConst.UInt32 _1 
                   )
# 1998 "pars.fsy"
                 : 'rawConstant));
# 7278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1999 "pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs(parseState)));
                                 SynConst.Int64 (fst _1) 
                   )
# 1999 "pars.fsy"
                 : 'rawConstant));
# 7290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2001 "pars.fsy"
                                  SynConst.UInt64 _1 
                   )
# 2001 "pars.fsy"
                 : 'rawConstant));
# 7301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2002 "pars.fsy"
                                     SynConst.IntPtr _1 
                   )
# 2002 "pars.fsy"
                 : 'rawConstant));
# 7312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2003 "pars.fsy"
                                      SynConst.UIntPtr _1 
                   )
# 2003 "pars.fsy"
                 : 'rawConstant));
# 7323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2004 "pars.fsy"
                                  SynConst.Single _1 
                   )
# 2004 "pars.fsy"
                 : 'rawConstant));
# 7334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2005 "pars.fsy"
                                  SynConst.Double _1 
                   )
# 2005 "pars.fsy"
                 : 'rawConstant));
# 7345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2006 "pars.fsy"
                                SynConst.Char _1 
                   )
# 2006 "pars.fsy"
                 : 'rawConstant));
# 7356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2007 "pars.fsy"
                                   SynConst.Decimal _1 
                   )
# 2007 "pars.fsy"
                 : 'rawConstant));
# 7367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2008 "pars.fsy"
                                  SynConst.UserNum _1 
                   )
# 2008 "pars.fsy"
                 : 'rawConstant));
# 7378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2009 "pars.fsy"
                                                 SynConst.String (_1,lhs(parseState)) 
                   )
# 2009 "pars.fsy"
                 : 'rawConstant));
# 7389 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2010 "pars.fsy"
                                     SynConst.Bytes (_1,lhs(parseState)) 
                   )
# 2010 "pars.fsy"
                 : 'rawConstant));
# 7400 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2013 "pars.fsy"
                                       _1 
                   )
# 2013 "pars.fsy"
                 : 'constant));
# 7411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2014 "pars.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 2014 "pars.fsy"
                 : 'constant));
# 7423 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2018 "pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState,1)
                              mkSynBinding (xmlDoc,_1), rhs parseState 1 
                   )
# 2018 "pars.fsy"
                 : 'bindingPattern));
# 7435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2024 "pars.fsy"
                             SynSimplePat.Id (_1,false,false,false,rhs parseState 1) 
                   )
# 2024 "pars.fsy"
                 : 'simplePattern));
# 7446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2026 "pars.fsy"
                             SynSimplePat.Id (_2,false,false,true,rhs parseState 2) 
                   )
# 2026 "pars.fsy"
                 : 'simplePattern));
# 7457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2028 "pars.fsy"
                             let lhsm = lhs(parseState) 
                             SynSimplePat.Typed(_1,_3,lhsm) 
                   )
# 2028 "pars.fsy"
                 : 'simplePattern));
# 7470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2031 "pars.fsy"
                             let lhsm = lhs(parseState) 
                             SynSimplePat.Attrib(_2,_1,lhsm) 
                   )
# 2031 "pars.fsy"
                 : 'simplePattern));
# 7483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2035 "pars.fsy"
                                         [_1] 
                   )
# 2035 "pars.fsy"
                 : 'simplePatternCommaList));
# 7494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2036 "pars.fsy"
                                                                      _1 :: _3 
                   )
# 2036 "pars.fsy"
                 : 'simplePatternCommaList));
# 7506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2040 "pars.fsy"
                             _2 
                   )
# 2040 "pars.fsy"
                 : 'simplePatterns));
# 7517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2042 "pars.fsy"
                             [] 
                   )
# 2042 "pars.fsy"
                 : 'simplePatterns));
# 7527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2044 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); [] 
                   )
# 2044 "pars.fsy"
                 : 'simplePatterns));
# 7539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2046 "pars.fsy"
                             (* silent recovery *) [] 
                   )
# 2046 "pars.fsy"
                 : 'simplePatterns));
# 7549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2048 "pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); [] 
                   )
# 2048 "pars.fsy"
                 : 'simplePatterns));
# 7560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2053 "pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2053 "pars.fsy"
                 : Ast.SynPat));
# 7572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2055 "pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2055 "pars.fsy"
                 : Ast.SynPat));
# 7584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2057 "pars.fsy"
                             SynPat.LongIdent (mkSynCaseName (rhs parseState 2) opNameCons, None, None,[SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],None,lhs(parseState)) 
                   )
# 2057 "pars.fsy"
                 : Ast.SynPat));
# 7596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2059 "pars.fsy"
                             SynPat.Tuple(List.rev _1, lhs(parseState)) 
                   )
# 2059 "pars.fsy"
                 : Ast.SynPat));
# 7607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2061 "pars.fsy"
                             SynPat.Ands(List.rev _1, lhs(parseState)) 
                   )
# 2061 "pars.fsy"
                 : Ast.SynPat));
# 7618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2063 "pars.fsy"
                             _1 
                   )
# 2063 "pars.fsy"
                 : Ast.SynPat));
# 7629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2066 "pars.fsy"
                                                                         _3 :: _1 
                   )
# 2066 "pars.fsy"
                 : 'tuplePatternElements));
# 7641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2067 "pars.fsy"
                                                                       _3 :: _1 :: [] 
                   )
# 2067 "pars.fsy"
                 : 'tuplePatternElements));
# 7653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2070 "pars.fsy"
                                                                      _3 :: _1 
                   )
# 2070 "pars.fsy"
                 : 'conjPatternElements));
# 7665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2071 "pars.fsy"
                                                                     _3 :: _1 :: [] 
                   )
# 2071 "pars.fsy"
                 : 'conjPatternElements));
# 7677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2074 "pars.fsy"
                                                                                                                                 let vis,lid = _1 in SynPat.LongIdent (lid,None,Some _2,[],vis,lhs(parseState)) 
                   )
# 2074 "pars.fsy"
                 : 'constrPattern));
# 7689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2075 "pars.fsy"
                                                                                                                                 let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_3,vis,lhs(parseState)) 
                   )
# 2075 "pars.fsy"
                 : 'constrPattern));
# 7702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2076 "pars.fsy"
                                                                                                                                       let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_4,vis,lhs(parseState)) 
                   )
# 2076 "pars.fsy"
                 : 'constrPattern));
# 7715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2077 "pars.fsy"
                                                                                                                                       let vis,lid = _1 in SynPat.LongIdent (lid,None,_2,_4,vis,lhs(parseState)) 
                   )
# 2077 "pars.fsy"
                 : 'constrPattern));
# 7728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2078 "pars.fsy"
                                                                  SynPat.IsInst(_2,lhs(parseState)) 
                   )
# 2078 "pars.fsy"
                 : 'constrPattern));
# 7739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2079 "pars.fsy"
                                         _1 
                   )
# 2079 "pars.fsy"
                 : 'constrPattern));
# 7750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2082 "pars.fsy"
                                                                       _1 :: _2 
                   )
# 2082 "pars.fsy"
                 : 'atomicPatterns));
# 7762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2084 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2084 "pars.fsy"
                 : 'atomicPatterns));
# 7775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2087 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2087 "pars.fsy"
                 : 'atomicPatterns));
# 7788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2089 "pars.fsy"
                                         [_1] 
                   )
# 2089 "pars.fsy"
                 : 'atomicPatterns));
# 7799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2094 "pars.fsy"
                             SynPat.QuoteExpr(_1,lhs(parseState)) 
                   )
# 2094 "pars.fsy"
                 : 'atomicPattern));
# 7810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2095 "pars.fsy"
                                             SynPat.DeprecatedCharRange (_1,_3,rhs2 parseState 1 3) 
                   )
# 2095 "pars.fsy"
                 : 'atomicPattern));
# 7822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2097 "pars.fsy"
                             _2 
                   )
# 2097 "pars.fsy"
                 : 'atomicPattern));
# 7833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2099 "pars.fsy"
                             SynPat.ArrayOrList(false,_2,lhs(parseState)) 
                   )
# 2099 "pars.fsy"
                 : 'atomicPattern));
# 7844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2101 "pars.fsy"
                             SynPat.ArrayOrList(true,_2, lhs(parseState)) 
                   )
# 2101 "pars.fsy"
                 : 'atomicPattern));
# 7855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2102 "pars.fsy"
                                      SynPat.Wild (lhs(parseState)) 
                   )
# 2102 "pars.fsy"
                 : 'atomicPattern));
# 7865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2103 "pars.fsy"
                                       SynPat.OptionalVal(_2,lhs(parseState)) 
                   )
# 2103 "pars.fsy"
                 : 'atomicPattern));
# 7876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2105 "pars.fsy"
                             let vis,lid = _1 
                             if List.length lid > 1 || (let c = (List.head lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lid vis (lhs(parseState))
                             else mkSynPatVar vis (List.head lid) 
                   )
# 2105 "pars.fsy"
                 : 'atomicPattern));
# 7890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2110 "pars.fsy"
                             SynPat.Const (_1,_1.Range (lhs(parseState))) 
                   )
# 2110 "pars.fsy"
                 : 'atomicPattern));
# 7901 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2112 "pars.fsy"
                             SynPat.Const(SynConst.Bool false,lhs(parseState)) 
                   )
# 2112 "pars.fsy"
                 : 'atomicPattern));
# 7911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2114 "pars.fsy"
                             SynPat.Const(SynConst.Bool true,lhs(parseState)) 
                   )
# 2114 "pars.fsy"
                 : 'atomicPattern));
# 7921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2116 "pars.fsy"
                             SynPat.Null(lhs(parseState)) 
                   )
# 2116 "pars.fsy"
                 : 'atomicPattern));
# 7931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2118 "pars.fsy"
                              let m = (lhs(parseState)) in SynPat.Paren(_2 m,m) 
                   )
# 2118 "pars.fsy"
                 : 'atomicPattern));
# 7942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2120 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); _2 (rhs2 parseState 1 2) 
                   )
# 2120 "pars.fsy"
                 : 'atomicPattern));
# 7954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2122 "pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs(parseState)) 
                   )
# 2122 "pars.fsy"
                 : 'atomicPattern));
# 7964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2124 "pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); SynPat.Wild (lhs(parseState))
                   )
# 2124 "pars.fsy"
                 : 'atomicPattern));
# 7975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2130 "pars.fsy"
                             (fun m -> _1) 
                   )
# 2130 "pars.fsy"
                 : 'parenPatternBody));
# 7986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2132 "pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 2132 "pars.fsy"
                 : 'parenPatternBody));
# 7996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2161 "pars.fsy"
                 : 'parenPattern));
# 8008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2163 "pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2163 "pars.fsy"
                 : 'parenPattern));
# 8020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2165 "pars.fsy"
                             SynPat.Tuple(List.rev _1,lhs(parseState)) 
                   )
# 2165 "pars.fsy"
                 : 'parenPattern));
# 8031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2167 "pars.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 2167 "pars.fsy"
                 : 'parenPattern));
# 8042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "pars.fsy"
                             let lhsm = lhs(parseState) 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 2169 "pars.fsy"
                 : 'parenPattern));
# 8055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2172 "pars.fsy"
                             let lhsm = lhs(parseState) 
                             SynPat.Attrib(_2,_1,lhsm) 
                   )
# 2172 "pars.fsy"
                 : 'parenPattern));
# 8068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2175 "pars.fsy"
                             SynPat.LongIdent (mkSynCaseName (rhs parseState 2) opNameCons, None, None, [ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],None,lhs(parseState)) 
                   )
# 2175 "pars.fsy"
                 : 'parenPattern));
# 8080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2176 "pars.fsy"
                                         _1 
                   )
# 2176 "pars.fsy"
                 : 'parenPattern));
# 8091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2179 "pars.fsy"
                                                                         _3 :: _1 
                   )
# 2179 "pars.fsy"
                 : 'tupleParenPatternElements));
# 8103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2180 "pars.fsy"
                                                            _3 :: _1 :: [] 
                   )
# 2180 "pars.fsy"
                 : 'tupleParenPatternElements));
# 8115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2183 "pars.fsy"
                                                                     _3 :: _1 
                   )
# 2183 "pars.fsy"
                 : 'conjParenPatternElements));
# 8127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "pars.fsy"
                                                         _3 :: _1 :: [] 
                   )
# 2184 "pars.fsy"
                 : 'conjParenPatternElements));
# 8139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2187 "pars.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 2187 "pars.fsy"
                 : 'recordPatternElements));
# 8150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2190 "pars.fsy"
                                                                              [_1],lhs(parseState) 
                   )
# 2190 "pars.fsy"
                 : 'recordPatternElementsAux));
# 8162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2191 "pars.fsy"
                                                                              let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs(parseState) 
                   )
# 2191 "pars.fsy"
                 : 'recordPatternElementsAux));
# 8175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2194 "pars.fsy"
                                                    (List.frontAndBack _1,_3) 
                   )
# 2194 "pars.fsy"
                 : 'recordPatternElement));
# 8187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2197 "pars.fsy"
                                                                 [] 
                   )
# 2197 "pars.fsy"
                 : 'listPatternElements));
# 8197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2198 "pars.fsy"
                                                                 [_1] 
                   )
# 2198 "pars.fsy"
                 : 'listPatternElements));
# 8209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2199 "pars.fsy"
                                                                 _1 :: _3 
                   )
# 2199 "pars.fsy"
                 : 'listPatternElements));
# 8222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "pars.fsy"
                             _2 
                   )
# 2204 "pars.fsy"
                 : Ast.SynExpr));
# 8233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2206 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 2206 "pars.fsy"
                 : Ast.SynExpr));
# 8246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2209 "pars.fsy"
                             _1 
                   )
# 2209 "pars.fsy"
                 : Ast.SynExpr));
# 8257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2213 "pars.fsy"
                                                              _2 
                   )
# 2213 "pars.fsy"
                 : Ast.SynExpr));
# 8268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2214 "pars.fsy"
                                    _1 
                   )
# 2214 "pars.fsy"
                 : Ast.SynExpr));
# 8279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2219 "pars.fsy"
                                                         _1 
                   )
# 2219 "pars.fsy"
                 : 'typedSeqExprBlockR));
# 8290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2220 "pars.fsy"
                                        _1 
                   )
# 2220 "pars.fsy"
                 : 'typedSeqExprBlockR));
# 8301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2223 "pars.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2223 "pars.fsy"
                 : 'typedSeqExpr));
# 8313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2224 "pars.fsy"
                                   _1 
                   )
# 2224 "pars.fsy"
                 : 'typedSeqExpr));
# 8324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2227 "pars.fsy"
                                                                 SynExpr.Seq(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 2227 "pars.fsy"
                 : 'seqExpr));
# 8337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2228 "pars.fsy"
                                                                 _1 
                   )
# 2228 "pars.fsy"
                 : 'seqExpr));
# 8349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2229 "pars.fsy"
                                                                _1 
                   )
# 2229 "pars.fsy"
                 : 'seqExpr));
# 8360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2230 "pars.fsy"
                                                                        SynExpr.Seq(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 2230 "pars.fsy"
                 : 'seqExpr));
# 8372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2231 "pars.fsy"
                                                                                                    SynExpr.Seq(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 2231 "pars.fsy"
                 : 'seqExpr));
# 8384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2233 "pars.fsy"
                            let letm,isUse = match _1 with (BindingSetPreAttrs(m,_,isUse,_))  -> m,isUse
                            reportParseErrorAt letm (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"));
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr(parseState)) 
                   )
# 2233 "pars.fsy"
                 : 'seqExpr));
# 8397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2242 "pars.fsy"
                                  true 
                   )
# 2242 "pars.fsy"
                 : 'recover));
# 8407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2243 "pars.fsy"
                                false 
                   )
# 2243 "pars.fsy"
                 : 'recover));
# 8418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2248 "pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 3,_1,_3) 
                   )
# 2248 "pars.fsy"
                 : Ast.SynExpr));
# 8430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2250 "pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr(parseState)) 
                   )
# 2250 "pars.fsy"
                 : Ast.SynExpr));
# 8441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2258 "pars.fsy"
                            mkLocalBindings (unionRanges (rhs parseState 1) _2.Range,_1,_2) 
                   )
# 2258 "pars.fsy"
                 : Ast.SynExpr));
# 8453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2260 "pars.fsy"
                            reportParseErrorAt (match _1 with (BindingSetPreAttrs(m,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation());
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr(parseState)) 
                   )
# 2260 "pars.fsy"
                 : Ast.SynExpr));
# 8465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2263 "pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range ,_1,_3) 
                   )
# 2263 "pars.fsy"
                 : Ast.SynExpr));
# 8477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "pars.fsy"
                            //reportParseErrorAt (match _1 with (BindingSetPreAttrs(m,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation());
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr(parseState)) 
                   )
# 2265 "pars.fsy"
                 : Ast.SynExpr));
# 8489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2269 "pars.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 2269 "pars.fsy"
                 : Ast.SynExpr));
# 8501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "pars.fsy"
                             _1 
                   )
# 2273 "pars.fsy"
                 : Ast.SynExpr));
# 8512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2274 "pars.fsy"
                                                          _1 
                   )
# 2274 "pars.fsy"
                 : Ast.SynExpr));
# 8523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2277 "pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 2277 "pars.fsy"
                 : Ast.SynExpr));
# 8538 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             // Produce approximate expression during error recovery 
                             SynExpr.DiscardAfterError(_2,rhs2 parseState 1 2) 
                   )
# 2283 "pars.fsy"
                 : Ast.SynExpr));
# 8552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2288 "pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = SequencePointAtTry(mTry) 
                             let mWith,(clauses,mLast) = _3 
                             let spWith = SequencePointAtWith(mWith) 
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith(_2, mTryToWith, clauses,mWithToLast, mTryToLast,spTry,spWith) 
                   )
# 2288 "pars.fsy"
                 : Ast.SynExpr));
# 8571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2298 "pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             _2 
                   )
# 2298 "pars.fsy"
                 : Ast.SynExpr));
# 8586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2304 "pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = SequencePointAtTry(mTry) 
                             let spFinally = SequencePointAtFinally(rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally(_2, _4,mTryToLast,spTry,spFinally) 
                   )
# 2304 "pars.fsy"
                 : Ast.SynExpr));
# 8602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2311 "pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 2311 "pars.fsy"
                 : Ast.SynExpr));
# 8615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2315 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             SynExpr.DiscardAfterError(_2, rhs2 parseState 1 2) 
                   )
# 2315 "pars.fsy"
                 : Ast.SynExpr));
# 8632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2323 "pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedEndOfFile());
                             arbExpr parseState 
                   )
# 2323 "pars.fsy"
                 : Ast.SynExpr));
# 8644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2327 "pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2327 "pars.fsy"
                 : Ast.SynExpr));
# 8655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2329 "pars.fsy"
                                                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2329 "pars.fsy"
                 : Ast.SynExpr));
# 8666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2330 "pars.fsy"
                                                    raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 2330 "pars.fsy"
                 : Ast.SynExpr));
# 8676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2333 "pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2333 "pars.fsy"
                 : Ast.SynExpr));
# 8687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2335 "pars.fsy"
                                                                   SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2335 "pars.fsy"
                 : Ast.SynExpr));
# 8698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2336 "pars.fsy"
                                                     raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 2336 "pars.fsy"
                 : Ast.SynExpr));
# 8708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2339 "pars.fsy"
                             let mWhile = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop(mWhile) 
                             SynExpr.While(spWhile,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2339 "pars.fsy"
                 : Ast.SynExpr));
# 8724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2344 "pars.fsy"
                             reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsDoneExpected()) ;  
                             arbExpr(parseState) 
                   )
# 2344 "pars.fsy"
                 : Ast.SynExpr));
# 8739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2347 "pars.fsy"
                             (* silent recovery *) arbExpr(parseState) 
                   )
# 2347 "pars.fsy"
                 : Ast.SynExpr));
# 8752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2349 "pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsDoExpected()) ; 
                             arbExpr(parseState) 
                   )
# 2349 "pars.fsy"
                 : Ast.SynExpr));
# 8765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2351 "pars.fsy"
                                                   (* silent recovery *) arbExpr(parseState)  
                   )
# 2351 "pars.fsy"
                 : Ast.SynExpr));
# 8776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2354 "pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b) = _2 in SynExpr.ForEach(spBind,SeqExprOnly(false),a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2354 "pars.fsy"
                 : Ast.SynExpr));
# 8791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2358 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnclosedFor()) ; 
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                             let (a,b) = _2 in SynExpr.ForEach(spBind,SeqExprOnly(false),a,b,arbExpr(parseState),lhs(parseState)) 
                   )
# 2358 "pars.fsy"
                 : Ast.SynExpr));
# 8805 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2363 "pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b) = _2 in SynExpr.ForEach(spBind,SeqExprOnly(false),a,b,arbExpr(parseState),rhs2 parseState 1 3) 
                   )
# 2363 "pars.fsy"
                 : Ast.SynExpr));
# 8819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2367 "pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,c,d) = _2 in SynExpr.For(spBind,a,b,c,d,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2367 "pars.fsy"
                 : Ast.SynExpr));
# 8834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2371 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnclosedFor()) ; 
                             arbExpr(parseState) 
                   )
# 2371 "pars.fsy"
                 : Ast.SynExpr));
# 8849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2375 "pars.fsy"
                             (* silent recovery *) arbExpr(parseState) 
                   )
# 2375 "pars.fsy"
                 : Ast.SynExpr));
# 8862 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2378 "pars.fsy"
                             (* silent recovery *) _4 
                   )
# 2378 "pars.fsy"
                 : Ast.SynExpr));
# 8875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2393 "pars.fsy"
                                                               reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsEqualExpected()); arbExpr(parseState) 
                   )
# 2393 "pars.fsy"
                 : Ast.SynExpr));
# 8887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2397 "pars.fsy"
                            SynExpr.YieldOrReturn((_1,not _1),_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2397 "pars.fsy"
                 : Ast.SynExpr));
# 8899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2399 "pars.fsy"
                            SynExpr.YieldOrReturnFrom((_1,not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2399 "pars.fsy"
                 : Ast.SynExpr));
# 8911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2402 "pars.fsy"
                            let spBind = SequencePointAtBinding(rhs2 parseState 1 5)
                            let m = rhs parseState 1
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),_2,_4,_7, lhs parseState) 
                   )
# 2402 "pars.fsy"
                 : Ast.SynExpr));
# 8928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2407 "pars.fsy"
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = rhs parseState 1
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),_2,_4,_7, lhs parseState) 
                   )
# 2407 "pars.fsy"
                 : Ast.SynExpr));
# 8946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2412 "pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let m = rhs parseState 1
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),_2,_4, SynExpr.ImplicitZero m, lhs parseState) 
                   )
# 2412 "pars.fsy"
                 : Ast.SynExpr));
# 8964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2418 "pars.fsy"
                            let spBind = NoSequencePointAtDoBinding
                            SynExpr.LetOrUseBang(spBind,false,SynPat.Const(SynConst.Unit,_2.Range),_2,_5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 2418 "pars.fsy"
                 : Ast.SynExpr));
# 8978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2422 "pars.fsy"
                            SynExpr.DoBang(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2422 "pars.fsy"
                 : Ast.SynExpr));
# 8990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicSingleLineQualifiersThenArrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2425 "pars.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let a,b= _2 in SynExpr.ForEach(spBind,SeqExprOnly(true),a,b,_4 (rhs parseState 3),rhs2 parseState 1 3) 
                   )
# 2425 "pars.fsy"
                 : Ast.SynExpr));
# 9004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2429 "pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(),lhs parseState));
                            SynExpr.YieldOrReturn((true,true),_2, lhs parseState) 
                   )
# 2429 "pars.fsy"
                 : Ast.SynExpr));
# 9016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2434 "pars.fsy"
                                                             SynExpr.TypeTest(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2434 "pars.fsy"
                 : Ast.SynExpr));
# 9028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2435 "pars.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2435 "pars.fsy"
                 : Ast.SynExpr));
# 9040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2436 "pars.fsy"
                                                             SynExpr.Downcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2436 "pars.fsy"
                 : Ast.SynExpr));
# 9052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2439 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 ":=" _3 
                   )
# 2439 "pars.fsy"
                 : Ast.SynExpr));
# 9064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2440 "pars.fsy"
                                                                         mkSynAssign (unionRanges _1.Range _3.Range) _1 _3 
                   )
# 2440 "pars.fsy"
                 : Ast.SynExpr));
# 9076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2441 "pars.fsy"
                                                        SynExpr.Tuple( List.rev _1,lhs(parseState)) 
                   )
# 2441 "pars.fsy"
                 : Ast.SynExpr));
# 9087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "||" _3 
                   )
# 2442 "pars.fsy"
                 : Ast.SynExpr));
# 9099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2443 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2443 "pars.fsy"
                 : Ast.SynExpr));
# 9112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2444 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "or" _3 
                   )
# 2444 "pars.fsy"
                 : Ast.SynExpr));
# 9124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2445 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "&" _3 
                   )
# 2445 "pars.fsy"
                 : Ast.SynExpr));
# 9136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2446 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "&&" _3 
                   )
# 2446 "pars.fsy"
                 : Ast.SynExpr));
# 9148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2447 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2447 "pars.fsy"
                 : Ast.SynExpr));
# 9161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2448 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (unionRanges _1.Range _3.Range) _1 "=" _3 
                   )
# 2448 "pars.fsy"
                 : Ast.SynExpr));
# 9173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2449 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2449 "pars.fsy"
                 : Ast.SynExpr));
# 9186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2450 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "$" _3 
                   )
# 2450 "pars.fsy"
                 : Ast.SynExpr));
# 9198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2451 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "<" _3 
                   )
# 2451 "pars.fsy"
                 : Ast.SynExpr));
# 9211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2452 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 ">" _3 
                   )
# 2452 "pars.fsy"
                 : Ast.SynExpr));
# 9224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2453 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2453 "pars.fsy"
                 : Ast.SynExpr));
# 9237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2454 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2454 "pars.fsy"
                 : Ast.SynExpr));
# 9250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2455 "pars.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],lhs(parseState)),lhs(parseState)) 
                   )
# 2455 "pars.fsy"
                 : Ast.SynExpr));
# 9262 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2456 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2)  (lhs(parseState)) _1 _2 _3 
                   )
# 2456 "pars.fsy"
                 : Ast.SynExpr));
# 9275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2457 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "-" _3 
                   )
# 2457 "pars.fsy"
                 : Ast.SynExpr));
# 9287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2458 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 "*" _3 
                   )
# 2458 "pars.fsy"
                 : Ast.SynExpr));
# 9299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2459 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2459 "pars.fsy"
                 : Ast.SynExpr));
# 9312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2460 "pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) (lhs(parseState)) _1 _2 _3 
                   )
# 2460 "pars.fsy"
                 : Ast.SynExpr));
# 9325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2461 "pars.fsy"
                                                                  _1 
                   )
# 2461 "pars.fsy"
                 : Ast.SynExpr));
# 9336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2465 "pars.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 2465 "pars.fsy"
                 : 'dynamicArg));
# 9349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2469 "pars.fsy"
                             _2 
                   )
# 2469 "pars.fsy"
                 : 'dynamicArg));
# 9360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2473 "pars.fsy"
                             rhs parseState 1, _2 
                   )
# 2473 "pars.fsy"
                 : 'withClauses));
# 9371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2475 "pars.fsy"
                             rhs parseState 1, _2 
                   )
# 2475 "pars.fsy"
                 : 'withClauses));
# 9382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2477 "pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             rhs parseState 1, _2 
                   )
# 2477 "pars.fsy"
                 : 'withClauses));
# 9395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2482 "pars.fsy"
                             _1 
                   )
# 2482 "pars.fsy"
                 : 'withPatternClauses));
# 9406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2484 "pars.fsy"
                              _2 
                   )
# 2484 "pars.fsy"
                 : 'withPatternClauses));
# 9417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2486 "pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2486 "pars.fsy"
                 : 'withPatternClauses));
# 9429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2490 "pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2490 "pars.fsy"
                 : 'withPatternClauses));
# 9441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2497 "pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 2497 "pars.fsy"
                 : 'patternAndGuard));
# 9453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2501 "pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2501 "pars.fsy"
                 : 'patternClauses));
# 9467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2505 "pars.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 2505 "pars.fsy"
                 : 'patternClauses));
# 9482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2509 "pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2509 "pars.fsy"
                 : 'patternClauses));
# 9497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2514 "pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 2514 "pars.fsy"
                 : 'patternClauses));
# 9512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2521 "pars.fsy"
                            Some _2 
                   )
# 2521 "pars.fsy"
                 : 'patternGuard));
# 9523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2523 "pars.fsy"
                            None 
                   )
# 2523 "pars.fsy"
                 : 'patternGuard));
# 9533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2527 "pars.fsy"
                            _2 
                   )
# 2527 "pars.fsy"
                 : Ast.SynExpr));
# 9544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2531 "pars.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 2531 "pars.fsy"
                 : 'ifExprCases));
# 9562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2541 "pars.fsy"
                             _2, rhs parseState 1 
                   )
# 2541 "pars.fsy"
                 : 'ifExprThen));
# 9573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2543 "pars.fsy"
                             _3,rhs parseState 1 
                   )
# 2543 "pars.fsy"
                 : 'ifExprThen));
# 9584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2545 "pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsUnexpectedEndOfFile());
                             _3,rhs parseState 1 
                   )
# 2545 "pars.fsy"
                 : 'ifExprThen));
# 9597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2550 "pars.fsy"
                             None 
                   )
# 2550 "pars.fsy"
                 : 'ifExprElifs));
# 9607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2552 "pars.fsy"
                             Some _2 
                   )
# 2552 "pars.fsy"
                 : 'ifExprElifs));
# 9618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2554 "pars.fsy"
                             Some _3 
                   )
# 2554 "pars.fsy"
                 : 'ifExprElifs));
# 9629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2556 "pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsUnexpectedEndOfFile());
                             Some _3 
                   )
# 2556 "pars.fsy"
                 : 'ifExprElifs));
# 9642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2559 "pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 2559 "pars.fsy"
                 : 'ifExprElifs));
# 9655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2562 "pars.fsy"
                             Some _2 
                   )
# 2562 "pars.fsy"
                 : 'ifExprElifs));
# 9667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2566 "pars.fsy"
                             _3 :: _1 
                   )
# 2566 "pars.fsy"
                 : 'tupleExpr));
# 9679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2568 "pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2568 "pars.fsy"
                 : 'tupleExpr));
# 9691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2572 "pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 2572 "pars.fsy"
                 : Ast.SynExpr));
# 9702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2574 "pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2574 "pars.fsy"
                 : Ast.SynExpr));
# 9715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2577 "pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if _1 = "&" then 
                                 SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             elif _1 = "&&" then 
                                 SynExpr.AddressOf(false,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             else
                                 mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2577 "pars.fsy"
                 : Ast.SynExpr));
# 9733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2585 "pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2585 "pars.fsy"
                 : Ast.SynExpr));
# 9746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2588 "pars.fsy"
                             SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2588 "pars.fsy"
                 : Ast.SynExpr));
# 9757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2590 "pars.fsy"
                             SynExpr.AddressOf(false,_2,rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2590 "pars.fsy"
                 : Ast.SynExpr));
# 9768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2592 "pars.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2592 "pars.fsy"
                 : Ast.SynExpr));
# 9781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2594 "pars.fsy"
                             SynExpr.New(false,_2,arbExpr(parseState),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 2594 "pars.fsy"
                 : Ast.SynExpr));
# 9793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2596 "pars.fsy"
                             arbExpr(parseState) 
                   )
# 2596 "pars.fsy"
                 : Ast.SynExpr));
# 9803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2598 "pars.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2598 "pars.fsy"
                 : Ast.SynExpr));
# 9814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2600 "pars.fsy"
                             SynExpr.InferredDowncast(_2,unionRanges (rhs parseState 1) _2.Range)
                   )
# 2600 "pars.fsy"
                 : Ast.SynExpr));
# 9825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2602 "pars.fsy"
                             _1 
                   )
# 2602 "pars.fsy"
                 : Ast.SynExpr));
# 9836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2606 "pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 2606 "pars.fsy"
                 : Ast.SynExpr));
# 9848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2608 "pars.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 2608 "pars.fsy"
                 : Ast.SynExpr));
# 9860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2613 "pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 2613 "pars.fsy"
                 : Ast.SynExpr));
# 9875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2618 "pars.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 2618 "pars.fsy"
                 : Ast.SynExpr));
# 9888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2625 "pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2625 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2630 "pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2630 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2635 "pars.fsy"
                             let arg1,_ = _1 
                             SynExpr.TypeApp (arg1,_3,lhs(parseState)),false 
                   )
# 2635 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2639 "pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 2639 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "pars.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs(parseState)) (rhs parseState 2),hpa1 
                   )
# 2644 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2647 "pars.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs(parseState)) (rhs parseState 2),false 
                   )
# 2647 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "pars.fsy"
                             SynExpr.LongIdent (true,[_2],rhs parseState 2),false 
                   )
# 2650 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2652 "pars.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) (lhs(parseState)) arg1 "?" _3, hpa1 
                   )
# 2652 "pars.fsy"
                 : Ast.SynExpr * bool));
# 9992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2655 "pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 2655 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2657 "pars.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 2657 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2659 "pars.fsy"
                             _2 (lhs(parseState)) false,false 
                   )
# 2659 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2661 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             _2 (rhs2 parseState 1 2) false, false 
                   )
# 2661 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2664 "pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs(parseState)),false  
                   )
# 2664 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "pars.fsy"
                             _1,false 
                   )
# 2667 "pars.fsy"
                 : Ast.SynExpr * bool));
# 10059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2671 "pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot lhsm e _1) 
                   )
# 2671 "pars.fsy"
                 : 'atomicExprQualification));
# 10071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2674 "pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterError(e,lhsm)) 
                   )
# 2674 "pars.fsy"
                 : 'atomicExprQualification));
# 10085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs(parseState));
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e,mkSynCaseName lhsm opNameCons,(fst _5),lhsm)) 
                   )
# 2679 "pars.fsy"
                 : 'atomicExprQualification));
# 10098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2683 "pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs(parseState)); 
                                 mkSynDotParenGet lhsm e _2) 
                   )
# 2683 "pars.fsy"
                 : 'atomicExprQualification));
# 10111 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2687 "pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 2687 "pars.fsy"
                 : 'atomicExprQualification));
# 10122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2690 "pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSliceGet lhsm dotm e _2) 
                   )
# 2690 "pars.fsy"
                 : 'atomicExprQualification));
# 10133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2692 "pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice2Get lhsm dotm e _2 _4) 
                   )
# 2692 "pars.fsy"
                 : 'atomicExprQualification));
# 10145 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2694 "pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice3Get lhsm dotm e _2 _4 _6) 
                   )
# 2694 "pars.fsy"
                 : 'atomicExprQualification));
# 10158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2696 "pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSlice4Get lhsm dotm e _2 _4 _6 _8) 
                   )
# 2696 "pars.fsy"
                 : 'atomicExprQualification));
# 10172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2699 "pars.fsy"
                                                     mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3) 
                   )
# 2699 "pars.fsy"
                 : 'optRange));
# 10184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "pars.fsy"
                                            mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None 
                   )
# 2700 "pars.fsy"
                 : 'optRange));
# 10195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2701 "pars.fsy"
                                            mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2) 
                   )
# 2701 "pars.fsy"
                 : 'optRange));
# 10206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2702 "pars.fsy"
                                mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None 
                   )
# 2702 "pars.fsy"
                 : 'optRange));
# 10216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2708 "pars.fsy"
                             SynExpr.Const (_1,_1.Range (lhs(parseState))) 
                   )
# 2708 "pars.fsy"
                 : Ast.SynExpr));
# 10227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2710 "pars.fsy"
                             _1 
                   )
# 2710 "pars.fsy"
                 : Ast.SynExpr));
# 10238 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2712 "pars.fsy"
                             _1 
                   )
# 2712 "pars.fsy"
                 : Ast.SynExpr));
# 10249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2714 "pars.fsy"
                             SynExpr.Null(lhs(parseState)) 
                   )
# 2714 "pars.fsy"
                 : Ast.SynExpr));
# 10259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2716 "pars.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs(parseState)) 
                   )
# 2716 "pars.fsy"
                 : Ast.SynExpr));
# 10269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2718 "pars.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs(parseState)) 
                   )
# 2718 "pars.fsy"
                 : Ast.SynExpr));
# 10279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2720 "pars.fsy"
                             _1 
                   )
# 2720 "pars.fsy"
                 : Ast.SynExpr));
# 10290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2722 "pars.fsy"
                             _1 
                   )
# 2722 "pars.fsy"
                 : Ast.SynExpr));
# 10301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2724 "pars.fsy"
                             _1 
                   )
# 2724 "pars.fsy"
                 : Ast.SynExpr));
# 10312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2728 "pars.fsy"
                             SynExpr.Paren(_2,rhs2 parseState 1 3) 
                   )
# 2728 "pars.fsy"
                 : 'beginEndExpr));
# 10323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2730 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); _2 
                   )
# 2730 "pars.fsy"
                 : 'beginEndExpr));
# 10335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2732 "pars.fsy"
                             (* silent recovery *) arbExpr(parseState)  
                   )
# 2732 "pars.fsy"
                 : 'beginEndExpr));
# 10345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2734 "pars.fsy"
                             mkSynUnit (lhs(parseState)) 
                   )
# 2734 "pars.fsy"
                 : 'beginEndExpr));
# 10355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2738 "pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1));  
                             (SynExpr.Quote(mkSynIdGet (lhs(parseState)) (CompileOpName (fst _1)), snd _1, _2,lhs(parseState))) 
                   )
# 2738 "pars.fsy"
                 : 'quoteExpr));
# 10369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2741 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1));  
                             // Note: deliberately use this smaller range for the expression: see FSHarp 1.0 bug 3225
                             let mExpr = rhs2 parseState 1 1
                             SynExpr.Quote(mkSynIdGet (lhs(parseState)) (CompileOpName (fst _1)),snd _1, _2,mExpr)  
                   )
# 2741 "pars.fsy"
                 : 'quoteExpr));
# 10385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2746 "pars.fsy"
                             (* silent recovery *) SynExpr.Quote(mkSynIdGet (lhs(parseState)) (CompileOpName (fst _1)),snd _1, arbExpr(parseState),lhs(parseState))  
                   )
# 2746 "pars.fsy"
                 : 'quoteExpr));
# 10397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2750 "pars.fsy"
                              _2 (lhs(parseState)) true 
                   )
# 2750 "pars.fsy"
                 : 'arrayExpr));
# 10408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2752 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             _2 (rhs2 parseState 1 2) true
                   )
# 2752 "pars.fsy"
                 : 'arrayExpr));
# 10421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2755 "pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs(parseState)) 
                   )
# 2755 "pars.fsy"
                 : 'arrayExpr));
# 10431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2759 "pars.fsy"
                             _2 (rhs2 parseState 1 3) 
                   )
# 2759 "pars.fsy"
                 : 'parenExpr));
# 10442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2761 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); let lhsm = rhs2 parseState 1 2 in SynExpr.Paren(_2 lhsm,lhsm) 
                   )
# 2761 "pars.fsy"
                 : 'parenExpr));
# 10454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2763 "pars.fsy"
                             (* silent recovery *) arbExpr(parseState) 
                   )
# 2763 "pars.fsy"
                 : 'parenExpr));
# 10464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2765 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); arbExpr(parseState)  
                   )
# 2765 "pars.fsy"
                 : 'parenExpr));
# 10475 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2769 "pars.fsy"
                              (fun m -> SynExpr.Const(SynConst.Unit,m)) 
                   )
# 2769 "pars.fsy"
                 : 'parenExprBody));
# 10485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2771 "pars.fsy"
                              (fun  m -> SynExpr.DeprecatedTypeOf(_2,m)) 
                   )
# 2771 "pars.fsy"
                 : 'parenExprBody));
# 10496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2773 "pars.fsy"
                              (fun m -> SynExpr.TraitCall(_1,_4,_6,m)) 
                   )
# 2773 "pars.fsy"
                 : 'parenExprBody));
# 10509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "pars.fsy"
                             (fun m -> SynExpr.Paren(_1,m)) 
                   )
# 2775 "pars.fsy"
                 : 'parenExprBody));
# 10520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2778 "pars.fsy"
                                                    [_1] 
                   )
# 2778 "pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 10531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2779 "pars.fsy"
                                                                                              [_2 ; _4 ] 
                   )
# 2779 "pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 10543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2783 "pars.fsy"
                             _2 (rhs2 parseState 1 3) 
                   )
# 2783 "pars.fsy"
                 : 'braceExpr));
# 10554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2785 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; _2 (rhs2 parseState 1 2) 
                   )
# 2785 "pars.fsy"
                 : 'braceExpr));
# 10566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2787 "pars.fsy"
                            (* silent recovery *) arbExpr(parseState)  
                   )
# 2787 "pars.fsy"
                 : 'braceExpr));
# 10576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2791 "pars.fsy"
                             (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 2791 "pars.fsy"
                 : 'braceExprBody));
# 10587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2793 "pars.fsy"
                            _1 
                   )
# 2793 "pars.fsy"
                 : 'braceExprBody));
# 10598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2795 "pars.fsy"
                            _1 false 
                   )
# 2795 "pars.fsy"
                 : 'braceExprBody));
# 10609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2799 "pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, _1 true lhsm,lhsm)) 
                   )
# 2799 "pars.fsy"
                 : 'listExprElements));
# 10620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2801 "pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 2801 "pars.fsy"
                 : 'listExprElements));
# 10630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2805 "pars.fsy"
                            (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 2805 "pars.fsy"
                 : 'monadicExprInitial));
# 10641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2807 "pars.fsy"
                            _1 
                   )
# 2807 "pars.fsy"
                 : 'monadicExprInitial));
# 10652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2811 "pars.fsy"
                            (fun _ m -> mkSynInfix m m _1 ".." _3) 
                   )
# 2811 "pars.fsy"
                 : 'rangeSequenceExpr));
# 10664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2813 "pars.fsy"
                            (fun _ m -> mkSynTrifix m ".. .." _1 _3 _5) 
                   )
# 2813 "pars.fsy"
                 : 'rangeSequenceExpr));
# 10677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2821 "pars.fsy"
                            (fun m -> SynExpr.YieldOrReturn((true,false),_2,m)) 
                   )
# 2821 "pars.fsy"
                 : 'monadicSingleLineQualifiersThenArrowThenExprR));
# 10688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2826 "pars.fsy"
                            (_1, _3) 
                   )
# 2826 "pars.fsy"
                 : 'forLoopBinder));
# 10700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2828 "pars.fsy"
                            (_1, _3 false (rhs parseState 3)) 
                   )
# 2828 "pars.fsy"
                 : 'forLoopBinder));
# 10712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2830 "pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                            (_1, arbExpr(parseState)) 
                   )
# 2830 "pars.fsy"
                 : 'forLoopBinder));
# 10725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2834 "pars.fsy"
                                                                                    idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 2834 "pars.fsy"
                 : 'forLoopRange));
# 10739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2837 "pars.fsy"
                                                                        _2 :: _1 
                   )
# 2837 "pars.fsy"
                 : 'opt_curriedArgExprs));
# 10751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2838 "pars.fsy"
                            [] 
                   )
# 2838 "pars.fsy"
                 : 'opt_curriedArgExprs));
# 10761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2841 "pars.fsy"
                            None 
                   )
# 2841 "pars.fsy"
                 : 'opt_atomicExprAfterType));
# 10771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2842 "pars.fsy"
                                                Some(_1) 
                   )
# 2842 "pars.fsy"
                 : 'opt_atomicExprAfterType));
# 10782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2845 "pars.fsy"
                            [] 
                   )
# 2845 "pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 10792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2846 "pars.fsy"
                                                    [_3] 
                   )
# 2846 "pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 10803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2850 "pars.fsy"
                            [] 
                   )
# 2850 "pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 10813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2852 "pars.fsy"
                            [_2] 
                   )
# 2852 "pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 10824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2854 "pars.fsy"
                             [] 
                   )
# 2854 "pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 10834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2858 "pars.fsy"
                            (None,None, []) 
                   )
# 2858 "pars.fsy"
                 : 'recdExpr));
# 10844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2860 "pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs(parseState)) | Some e -> e 
                            (Some(_2,arg,rhs2 parseState 2 4),None, _5) 
                   )
# 2860 "pars.fsy"
                 : 'recdExpr));
# 10860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2863 "pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false,v,m) -> (None,None, (List.frontAndBack v,_3) :: List.rev _4) 
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 2863 "pars.fsy"
                 : 'recdExpr));
# 10876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2867 "pars.fsy"
                             (None,Some _1,(List.frontAndBack _3,_5):: List.rev _6) 
                   )
# 2867 "pars.fsy"
                 : 'recdExpr));
# 10891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "pars.fsy"
                             (None,Some _1,(List.frontAndBack _3,_5):: List.rev _6) 
                   )
# 2869 "pars.fsy"
                 : 'recdExpr));
# 10906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2872 "pars.fsy"
                                                                           (List.frontAndBack _3,_5) :: _1 
                   )
# 2872 "pars.fsy"
                 : 'recdExprBindings));
# 10920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2873 "pars.fsy"
                                                                      [] 
                   )
# 2873 "pars.fsy"
                 : 'recdExprBindings));
# 10930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2883 "pars.fsy"
                            (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,_2,_4, m)) 
                   )
# 2883 "pars.fsy"
                 : 'objExpr));
# 10944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2885 "pars.fsy"
                            (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,[],_3, m)) 
                   )
# 2885 "pars.fsy"
                 : 'objExpr));
# 10957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2887 "pars.fsy"
                            (fun m -> let (a,b) = _2,None in SynExpr.ObjExpr(a,b,[],[], m)) 
                   )
# 2887 "pars.fsy"
                 : 'objExpr));
# 10968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2891 "pars.fsy"
                            (_2, Some(_4,Some(_5))) 
                   )
# 2891 "pars.fsy"
                 : 'objExprBaseCall));
# 10982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2893 "pars.fsy"
                            (_2, Some(_4,None)) 
                   )
# 2893 "pars.fsy"
                 : 'objExprBaseCall));
# 10995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2895 "pars.fsy"
                            _2,None 
                   )
# 2895 "pars.fsy"
                 : 'objExprBaseCall));
# 11006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2900 "pars.fsy"
                                           _1 
                   )
# 2900 "pars.fsy"
                 : 'opt_objExprBindings));
# 11017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2901 "pars.fsy"
                                           [] 
                   )
# 2901 "pars.fsy"
                 : 'opt_objExprBindings));
# 11027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2905 "pars.fsy"
                             let letm = (rhs parseState 1)
                             (_2 [] None letm) 
                   )
# 2905 "pars.fsy"
                 : 'objExprBindings));
# 11039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2908 "pars.fsy"
                             let letm = (rhs parseState 1)
                             (_2 [] None letm) 
                   )
# 2908 "pars.fsy"
                 : 'objExprBindings));
# 11051 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2911 "pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b,m) -> Some b
                                               | SynMemberDefn.ImplicitInherit (_, _, _, m)
                                               | SynMemberDefn.ImplicitCtor (_,_,_, _, m)
                                               | SynMemberDefn.LetBindings(_,_,_,m)                    
                                               | SynMemberDefn.AbstractSlot(_,_,m) 
                                               | SynMemberDefn.Interface(_,_,m) 
                                               | SynMemberDefn.Inherit(_,_,m)
                                               | SynMemberDefn.ValField(_,m)
                                               | SynMemberDefn.Open(_,m)
                                               | SynMemberDefn.NestedType(_,_,m) -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(),m)); None)) 
                   )
# 2911 "pars.fsy"
                 : 'objExprBindings));
# 11074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2925 "pars.fsy"
                                                                  _1 :: _2 
                   )
# 2925 "pars.fsy"
                 : 'objExprInterfaces));
# 11086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2928 "pars.fsy"
                                                        [] 
                   )
# 2928 "pars.fsy"
                 : 'opt_objExprInterfaces));
# 11096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2929 "pars.fsy"
                                                                  _1 :: _2 
                   )
# 2929 "pars.fsy"
                 : 'opt_objExprInterfaces));
# 11108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2930 "pars.fsy"
                                                       (* silent recovery *) _2 
                   )
# 2930 "pars.fsy"
                 : 'opt_objExprInterfaces));
# 11119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2934 "pars.fsy"
                           InterfaceImpl(_2, _3, lhs(parseState)) 
                   )
# 2934 "pars.fsy"
                 : 'objExprInterface));
# 11134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2937 "pars.fsy"
                                  true 
                   )
# 2937 "pars.fsy"
                 : 'forLoopDirection));
# 11144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2938 "pars.fsy"
                                  false 
                   )
# 2938 "pars.fsy"
                 : 'forLoopDirection));
# 11154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas false mAll _2 _4 
                   )
# 2943 "pars.fsy"
                 : 'anonLambdaExpr));
# 11167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2946 "pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas false mAll _2 (arbExpr(parseState)) 
                   )
# 2946 "pars.fsy"
                 : 'anonLambdaExpr));
# 11179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2949 "pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas false mAll _2 _4 
                   )
# 2949 "pars.fsy"
                 : 'anonLambdaExpr));
# 11192 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2952 "pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody()) ;
                            mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr(parseState)) 
                   )
# 2952 "pars.fsy"
                 : 'anonLambdaExpr));
# 11204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2956 "pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody()) ;
                            mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr(parseState)) 
                   )
# 2956 "pars.fsy"
                 : 'anonLambdaExpr));
# 11217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_bar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2961 "pars.fsy"
                             let clauses,mLast = _3
                             let mAll = unionRanges (rhs parseState 1) mLast
                             mkSynMatchLambda(false,false,mAll,clauses,NoSequencePointAtInvisibleBinding) 
                   )
# 2961 "pars.fsy"
                 : 'anonMatchingExpr));
# 11231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_bar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2965 "pars.fsy"
                             let clauses,mLast = _3
                             let mAll = unionRanges (rhs parseState 1) mLast
                             mkSynMatchLambda(false,false,mAll,clauses,NoSequencePointAtInvisibleBinding) 
                   )
# 2965 "pars.fsy"
                 : 'anonMatchingExpr));
# 11245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_bar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2969 "pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsErrorInFunctionBlock()); 
                             let clauses,mLast = _3
                             let mAll = unionRanges (rhs parseState 1) mLast
                             mkSynMatchLambda(false,false,mAll,clauses,NoSequencePointAtInvisibleBinding) 
                   )
# 2969 "pars.fsy"
                 : 'anonMatchingExpr));
# 11260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2978 "pars.fsy"
                                                          _1 
                   )
# 2978 "pars.fsy"
                 : 'typeWithTypeConstraints));
# 11271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2980 "pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3,lhs(parseState)) 
                   )
# 2980 "pars.fsy"
                 : 'typeWithTypeConstraints));
# 11283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2984 "pars.fsy"
                            _1 
                   )
# 2984 "pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 11294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2986 "pars.fsy"
                            let ty,arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty,List.rev _3,lhs(parseState)), arity 
                   )
# 2986 "pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 11308 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2992 "pars.fsy"
                            None 
                   )
# 2992 "pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 11318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2994 "pars.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some ((ty,arity),rhs parseState 2) 
                   )
# 2994 "pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 11331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3000 "pars.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs(parseState)), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 3000 "pars.fsy"
                 : 'topType));
# 11345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3004 "pars.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 3004 "pars.fsy"
                 : 'topType));
# 11356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3008 "pars.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs(parseState))),(mdata :: mdatas) 
                   )
# 3008 "pars.fsy"
                 : 'topTupleType));
# 11368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3010 "pars.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 3010 "pars.fsy"
                 : 'topTupleType));
# 11379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3013 "pars.fsy"
                                                                      _1 :: _3 
                   )
# 3013 "pars.fsy"
                 : 'topTupleTypeElements));
# 11391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3014 "pars.fsy"
                                                                      [_1] 
                   )
# 3014 "pars.fsy"
                 : 'topTupleTypeElements));
# 11402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3018 "pars.fsy"
                            match _2 with 
                            | SynType.LongIdent([id],_) -> _4,SynArgInfo(_1,false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 3018 "pars.fsy"
                 : 'topAppType));
# 11417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3022 "pars.fsy"
                            _5,SynArgInfo(_1,true,Some _3) 
                   )
# 3022 "pars.fsy"
                 : 'topAppType));
# 11430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3024 "pars.fsy"
                            (_2,SynArgInfo(_1,false,None)) 
                   )
# 3024 "pars.fsy"
                 : 'topAppType));
# 11442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3026 "pars.fsy"
                            match _1 with 
                            | SynType.LongIdent([id],_) -> _3,SynArgInfo([],false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 3026 "pars.fsy"
                 : 'topAppType));
# 11456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3030 "pars.fsy"
                            _4,SynArgInfo([],true,Some _2) 
                   )
# 3030 "pars.fsy"
                 : 'topAppType));
# 11468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3032 "pars.fsy"
                            _1,SynArgInfo([],false,None) 
                   )
# 3032 "pars.fsy"
                 : 'topAppType));
# 11479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3037 "pars.fsy"
                                                 SynType.Fun(_1,_3,lhs(parseState)) 
                   )
# 3037 "pars.fsy"
                 : Ast.SynType));
# 11491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3038 "pars.fsy"
                                                           _1 
                   )
# 3038 "pars.fsy"
                 : Ast.SynType));
# 11502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3042 "pars.fsy"
                                                                SynType.Tuple((false,_1) :: _3,lhs(parseState)) 
                   )
# 3042 "pars.fsy"
                 : 'tupleType));
# 11514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3045 "pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.MeasureOne (lhs(parseState))):: _2, lhs(parseState)) 
                   )
# 3045 "pars.fsy"
                 : 'tupleType));
# 11527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3049 "pars.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             SynType.Tuple((true,_1) :: _3, lhs(parseState)) 
                   )
# 3049 "pars.fsy"
                 : 'tupleType));
# 11541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3051 "pars.fsy"
                                                            _1 
                   )
# 3051 "pars.fsy"
                 : 'tupleType));
# 11552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3054 "pars.fsy"
                                                                             (false,_1) :: _3 
                   )
# 3054 "pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 11564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3056 "pars.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             (true,_1) :: _3 
                   )
# 3056 "pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 11578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3058 "pars.fsy"
                                                                [(false,_1)] 
                   )
# 3058 "pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 11589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3061 "pars.fsy"
                                                                       _1 :: _3 
                   )
# 3061 "pars.fsy"
                 : 'tupleTypeElements));
# 11601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3062 "pars.fsy"
                                                                [_1] 
                   )
# 3062 "pars.fsy"
                 : 'tupleTypeElements));
# 11612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3066 "pars.fsy"
                             SynType.LongIdent(_1, lhs(parseState)) 
                   )
# 3066 "pars.fsy"
                 : 'appTypeCon));
# 11623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3069 "pars.fsy"
                            SynType.Var(_1, lhs(parseState)) 
                   )
# 3069 "pars.fsy"
                 : 'appTypeCon));
# 11634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3073 "pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs(parseState))
                            else SynType.MeasurePower(_1, fst _3, lhs(parseState))  
                   )
# 3073 "pars.fsy"
                 : 'appTypeConPower));
# 11649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3077 "pars.fsy"
                           _1 
                   )
# 3077 "pars.fsy"
                 : 'appTypeConPower));
# 11660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3081 "pars.fsy"
                              SynType.Array(_2,_1,lhs(parseState)) 
                   )
# 3081 "pars.fsy"
                 : 'appType));
# 11672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3083 "pars.fsy"
                              SynType.Array(_3,_1,lhs(parseState)) 
                   )
# 3083 "pars.fsy"
                 : 'appType));
# 11684 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3085 "pars.fsy"
                             SynType.App(_2,[_1],true,lhs(parseState)) 
                   )
# 3085 "pars.fsy"
                 : 'appType));
# 11696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrexifArguments)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3087 "pars.fsy"
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (lhs(parseState)); 
                             SynType.App(_4,_2, true, lhs(parseState)) 
                   )
# 3087 "pars.fsy"
                 : 'appType));
# 11709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3090 "pars.fsy"
                             _1 
                   )
# 3090 "pars.fsy"
                 : 'appType));
# 11720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3092 "pars.fsy"
                              let tp,typ = _1,_3 
                              let m = lhs(parseState) 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 3092 "pars.fsy"
                 : 'appType));
# 11734 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3096 "pars.fsy"
                              SynType.HashConstraint(_3, lhs(parseState)) 
                   )
# 3096 "pars.fsy"
                 : 'appType));
# 11745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3100 "pars.fsy"
                              1 
                   )
# 3100 "pars.fsy"
                 : 'arrayTypeSuffix));
# 11755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3102 "pars.fsy"
                              2 
                   )
# 3102 "pars.fsy"
                 : 'arrayTypeSuffix));
# 11765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3104 "pars.fsy"
                              3 
                   )
# 3104 "pars.fsy"
                 : 'arrayTypeSuffix));
# 11775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3106 "pars.fsy"
                              4 
                   )
# 3106 "pars.fsy"
                 : 'arrayTypeSuffix));
# 11785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3109 "pars.fsy"
                                                          _1 :: _3 :: List.rev _4 
                   )
# 3109 "pars.fsy"
                 : 'appTypePrexifArguments));
# 11798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3112 "pars.fsy"
                                                      _3 :: _1 
                   )
# 3112 "pars.fsy"
                 : 'typeListElements));
# 11810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3113 "pars.fsy"
                                                [] 
                   )
# 3113 "pars.fsy"
                 : 'typeListElements));
# 11820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3117 "pars.fsy"
                           _1 
                   )
# 3117 "pars.fsy"
                 : 'powerType));
# 11831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3119 "pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs(parseState))
                            else SynType.MeasurePower(_1, fst _3, lhs(parseState)) 
                   )
# 3119 "pars.fsy"
                 : 'powerType));
# 11846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3123 "pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs(parseState)) 
                   )
# 3123 "pars.fsy"
                 : 'powerType));
# 11860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3129 "pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs(parseState)) 
                   )
# 3129 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3132 "pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs(parseState)) 
                   )
# 3132 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3135 "pars.fsy"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                             SynType.App(_2,[_1],true,lhs(parseState)) 
                   )
# 3135 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrexifArguments)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "pars.fsy"
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (lhs(parseState)); 
                             SynType.App(_4,_2, true, lhs(parseState)) 
                   )
# 3138 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3141 "pars.fsy"
                             _1 
                   )
# 3141 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3143 "pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              let tp,typ = _1,_3 
                              let m = lhs(parseState) 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 3143 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3148 "pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.HashConstraint(_3, lhs(parseState)) 
                   )
# 3148 "pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 11950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3154 "pars.fsy"
                           _1 
                   )
# 3154 "pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 11961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3156 "pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs(parseState))
                            else SynType.MeasurePower(_1, fst _3, lhs(parseState)) 
                   )
# 3156 "pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 11977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3161 "pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs(parseState)) 
                   )
# 3161 "pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 11992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "pars.fsy"
                            SynType.HashConstraint(_2, lhs(parseState)) 
                   )
# 3170 "pars.fsy"
                 : 'atomType));
# 12003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3172 "pars.fsy"
                            _1 
                   )
# 3172 "pars.fsy"
                 : 'atomType));
# 12014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3174 "pars.fsy"
                            SynType.Anon (lhs(parseState)) 
                   )
# 3174 "pars.fsy"
                 : 'atomType));
# 12024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3176 "pars.fsy"
                             _2 
                   )
# 3176 "pars.fsy"
                 : 'atomType));
# 12035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3178 "pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) ; _2 
                   )
# 3178 "pars.fsy"
                 : 'atomType));
# 12047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3180 "pars.fsy"
                             if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteral());
                             SynType.MeasureOne (lhs(parseState))
                           
                   )
# 3180 "pars.fsy"
                 : 'atomType));
# 12060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3184 "pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs(parseState)) 
                   )
# 3184 "pars.fsy"
                 : 'atomType));
# 12070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsNoHpaDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3186 "pars.fsy"
                            SynType.App(_1,_2,false,lhs(parseState)) 
                   )
# 3186 "pars.fsy"
                 : 'atomType));
# 12082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3188 "pars.fsy"
                            SynType.LongIdentApp(_1,_3,[],lhs(parseState)) 
                   )
# 3188 "pars.fsy"
                 : 'atomType));
# 12094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsNoHpaDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3190 "pars.fsy"
                            SynType.LongIdentApp(_1,_3,_4,lhs(parseState)) 
                   )
# 3190 "pars.fsy"
                 : 'atomType));
# 12107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3195 "pars.fsy"
                            warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1));
                            _1 
                   )
# 3195 "pars.fsy"
                 : 'typeArgsNoHpaDeprecated));
# 12119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgsActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3198 "pars.fsy"
                            _2 
                   )
# 3198 "pars.fsy"
                 : 'typeArgsNoHpaDeprecated));
# 12130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3202 "pars.fsy"
                            [] 
                   )
# 3202 "pars.fsy"
                 : 'typeArgsActual));
# 12142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3204 "pars.fsy"
                            [_2] 
                   )
# 3204 "pars.fsy"
                 : 'typeArgsActual));
# 12155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3206 "pars.fsy"
                            _2 :: _4 :: List.rev _5 
                   )
# 3206 "pars.fsy"
                 : 'typeArgsActual));
# 12170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3210 "pars.fsy"
                            _2 
                   )
# 3210 "pars.fsy"
                 : 'measureTypeArg));
# 12183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3212 "pars.fsy"
                            SynMeasure.Anon (lhs(parseState)) 
                   )
# 3212 "pars.fsy"
                 : 'measureTypeArg));
# 12195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3216 "pars.fsy"
                            SynMeasure.Named(_1, lhs(parseState)) 
                   )
# 3216 "pars.fsy"
                 : 'measureTypeAtom));
# 12206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3219 "pars.fsy"
                            SynMeasure.Var(_1, lhs(parseState)) 
                   )
# 3219 "pars.fsy"
                 : 'measureTypeAtom));
# 12217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3222 "pars.fsy"
                            _2 
                   )
# 3222 "pars.fsy"
                 : 'measureTypeAtom));
# 12228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3226 "pars.fsy"
                             _1 
                   )
# 3226 "pars.fsy"
                 : 'measureTypePower));
# 12239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3229 "pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs(parseState))
                            else SynMeasure.Power(_1, fst _3, lhs(parseState)) 
                   )
# 3229 "pars.fsy"
                 : 'measureTypePower));
# 12254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3234 "pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs(parseState)) 
                   )
# 3234 "pars.fsy"
                 : 'measureTypePower));
# 12268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3238 "pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 3238 "pars.fsy"
                 : 'measureTypePower));
# 12280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3243 "pars.fsy"
                           [_1] 
                   )
# 3243 "pars.fsy"
                 : 'measureTypeSeq));
# 12291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3245 "pars.fsy"
                           _1 :: _2 
                   )
# 3245 "pars.fsy"
                 : 'measureTypeSeq));
# 12303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3249 "pars.fsy"
                           SynMeasure.Seq(_1, lhs(parseState)) 
                   )
# 3249 "pars.fsy"
                 : 'measureTypeExpr));
# 12314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3251 "pars.fsy"
                           SynMeasure.Product(_1, _3, lhs(parseState)) 
                   )
# 3251 "pars.fsy"
                 : 'measureTypeExpr));
# 12326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3253 "pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs(parseState))
                           else SynMeasure.Divide(_1, _3, lhs(parseState)) 
                   )
# 3253 "pars.fsy"
                 : 'measureTypeExpr));
# 12341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3257 "pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs(parseState)) 
                   )
# 3257 "pars.fsy"
                 : 'measureTypeExpr));
# 12354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3262 "pars.fsy"
                             let id = mkSynId (lhs(parseState)) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 3262 "pars.fsy"
                 : 'typar));
# 12366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3265 "pars.fsy"
                            _1 
                   )
# 3265 "pars.fsy"
                 : 'typar));
# 12377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3269 "pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 3269 "pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 12390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3276 "pars.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 3276 "pars.fsy"
                 : Ast.Ident));
# 12401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3280 "pars.fsy"
                             [ident(MangledGlobalName,rhs parseState 1)] 
                   )
# 3280 "pars.fsy"
                 : 'path));
# 12411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3282 "pars.fsy"
                            [_1] 
                   )
# 3282 "pars.fsy"
                 : 'path));
# 12422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3284 "pars.fsy"
                            (* silent recovery *) _1 @ [_3] 
                   )
# 3284 "pars.fsy"
                 : 'path));
# 12434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3286 "pars.fsy"
                            (* silent recovery *) _1  
                   )
# 3286 "pars.fsy"
                 : 'path));
# 12445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3290 "pars.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 3290 "pars.fsy"
                 : 'opName));
# 12456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3292 "pars.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 3292 "pars.fsy"
                 : 'opName));
# 12466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3296 "pars.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 3296 "pars.fsy"
                 : 'opName));
# 12478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3300 "pars.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|_|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 3300 "pars.fsy"
                 : 'opName));
# 12490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3305 "pars.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs(parseState)) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 3305 "pars.fsy"
                 : 'operatorName));
# 12503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3308 "pars.fsy"
                                               _1 
                   )
# 3308 "pars.fsy"
                 : 'operatorName));
# 12514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3309 "pars.fsy"
                                            _1 
                   )
# 3309 "pars.fsy"
                 : 'operatorName));
# 12525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3310 "pars.fsy"
                                            _1 
                   )
# 3310 "pars.fsy"
                 : 'operatorName));
# 12536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3311 "pars.fsy"
                                         _1 
                   )
# 3311 "pars.fsy"
                 : 'operatorName));
# 12547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3312 "pars.fsy"
                                        _1 
                   )
# 3312 "pars.fsy"
                 : 'operatorName));
# 12558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3313 "pars.fsy"
                                          _1 
                   )
# 3313 "pars.fsy"
                 : 'operatorName));
# 12569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3314 "pars.fsy"
                                                 _1 
                   )
# 3314 "pars.fsy"
                 : 'operatorName));
# 12580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3315 "pars.fsy"
                                  "$" 
                   )
# 3315 "pars.fsy"
                 : 'operatorName));
# 12590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3316 "pars.fsy"
                                              _1 
                   )
# 3316 "pars.fsy"
                 : 'operatorName));
# 12601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3317 "pars.fsy"
                                 "-" 
                   )
# 3317 "pars.fsy"
                 : 'operatorName));
# 12611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3318 "pars.fsy"
                                "*" 
                   )
# 3318 "pars.fsy"
                 : 'operatorName));
# 12621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3319 "pars.fsy"
                                  "=" 
                   )
# 3319 "pars.fsy"
                 : 'operatorName));
# 12631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3320 "pars.fsy"
                              "or" 
                   )
# 3320 "pars.fsy"
                 : 'operatorName));
# 12641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3321 "pars.fsy"
                                "<" 
                   )
# 3321 "pars.fsy"
                 : 'operatorName));
# 12652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3322 "pars.fsy"
                                   ">" 
                   )
# 3322 "pars.fsy"
                 : 'operatorName));
# 12663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3323 "pars.fsy"
                                 "?" 
                   )
# 3323 "pars.fsy"
                 : 'operatorName));
# 12673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3324 "pars.fsy"
                               "&" 
                   )
# 3324 "pars.fsy"
                 : 'operatorName));
# 12683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3325 "pars.fsy"
                                   "&&" 
                   )
# 3325 "pars.fsy"
                 : 'operatorName));
# 12693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3326 "pars.fsy"
                                   "||" 
                   )
# 3326 "pars.fsy"
                 : 'operatorName));
# 12703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3327 "pars.fsy"
                                        ":=" 
                   )
# 3327 "pars.fsy"
                 : 'operatorName));
# 12713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3329 "pars.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs(parseState)); 
                             _1 
                   )
# 3329 "pars.fsy"
                 : 'operatorName));
# 12726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3332 "pars.fsy"
                                      _1 
                   )
# 3332 "pars.fsy"
                 : 'operatorName));
# 12737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3333 "pars.fsy"
                                   (* deprecatedOperator (lhs(parseState)); *) ".." 
                   )
# 3333 "pars.fsy"
                 : 'operatorName));
# 12747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3334 "pars.fsy"
                                           (* deprecatedOperator (lhs(parseState)); *) ".. .." 
                   )
# 3334 "pars.fsy"
                 : 'operatorName));
# 12757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3336 "pars.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 3336 "pars.fsy"
                 : 'operatorName));
# 12770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3341 "pars.fsy"
                             if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             _1 
                   )
# 3341 "pars.fsy"
                 : 'barName));
# 12782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3346 "pars.fsy"
                             [_2] 
                   )
# 3346 "pars.fsy"
                 : 'barNames));
# 12793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3348 "pars.fsy"
                             _3 :: _1 
                   )
# 3348 "pars.fsy"
                 : 'barNames));
# 12805 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3352 "pars.fsy"
                            _1 
                   )
# 3352 "pars.fsy"
                 : 'identOrOp));
# 12816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3354 "pars.fsy"
                            _1 
                   )
# 3354 "pars.fsy"
                 : 'identOrOp));
# 12827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3360 "pars.fsy"
                            [_1] 
                   )
# 3360 "pars.fsy"
                 : 'pathOp));
# 12838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3362 "pars.fsy"
                            [_1] 
                   )
# 3362 "pars.fsy"
                 : 'pathOp));
# 12849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3364 "pars.fsy"
                            _1 :: _3 
                   )
# 3364 "pars.fsy"
                 : 'pathOp));
# 12861 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3366 "pars.fsy"
                            (* silent recovery *) [_1] 
                   )
# 3366 "pars.fsy"
                 : 'pathOp));
# 12872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3371 "pars.fsy"
                                      _1 
                   )
# 3371 "pars.fsy"
                 : 'nameop));
# 12883 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3374 "pars.fsy"
                                     
                   )
# 3374 "pars.fsy"
                 : 'topSeparator));
# 12893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3375 "pars.fsy"
                                               
                   )
# 3375 "pars.fsy"
                 : 'topSeparator));
# 12903 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3376 "pars.fsy"
                                     
                   )
# 3376 "pars.fsy"
                 : 'topSeparator));
# 12913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3379 "pars.fsy"
                                                            
                   )
# 3379 "pars.fsy"
                 : 'topSeparators));
# 12924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3380 "pars.fsy"
                                                      
                   )
# 3380 "pars.fsy"
                 : 'topSeparators));
# 12936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3383 "pars.fsy"
                                     
                   )
# 3383 "pars.fsy"
                 : 'interactiveSeparator));
# 12946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3384 "pars.fsy"
                                     
                   )
# 3384 "pars.fsy"
                 : 'interactiveSeparator));
# 12956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3387 "pars.fsy"
                                                                    
                   )
# 3387 "pars.fsy"
                 : 'interactiveSeparators));
# 12967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3388 "pars.fsy"
                                                                      
                   )
# 3388 "pars.fsy"
                 : 'interactiveSeparators));
# 12979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3391 "pars.fsy"
                                                                          
                   )
# 3391 "pars.fsy"
                 : 'opt_interactiveSeparators));
# 12991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3392 "pars.fsy"
                                                  
                   )
# 3392 "pars.fsy"
                 : 'opt_interactiveSeparators));
# 13001 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3395 "pars.fsy"
                                                          
                   )
# 3395 "pars.fsy"
                 : 'opt_topSeparators));
# 13013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3396 "pars.fsy"
                                                
                   )
# 3396 "pars.fsy"
                 : 'opt_topSeparators));
# 13023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3399 "pars.fsy"
                                     
                   )
# 3399 "pars.fsy"
                 : 'seps));
# 13033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3400 "pars.fsy"
                                     
                   )
# 3400 "pars.fsy"
                 : 'seps));
# 13043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3401 "pars.fsy"
                                               
                   )
# 3401 "pars.fsy"
                 : 'seps));
# 13053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3402 "pars.fsy"
                                               
                   )
# 3402 "pars.fsy"
                 : 'seps));
# 13063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3407 "pars.fsy"
                             
                   )
# 3407 "pars.fsy"
                 : 'declEnd));
# 13073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3409 "pars.fsy"
                               
                   )
# 3409 "pars.fsy"
                 : 'declEnd));
# 13083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3411 "pars.fsy"
                            
                   )
# 3411 "pars.fsy"
                 : 'declEnd));
# 13093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3416 "pars.fsy"
                            
                   )
# 3416 "pars.fsy"
                 : 'opt_declEnd));
# 13103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3418 "pars.fsy"
                             
                   )
# 3418 "pars.fsy"
                 : 'opt_declEnd));
# 13113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3420 "pars.fsy"
                            
                   )
# 3420 "pars.fsy"
                 : 'opt_declEnd));
# 13123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3422 "pars.fsy"
                            
                   )
# 3422 "pars.fsy"
                 : 'opt_declEnd));
# 13133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3425 "pars.fsy"
                                    
                   )
# 3425 "pars.fsy"
                 : 'opt_ODECLEND));
# 13143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3426 "pars.fsy"
                                    
                   )
# 3426 "pars.fsy"
                 : 'opt_ODECLEND));
# 13153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3429 "pars.fsy"
                                     deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs(parseState)) 
                   )
# 3429 "pars.fsy"
                 : 'deprecated_opt_equals));
# 13163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3430 "pars.fsy"
                                      
                   )
# 3430 "pars.fsy"
                 : 'deprecated_opt_equals));
# 13173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3433 "pars.fsy"
                                     
                   )
# 3433 "pars.fsy"
                 : 'opt_OBLOCKSEP));
# 13183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3434 "pars.fsy"
                                    
                   )
# 3434 "pars.fsy"
                 : 'opt_OBLOCKSEP));
# 13193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3437 "pars.fsy"
                                
                   )
# 3437 "pars.fsy"
                 : 'opt_seps));
# 13204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3438 "pars.fsy"
                                
                   )
# 3438 "pars.fsy"
                 : 'opt_seps));
# 13214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3441 "pars.fsy"
                               true 
                   )
# 3441 "pars.fsy"
                 : 'opt_rec));
# 13224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3442 "pars.fsy"
                               false 
                   )
# 3442 "pars.fsy"
                 : 'opt_rec));
# 13234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3445 "pars.fsy"
                               
                   )
# 3445 "pars.fsy"
                 : 'opt_bar));
# 13244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3446 "pars.fsy"
                               
                   )
# 3446 "pars.fsy"
                 : 'opt_bar));
# 13254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3449 "pars.fsy"
                                  true 
                   )
# 3449 "pars.fsy"
                 : 'opt_inline));
# 13264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3450 "pars.fsy"
                                  false 
                   )
# 3450 "pars.fsy"
                 : 'opt_inline));
# 13274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3453 "pars.fsy"
                                   true 
                   )
# 3453 "pars.fsy"
                 : 'opt_mutable));
# 13284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3454 "pars.fsy"
                                   false 
                   )
# 3454 "pars.fsy"
                 : 'opt_mutable));
# 13294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3457 "pars.fsy"
                               
                   )
# 3457 "pars.fsy"
                 : 'doToken));
# 13304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3458 "pars.fsy"
                               
                   )
# 3458 "pars.fsy"
                 : 'doToken));
# 13314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3461 "pars.fsy"
                                
                   )
# 3461 "pars.fsy"
                 : 'doneDeclEnd));
# 13324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3462 "pars.fsy"
                                    
                   )
# 3462 "pars.fsy"
                 : 'doneDeclEnd));
# 13334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3465 "pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs(parseState)); 
                   )
# 3465 "pars.fsy"
                 : 'structOrBegin));
# 13344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3466 "pars.fsy"
                                 
                   )
# 3466 "pars.fsy"
                 : 'structOrBegin));
# 13354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3469 "pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs(parseState)); 
                   )
# 3469 "pars.fsy"
                 : 'sigOrBegin));
# 13364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3470 "pars.fsy"
                                 
                   )
# 3470 "pars.fsy"
                 : 'sigOrBegin));
# 13374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3473 "pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs(parseState)); 
                   )
# 3473 "pars.fsy"
                 : 'colonOrEquals));
# 13384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3474 "pars.fsy"
                                  
                   )
# 3474 "pars.fsy"
                 : 'colonOrEquals));
# 13394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3477 "pars.fsy"
                               
                   )
# 3477 "pars.fsy"
                 : 'opt_HASH));
# 13404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3480 "pars.fsy"
                                                     
                   )
# 3480 "pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 13414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3481 "pars.fsy"
                                                     
                   )
# 3481 "pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 13424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3482 "pars.fsy"
                              
                   )
# 3482 "pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 13434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3485 "pars.fsy"
                                                 
                   )
# 3485 "pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 13444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3486 "pars.fsy"
                              
                   )
# 3486 "pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
|]
# 13455 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 183;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : Ast.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : Ast.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : Ast.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
